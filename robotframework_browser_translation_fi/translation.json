{
    "cancel_download": {
        "name": "peruuta_lataus",
        "doc": "Peruuttaa aktiivisen latauksen.\n\n        | =Argumentit= | =Kuvaus= |\n        | lataus    | `DownloadInfo` -objekti tai latauksen tunniste, joka peruutetaan. |\n\n        [https://forum.robotframework.org/t//6478|Kommentti >>]\n        "
    },
    "close_browser": {
        "name": "sulje_selain",
        "doc": "Sulkee nykyisen selaimen.\n\n        Aktiivinen selain asetetaan selaimeksi, joka oli aktiivinen ennen tätä. Sulkee kaikki tämän\n        selaimen kontekstit ja sivut. Katso `Selain, Konteksti ja Sivu` lisätietoja selaimesta ja\n        siihen liittyvistä käsitteistä.\n\n\n        | =Argumentti=  | =Kuvaus= |\n        | ``selain`` | Suljettava selain. ``NYKYINEN`` valitsee aktiivisen selaimen. ``KAIKKI`` sulkee kaikki selaimet. Kun annetaan selaimen tunniste, kyseinen selain sulkeutuu. |\n\n\n\n        Esimerkki:\n        | `Sulje Selain`    KAIKKI        # Sulkee kaikki selaimet\n        | `Sulje Selain`    NYKYINEN    # Sulje nykyinen selain\n        | `Sulje Selain`               # Sulje nykyinen selain\n        | `Sulje Selain`    ${id}      # Sulje tunnistetta vastaava selain\n\n        [https://forum.robotframework.org/t//4239|Kommentti >>]\n        "
    },
    "close_browser_server": {
        "name": "sulje_selain_palvelin",
        "doc": "Sulje Playwright-selaimen palvelin, joka on tunnistettu sen verkkosokettipäätepisteen (wsEndpoint) perusteella.\n\n        wsEndpoint-merkkijono palautetaan `Launch Browser Server`-toiminnolla ja sitä käytetään myös `Connect To Browser`-toiminnossa.\n\n        | =Argumentit=     | =Kuvaus= |\n        | ``wsEndpoint`` | Selaimen palvelimen osoite. Esimerkki: ``ws://127.0.0.1:63784/ca69bf0e9471391e8183d9ac1e90e1ba``|\n        "
    },
    "close_context": {
        "name": "sulje_konteksti",
        "doc": "Sulkee kontekstin.\n\n        Aktiivinen konteksti asetetaan kontekstiksi, joka oli aktiivinen ennen tätä. Sulkee tähän kontekstiin kuuluvat sivut.\n        Katso `Selain, Konteksti ja Sivu` lisätietoja kontekstista ja siihen liittyvistä käsitteistä.\n\n        | =Argumentti=  | =Kuvaus= |\n        | ``konteksti`` | Suljettava konteksti. ``NYKYINEN`` valitsee aktiivisen kontekstin. ``KAIKKI`` sulkee kaikki kontekstit. Kun annetaan kontekstin tunniste, kyseinen konteksti sulkeutuu. |\n        | ``selain``    | Selain, jossa konteksti suljetaan. ``NYKYINEN`` valitsee aktiivisen selaimen. ``KAIKKI`` sulkee kaikki selaimet. Kun annetaan selaimen tunniste, kyseinen selain sulkeutuu. |\n\n        Esimerkki:\n        | `Sulje Konteksti`                          # Sulkee nykyisen kontekstin ja nykyisen selaimen\n        | `Sulje Konteksti`    NYKYINEN    NYKYINEN    # Sulkee nykyisen kontekstin ja nykyisen selaimen\n        | `Sulje Konteksti`    KAIKKI        NYKYINEN    # Sulkee kaikki nykyisen selaimen kontekstit ja nykyisen selaimen\n        | `Sulje Konteksti`    KAIKKI        KAIKKI        # Sulkee kaikki nykyisen selaimen kontekstit ja kaikki selaimet\n\n        [https://forum.robotframework.org/t//4240|Kommentti >>]\n        "
    },
    "close_page": {
        "name": "sulje_sivu",
        "doc": "Sulkee ``sivun`` ``kontekstissa`` ``selaimessa``.\n\n        Oletusarvoisesti nykyiselle kaikille kolmelle. Aktiivinen sivu asetetaan sivuksi, joka oli aktiivinen ennen tätä.\n        Katso `Selain, Konteksti ja Sivu` lisätietoja sivusta ja siihen liittyvistä käsitteistä.\n\n        ``runBeforeUnload`` määrittelee, missä suoritetaan\n        [https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event|ennen purkautumista]\n        sivunkäsittelijät. Oletusarvoisesti epätosi.\n\n\n        | =Argumentti=  | =Kuvaus= |\n        | ``sivu``    | Suljettava sivu. ``NYKYINEN`` valitsee aktiivisen sivun. ``KAIKKI`` sulkee kaikki sivut. Kun annetaan sivun tunniste, kyseinen sivu sulkeutuu. |\n        | ``konteksti`` | Konteksti, jossa sivu suljetaan. ``NYKYINEN`` valitsee aktiivisen kontekstin. ``KAIKKI`` sulkee kaikki kontekstit. Kun annetaan kontekstin tunniste, kyseinen konteksti sulkeutuu. |\n        | ``selain`` | Selain, jossa sivu suljetaan. ``NYKYINEN`` valitsee aktiivisen selaimen. ``KAIKKI`` sulkee kaikki selaimet. Kun annetaan selaimen tunniste, kyseinen selain sulkeutuu. |\n\n        Palauttaa listan sanakirjoista, jotka sisältävät tunnisteen, virheet ja konsoliviestit sivulta.\n\n        Esimerkki\n        | `Sulje Sivu`                                       # Sulkee nykyisen sivun, nykyisen kontekstin ja selaimen sisällä\n        | `Sulje Sivu`    NYKYINEN     NYKYINEN     NYKYINEN    # Sulkee nykyisen sivun, nykyisen kontekstin ja selaimen sisällä\n        | `Sulje Sivu`    KAIKKI         KAIKKI         KAIKKI        # Sulkee kaikki sivut, kaikissa konteksteissa ja selaimissa\n\n        [https://forum.robotframework.org/t//4241|Kommentti >>]\n        "
    },
    "connect_to_browser": {
        "name": "yhdistä_selaimelle",
        "doc": "Yhdistä Playwright-selaimen palvelimeen playwrightin verkkosoketin tai Chrome DevTools -protokollan kautta.\n\n        Katso `Launch Browser Server` lisätietoja siitä, miten käynnistetään Playwright-selaimen palvelin.\n\n        Katso `Selain, Konteksti ja Sivu` lisätietoja selaimesta ja siihen liittyvistä käsitteistä.\n\n        Palauttaa vakaan tunnisteen yhdistetylle selaimelle.\n\n        | =Argumentti=     | =Kuvaus= |\n        | ``wsEndpoint`` | Osoite, johon yhdistetään. Joko ``ws://`` tai ``http://`` jos käytetään cdp:tä. |\n        | ``selain``    | Avaa määritetyn selaimen. Oletusarvoisesti ``chromium``. |\n        | ``käytä_cdp``    | Yhdistä selaimelle Chrome DevTools -protokollan kautta. Oletusarvoisesti epätosi. Toimii vain kromiin perustuvien selainten kanssa. |\n\n        Selaimelle yhdistämiseksi Chrome DevTools -protokollan kautta selaimen on käynnistyttävä tämä protokolla käytössä.\n        Tämä tapahtuu yleensä käynnistämällä Chrome-selain argumentilla ``--remote-debugging-port=9222`` tai vastaavalla.\n        Kun selain toimii aktiivisena CDP:llä, on mahdollista yhdistää siihen joko verkkosoketin (``ws://``)\n        tai HTTP:n (``http://``) kautta. HTTP-yhteys voidaan ottaa käyttöön, kun ``käytä_cdp`` on asetettu todeksi.\n        Tyypillinen osoite CDP-yhteydelle on ``http://127.0.0.1:9222``.\n\n        [https://forum.robotframework.org/t//4242|Kommentti >>]\n        "
    },
    "get_browser_catalog": {
        "name": "hanki_selainkatalogi",
        "doc": "Palauttaa kaikki selaimet, niiden avoimet kontekstit ja näissä konteksteissa avoimet sivut.\n\n        Katso `Selain, Konteksti ja Sivu` lisätietoja näistä käsitteistä.\n\n        | =Argumentit= | =Kuvaus= |\n        | assertion_operator | Valinnainen tarkistusoperaattori. Katso lisätietoja `Väitteet`-osiosta. |\n        | assertion_expected | Valinnainen odotettu arvo. Katso lisätietoja `Väitteet`-osiosta. |\n        | viesti            | Valinnainen mukautettu viesti epäonnistumistilanteessa. Katso lisätietoja `Väitteet`-osiosta. |\n\n        Data jäsentyy Pythonin listaksi, joka sisältää avoimia objekteja edustavia tietoja.\n\n        Juuritasolla data sisältää listan avoimista selaimista.\n\n        Dataa voidaan manipuloida myös ``assertion_operator`` avulla esimerkiksi löytääkseen\n        tietyn tunnisteen indeksin tai sivun otsikon avulla ``then``-operaattorilla.\n\n        Paluuarvoa voidaan myös verrata odotettuun arvoon.\n\n        Esimerkki:\n        | [\n        |   {\n        |     \"tyyppi\": \"chromium\",\n        |     \"id\": \"browser=96207191-8147-44e7-b9ac-5e04f2709c1d\",\n        |     \"kontekstit\": [\n        |       {\n        |         \"tyyppi\": \"konteksti\",\n        |         \"id\": \"context=525d8e5b-3c4e-4baa-bfd4-dfdbc6e86089\",\n        |         \"aktiivinenSivu\": \"page=f90c97b8-eaaf-47f2-98b2-ccefd3450f12\",\n        |         \"sivut\": [\n        |           {\n        |             \"tyyppi\": \"sivu\",\n        |             \"otsikko\": \"Robocorp\",\n        |             \"url\": \"https://robocorp.com/\",\n        |             \"id\": \"page=7ac15782-22d2-48b4-8591-ff17663fa737\",\n        |             \"aikaleima\": 1598607713.858\n        |           },\n        |           {\n        |             \"tyyppi\": \"sivu\",\n        |             \"otsikko\": \"Home - Reaktor\",\n        |             \"url\": \"https://www.reaktor.com/\",\n        |             \"id\": \"page=f90c97b8-eaaf-47f2-98b2-ccefd3450f12\",\n        |             \"aikaleima\": 1598607714.702\n        |           }\n        |         ]\n        |       }\n        |     ],\n        |     \"aktiivinenKonteksti\": \"context=525d8e5b-3c4e-4baa-bfd4-dfdbc6e86089\",\n        |     \"aktiivinenSelain\": false\n        |   },\n        |   {\n        |     \"tyyppi\": \"firefox\",\n        |     \"id\": \"browser=ad99abac-17a9-472b-ac7f-d6352630834e\",\n        |     \"kontekstit\": [\n        |       {\n        |         \"tyyppi\": \"konteksti\",\n        |         \"id\": \"context=bc64f1ba-5e76-46dd-9735-4bd344afb9c0\",\n        |         \"aktiivinenSivu\": \"page=8baf2991-5eaf-444d-a318-8045f914e96a\",\n        |         \"sivut\": [\n        |           {\n        |             \"tyyppi\": \"sivu\",\n        |             \"otsikko\": \"Software-Qualitätssicherung und Softwaretest\",\n        |             \"url\": \"https://www.imbus.de/\",\n        |             \"id\": \"page=8baf2991-5eaf-444d-a318-8045f914e96a\",\n        |             \"aikaleima\": 1598607716.828\n        |           }\n        |         ]\n        |       }\n        |     ],\n        |     \"aktiivinenKonteksti\": \"context=bc64f1ba-5e76-46dd-9735-4bd344afb9c0\",\n        |     \"aktiivinenSelain\": true\n        |   }\n        | ]\n\n        [https://forum.robotframework.org/t//4259|Kommentti >>]\n        "
    },
    "get_browser_ids": {
        "name": "hanki_selaimen_tunnisteet",
        "doc": "Palauttaa avoimien selainten tunnisteiden listan.\n        Katso `Selain, Konteksti ja Sivu` lisätietoja selaimesta ja siihen liittyvistä käsitteistä.\n\n\n        ``selain`` Oletusarvo on ``KAIKKI``\n        - ``KAIKKI`` / ``MIKÄ TAHANSA`` Palauttaa kaikki tunnisteet listana.\n        - ``AKTIIVINEN`` / ``NYKYINEN`` Palauttaa tällä hetkellä aktiivisen selaimen tunnisteen listana.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``selain`` | Selain, josta tunnisteet halutaan hakea. ``KAIKKI`` kaikista avoimista selaimista, ``AKTIIVINEN`` tällä hetkellä aktiivisesta selaimesta tai selaimen tunniste, josta tunnisteet halutaan hakea. |\n\n        AKTIIVINEN selain on synonyymi NYKYISELLE selaimelle.\n\n        [https://forum.robotframework.org/t//4260|Kommentti >>]\n        "
    },
    "get_console_log": {
        "name": "hanki_konsoliloki",
        "doc": "Palauttaa aktiivisen sivun konsolilokin.\n\n        Jos väitteitä käytetään ja ne epäonnistuvat, tämä avainsana epäonnistuu välittömästi ilman uudelleenyritystä.\n\n        | =Argumentit= | =Kuvaus= |\n        | assertion_operator | Valinnainen väitteiden operaattori. Katso lisätietoja `Väitteet`-osiosta. |\n        | assertion_expected | Valinnainen odotettu arvo. Katso lisätietoja `Väitteet`-osiosta. |\n        | viesti            | Valinnainen mukautettu viesti epäonnistumistilanteessa. Katso lisätietoja `Väitteet`-osiosta. |\n        | full               | Jos tosi, palauttaa koko konsolilokin. Jos epätosi, palauttaa vain uudet merkinnät, jotka on lisätty viime kerrasta lähtien. |\n        | last               | Jos asetettu, palauttaa vain viimeiset n merkintää. Voi olla `int`-muotoinen merkkijono merkintöjen lukumääräksi tai `timedelta`-muotoinen aikaväliksi. |\n\n        Palautettu data on konsoliviestien `list`.\n\n        Konsoliviesti on `dict` seuraavalla rakenteella:\n        | {\n        |   \"type\": str,\n        |   \"text\": str,\n        |   \"location\": {\n        |     \"url\": str,\n        |     \"lineNumber\": int,\n        |     \"columnNumber\": int\n        |   },\n        |   \"time\": str\n        | }\n\n        Esimerkki:\n        | [{\n        |   'type': 'log',\n        |   'text': 'Stuff loaded...',\n        |   'location': {\n        |     'url': 'https://example.com/js/chunk-769742de.6a462276.js',\n        |     'lineNumber': 60,\n        |     'columnNumber': 63771\n        |   },\n        |   'time': '2023-02-05T17:42:52.064Z'\n        | }]\n\n        Avaimet:\n        | =Avain= | =Kuvaus= |\n        | ``type`` | Yksi seuraavista arvoista: ``log``, ``debug``, ``info``, ``error``, ``warning``, ``dir``, ``dirxml``, ``table``, ``trace``, ``clear``, ``startGroup``, ``startGroupCollapsed``, ``endGroup``, ``assert``, ``profile``, ``profileEnd``, ``count``, ``timeEnd`` |\n        | ``text`` | Konsoliviestin teksti. |\n        | ``location.url`` | Tämän viestin luoneen resurssin URL. |\n        | ``location.lineNumber`` | Tämän viestin luoneen resurssin rivinumero (nollapohjainen). |\n        | ``location.columnNumber`` | Tämän viestin luoneen resurssin sarakenumero (nollapohjainen). |\n        | ``time`` | Lokiviestin aikaleima ISO 8601 -merkkijonona. |\n\n        [https://forum.robotframework.org/t//5267|Kommentti >>]\n        "
    },
    "get_context_ids": {
        "name": "hanki_kontekstitunnukset",
        "doc": "Palauttaa luettelon kontekstin tunnisteista selaimen valinnan perusteella.\nKatso Selain, Konteksti ja Sivu lisätietoja Kontekstista ja siihen liittyvistä käsitteistä.\n\nALL ja ANY ovat synonyymejä.\nACTIVE ja CURRENT ovat myös synonyymejä.\n\n| =Argumentit= | =Kuvaus= |\n| context | Tunnisteet, jotka halutaan hakea kontekstista. ALL palauttaa kaikki valittujen selainten tunnisteet, ACTIVE palauttaa yhden aktiivisen kontekstin kustakin valitusta selaimesta. |\n| browser | Selain, josta kontekstin tunnisteet halutaan hakea. ALL hakee tunnisteet kaikista avoimista selaimista, ACTIVE hakee tunnisteet vain aktiivisesta selaimesta. |\n\nAKTIIVINEN konteksti AKTIIVISESSA selaimessa on Nykyinen konteksti.\n\n[https://forum.robotframework.org/t//4264|Kommentti >>]\n"
        },
    "get_page_errors": {
        "name": "hanki_sivuvirheet",
        "doc": "Palauttaa aktiivisen sivun virheet.\n\nJos väitteitä käytetään ja ne epäonnistuvat, tämä avainsana epäonnistuu välittömästi ilman uudelleenyritystä.\n\n| =Argumentit= | =Kuvaus= |\n| assertion_operator | Valinnainen väiteoperaattori. Katso `Väitteet` lisätietoja varten. |\n| assertion_expected | Valinnainen odotettu arvo. Katso `Väitteet` lisätietoja varten. |\n| message            | Valinnainen mukautettu viesti, joka käytetään epäonnistumisen yhteydessä. Katso `Väitteet` lisätietoja varten. |\n| full               | Jos tosi, palauttaa täydellisen konsoli-lokin. Jos epätosi, palauttaa vain uudet merkinnät, jotka on lisätty viime kerran jälkeen. |\n| last               | Jos asetettu, palauttaa vain viimeiset n merkintää. Voi olla `int` merkintöjen lukumäärälle tai `timedelta` aikajaksolle. |\n\nPalautettu tieto on virhesanomien `lista`.\n\nVirhesanoma on `dict` seuraavalla rakenteella:\n| {\n|   \"name\": str,\n|   \"message\": str,\n|   \"stack\": str,\n|   \"time\": str\n| }\n\nEsimerkki:\n| [{\n|   'name': 'ReferenceError',\n|   'message': 'YT is not defined',\n|   'stack': 'ReferenceError: YT is not defined\\n    at HTMLIFrameElement.onload (https://example.com/:20:2245)',\n|   'time': '2023-02-05T20:08:48.912Z'\n| }]\n\nAvaimet:\n| =Avain= | =Kuvaus= |\n| ``name`` | Virheen nimi/tyyppi. |\n| ``message`` | Ihmisluettava virheviesti. |\n| ``stack`` | Virheen pinon jäljitys, jos annettu. |\n| ``time`` | Virheen aikaleima ISO 8601 -merkkijonona. |\n\n[https://forum.robotframework.org/t//5268|Kommentti >>]\n"
    },
    "get_page_ids": {
        "name": "hanki_sivutunnukset",
        "doc": "Palauttaa sivun tunnisteiden luettelon kontekstin ja selaimen valinnan perusteella.\nKatso `Selain, Konteksti ja Sivu` lisätietoja Sivusta ja siihen liittyvistä käsitteistä.\n\n``ALL`` ja ``ANY`` ovat synonyymejä.\n``ACTIVE`` ja ``CURRENT`` ovat myös synonyymejä.\n\n| =Argumentit= | =Kuvaus= |\n| ``page``    | Sivu, josta halutaan hakea tunnisteet. ``ALL`` Palauttaa kaikki sivun tunnisteet listana. ``ACTIVE`` Palauttaa aktiivisen sivun tunnisteen listana. |\n| ``context`` | Konteksti, josta halutaan hakea sivun tunnisteet. ``ALL`` Haetaan sivun tunnisteet kaikista konteksteista. ``ACTIVE`` Haetaan sivun tunnisteet vain aktiivisesta kontekstista. |\n| ``browser`` | Selain, josta halutaan hakea sivun tunnisteet. ``ALL`` Haetaan sivun tunnisteet kaikista avoimista selaimista. ``ACTIVE`` Haetaan sivun tunnisteet vain aktiivisesta selaimesta. |\n\nEsimerkki:\n| Testitapaus\n|     `Uusi Sivu`    http://www.imbus.de\n|     `Uusi Sivu`    http://www.reaktor.com\n|     ${current_page}=   `Get Page IDs`    ACTIVE    ACTIVE    ACTIVE\n|     Log                Nykyinen sivun tunniste on: ${current_page}[0]\n|     ${all_pages}=      `Get Page IDs`    CURRENT   CURRENT   ALL\n|     Log Monet           Nämä ovat kaikki sivun tunnisteet    @{all_pages}\n\nAKTIIVINEN sivu AKTIIVISESSA kontekstissa AKTIIVISESSA selaimessa on ``Nykyinen`` sivu.\n\n[https://forum.robotframework.org/t//4274|Kommentti >>]\n"
    },
    "launch_browser_server": {
        "name": "käynnistä_selainpalvelin",
        "doc": "Käynnistää uuden Playwright-selainpalvelimen määritetyillä asetuksilla.\n\nPalauttaa websocket-päätepisteen (wsEndpoint) merkkijonon, jota voidaan käyttää yhteyden muodostamiseen palvelimeen.\n\n| =Argumentit= | =Kuvaus= |\n| ``port`` | Portti, jota käytetään selainpalvelimelle. Oletusarvoisesti 0, mikä johtaa satunnaisesti vapaan portin määräämiseen. |\n| ``wsPath`` | Jos asetettu, Playwright kuuntelee annettua polkua pääportin lisäksi. Turvallisuuden vuoksi tämä oletusarvo on arvaamaton merkkijono. |\n\nKatso `Uusi Selain` muut argumenttiasiakirjat.\n\nKäynnistettyä selainpalvelinta voidaan käyttää siihen yhteyden muodostamiseen `Yhdistä Selaimelle` -avainsanalla.\nTätä avainsanaa voidaan käyttää myös komentoriviltä ``rfbrowser launch-browser-server`` -komennolla.\n\nKatso lisätietoja [https://playwright.dev/docs/api/class-browserserver#browser-server|Playwrightin dokumentaatiosta].\n\n[https://forum.robotframework.org/t//4306|Kommentti >>]\n"
    },
    "new_browser": {
        "name": "uusi_selain",
        "doc": "Luo uuden Playwright-selaimen määritetyillä asetuksilla.\n\nKatso `Selain, Konteksti ja Sivu` lisätietoja Selaimesta ja siihen liittyvistä käsitteistä.\n\nPalauttaa vakioitunnuksen luodulle selaimelle.\n\n| =Argumentit= | =Kuvaus= |\n| ``browser`` | Avaa määritetyn [#type-SupportedBrowsers|selaimen]. Oletusarvoisesti kromi. |\n| ``headless`` | Aseta epätodeksi, jos haluat graafisen käyttöliittymän. Oletusarvoisesti tosi. |\n| ``args`` | Lisäargumentit, jotka välitetään selaininstanssille. Chromium-lippujen luettelo löytyy [http://peter.sh/experiments/chromium-command-line-switches/|täältä]. Oletusarvoisesti Ei mitään. |\n| ``channel`` | Sallii toiminnan perusversiolla Google Chromen ja Microsoft Edgen selaimista. Katso lisätietoja: [https://playwright.dev/docs/browsers#google-chrome--microsoft-edge|Playwrightin dokumentaatiosta]. |\n| ``chromiumSandbox`` | Ota käyttöön Chromium-hiekkalaatikko. Oletusarvoisesti epätosi. |\n| ``devtools`` | Vain Chromium Onko avattava kehittäjätyökalupaneeli jokaiselle välilehdelle automaattisesti. |\n| ``downloadsPath`` | Jos määritetty, hyväksytyt lataukset ladataan tähän kansioon. Muuten luodaan väliaikainen kansio, joka poistetaan, kun selain suljetaan. Tiedoston poistamisesta katso `Lataus` ja `Lupaus Odottaa Latausta` -asiakirjat. |\n| ``env`` | Määrittää ympäristömuuttujat, jotka ovat näkyvissä selaimelle. Sanakirjan avaimet ovat muuttujanimiä, arvot ovat sisältöä. Oletusarvoisesti Ei mitään. |\n| ``executablePath`` | Polku selaimen käynnistettävään suoritettavaan tiedostoon paketoidun sijaan. Jos executablePath on suhteellinen polku, se ratkaistaan nykyisen työskentelykansion suhteen. Huomaa, että Playwright toimii vain pakatun Chromiumin, Firefoxin tai WebKitin kanssa, käytä omalla vastuullasi. Oletusarvoisesti Ei mitään. |\n| ``firefoxUserPrefs`` | Firefoxin käyttäjäasetukset. Lisätietoja Firefoxin käyttäjäasetuksista löytyy osoitteesta [https://support.mozilla.org/en-US/kb/about-config-editor-firefox|about:config]. |\n| ``handleSIGHUP`` | Sulje selaimen prosessi SIGHUP-signaalilla. Oletusarvoisesti tosi. |\n| ``handleSIGINT`` | Sulje selaimen prosessi Ctrl-C:llä. Oletusarvoisesti tosi. |\n| ``handleSIGTERM`` | Sulje selaimen prosessi SIGTERM-signaalilla. Oletusarvoisesti tosi. |\n| ``ignoreDefaultArgs`` | Jos tosi, Playwright ei välitä omia konfiguraatio-argumenttejaan, vaan käyttää vain niitä argsista. Jos annetaan lista, suodattaa annetut oletusargumentit. Vaarallinen vaihtoehto; käytä varoen. Oletusarvoisesti epätosi. |\n| ``proxy`` | Verkko [#type-Proxy|Proxy] -asetukset. Rakenne: ``{'server': <str>, 'bypass': <Optional[str]>, 'username': <Optional[str]>, 'password': <Optional[str]>}`` |\n| ``reuse_existing`` | Jos asetetaan todeksi, olemassa oleva selaininstanssi, joka vastaa samoja argumentteja, käytetään uudelleen. Jos vastaavaa määritettyä Selainta ei ole, aloitetaan uusi. Oletusarvoisesti tosi. |\n| ``slowMo`` | Hidastaa Playwright-toimintoja määritetyllä määrällä millisekunteja. Hyödyllinen, jotta voit nähdä, mitä tapahtuu. Oletusarvoisesti ei viivettä. |\n| ``timeout`` | Maksimiaika Robot Frameworkin aikamuodossa odottaa selaininstanssin käynnistymistä. Oletusarvoisesti 30 sekuntia. Aseta 0 poistaaksesi aikakatkaisun. |\n\n\n[https://forum.robotframework.org/t//4306|Kommentti >>]\n"
    },
    "new_context": {
        "name": "uusi_konteksti",
        "doc": "Luo uuden BrowserContextin määritetyillä asetuksilla.\n\nKatso `Selain, Konteksti ja Sivu` lisätietoja BrowserContextista.\n\nPalauttaa vakioitunnuksen luodulle kontekstille,\njota voidaan käyttää `Vaihda Kontekstiin` -avainsanassa.\n\n| =Argumentit=              | =Kuvaus= |\n| ``acceptDownloads``      | Määrittää, hyväksytäänkö kaikki liitteet automaattisesti. Oletusarvoisesti tosi, missä kaikki lataukset hyväksytään. |\n| ``baseURL``              | Kun käytetään `Mene`, `Odota Pyyntöä` tai `Odota Vastausta`, otetaan perus-URL huomioon käyttämällä URL()-rakentajaa vastaavan URL:n rakentamiseen. Oletusarvoisesti tyhjä. Esimerkit: ``baseURL=http://localhost:3000`` ja navigointi kohteeseen ``/bar.html`` johtaa ``http://localhost:3000/bar.html``. ``baseURL=http://localhost:3000/foo/`` ja navigointi kohteeseen ``./bar.html`` johtaa ``http://localhost:3000/foo/bar.html``. ``baseURL=http://localhost:3000/foo`` (ilman loppusidosta) ja navigointi kohteeseen ``./bar.html`` johtaa ``http://localhost:3000/bar.html``. |\n| ``bypassCSP``            | Käynnistää sivun Content-Security-Policy:n ohituksen. Oletusarvoisesti epätosi. |\n| ``colorScheme``          | Jäljittelee `'prefers-colors-scheme'` -mediominaisuutta, tuetut arvot ovat `'light'`, `'dark'`, `'no-preference'`. |\n| ``defaultBrowserType``   | Jos selainta ei ole avoinna ja `Uusi Konteksti` avaa uuden selaimen oletusarvoilla, se käyttää tätä asetusta. Erittäin hyödyllinen yhdessä `Hanki Laite` -avainsanan kanssa. |\n| ``deviceScaleFactor``    | Määritä laitelaitteiston mittakaavakerroin (voi ajatella dpr: nä). Oletusarvoisesti ``1``. |\n| ``extraHTTPHeaders``     | Sanakirja, joka sisältää lisä-HTTP-otsikot, jotka lähetetään jokaisen pyynnön kanssa. Kaikkien otsikkotietojen on oltava merkkijonoja. |\n| ``forcedColors``         | Jäljittelee `forced-colors` -mediominaisuutta, tuetut arvot ovat `active` ja `none`. |\n| ``geolocation``          | Sanakirja, joka sisältää ``latitude`` ja ``longitude`` tai ``accuracy`` jäljitelläkseen. Jos ``latitude`` tai ``longitude`` ei ole määritetty, laitteen maantieteellistä sijaintia ei ylikirjoiteta. |\n| ``hasTouch``             | Määrittää, tukeeko näkymä kosketustapahtumia. Oletusarvoisesti epätosi. |\n| ``httpCredentials``      | [https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication|HTTP-autentikoinnin] tunnukset. |\n| ``ignoreHTTPSErrors``    | Määrittää, ohitetaanko HTTPS-virheet navigoinnin aikana. Oletusarvoisesti epätosi. |\n| ``isMobile``             | Määrittää, otetaanko meta-viewport-tagi huomioon ja ovatko kosketustapahtumat käytössä. Oletusarvoisesti epätosi. |\n| ``javaScriptEnabled``    | Määrittää, otetaanko JavaScript käyttöön kontekstissa. Oletusarvoisesti tosi. |\n| ``locale``               | Määrittää käyttäjän kielen, esimerkiksi ``en-GB``, ``de-DE``, jne. |\n| ``offline``              | Käynnistää selaimen offline-tilan. Oletusarvoisesti epätosi. |\n| ``permissions``          | Lista, joka sisältää kaikki tässä kontekstissa oleville sivuille myönnettävät käyttöoikeudet. Kaikki käyttöoikeudet, joita ei ole lueteltu täällä, hylätään automaattisesti. |\n| ``proxy``                | Verkon proxy-asetukset, joita käytetään tässä kontekstissa. Oletusarvoisesti Ei mitään. *HUOMAA:* Chromiumissa Windowsilla selaimen on käynnistyttävä globaalilla proxyn kanssa tämän vaihtoehdon toimimiseksi. Jos kaikki kontekstit ohittavat proxyn, globaalia proxya ei koskaan käytetä ja se voi olla mikä tahansa merkkijono, esimerkiksi ``proxy={ server: 'http://per-context' }``. |\n| ``recordHar``            | Käynnistää [http://www.softwareishard.com/blog/har-12-spec/|HAR] tallennuksen kaikille sivuille tiedostoon. On oltava polku tiedostoon, esimerkki ${OUTPUT_DIR}/har.file. Jos ei ole määritetty, HARia ei tallenneta. Varmista, että odotat kontekstin sulkeutumista tallentaaksesi. |\n| ``recordVideo``          | Käynnistää videon tallennuksen kaikille sivuille kansioon. Jos ei määritetty, videoita ei tallenneta. Varmista, että suljet kontekstin videoiden tallentamiseksi. Videota ei tueta etäselaimissa. |\n| ``reduceMotion``         | Jäljittelee `prefers-reduced-motion` -mediominaisuutta, tuetut arvot ovat `reduce`, `no-preference`. |\n| ``screen``               | Jäljittelee johdonmukaisen ikkunan kokoisen näytön, joka on käytettävissä verkkosivun sisällä ikkunasta window.screen. Käytetään vain, kun näkymä on asetettu. Esimerkki {'width': 414, 'height': 896} |\n| ``serviceWorkers``       | Määrittää, sallitaanko sivustojen rekisteröidä Service workerit. Oletusarvoisesti 'salli'. |\n| ``storageState``         | Palauttaa `Tallenna Tallennustila` -avainsanalla luodun tallennustilan. On oltava täydellinen polku tiedostoon. |\n| ``timezoneId``           | Vaihtaa kontekstin aikavyöhykkeen. Katso [https://source.chromium.org/chromium/chromium/src/+/master:third_party/icu/source/data/misc/metaZones.txt|ICU:n metaZones.txt] tuetuista aikavyöhyketunnuksista. |\n| ``tracing``              | Tiedostonimi, johon [https://playwright.dev/docs/api/class-tracing/|jäljitystiedosto] tallennetaan. Esimerkki trace.zip tallennetaan ${OUTPUT_DIR}/traces.zip. Väliaikaiset jäljitystiedostot tallennetaan ${OUTPUT_DIR}/Browser/traces. Jos tiedostonimi on määritetty, jäljitys otetaan käyttöön kaikille kontekstin sivuille. Jäljitys suljetaan automaattisesti, kun konteksti suljetaan. Väliaikaiset jäljitystiedostot poistetaan automaattisesti kunkin testisuorituksen alussa. Jäljitystiedosto voidaan avata testisuorituksen jälkeen suorittamalla komento komentoriviltä: ``rfbrowser show-trace /path/to/trace.zip``. |\n| ``userAgent``            | Tietty käyttäjäagentti, jota käytetään tässä kontekstissa. |\n| ``viewport``             | Sanakirja, joka sisältää ``width`` ja ``height``. Jäljittelee johdonmukaista näkymää kullekin sivulle. Oletusarvoisesti 1280x720. nolla poistaa oletusnäkymän käytöstä. Jos ``width`` ja ``height`` ovat ``0``, näkymä skaalautuu ikkunan mukana. |\n\n\nEsimerkki:\n| Testaa iPhonella\n|     ${device}=    `Hanki Laite`    iPhone X\n|     `Uusi Konteksti`    &{device}        # purkamalla tässä käytetään &\n|     `Uusi Sivu`    http://esimerkki.com\n\nBrowserContext on Playwright-objekti, joka hallitsee yhtä selainprofiilia.\nKontekstissa välimuistit ja evästeet jaetaan. Katso\n[https://playwright.dev/docs/api/class-browser#browsernewcontextoptions|Playwright browser.newContext]\ntuetuista vaihtoehdoista.\n\nJos avointa Selainta ei ole, tämä avainsana avaa yhden. Ei luo sivuja.\n\n[https://forum.robotframework.org/t//4307|Kommentti >>]\n"
    },
    "new_page": {
        "name": "uusi_sivu",
        "doc": "Avaa uuden sivun.\n\n        Sivu on Playwrightin vastine välilehdelle. Katso `Selain, Konteksti ja Sivu`\n        lisätietoja Sivun käsitteestä.\n\n        | =Argumentit=   | =Kuvaus= |\n        | ``url``        | Valinnainen URL-sivulle navigoimiseksi. URL-osoitteen tulisi sisältää protokollan, esim. `https://` |\n        | ``wait_until`` | Milloin pitää katsella operaation onnistuneen, oletusarvo on load. Tapahtumat voivat olla: ``domcontentloaded`` - katsotaan operaation päättyneen, kun DOMContentLoaded-tapahtuma laukaistaan. ``load`` - katsotaan operaation päättyneen, kun lataustapahtuma laukaistaan. ``networkidle`` - katsotaan operaation päättyneen, kun verkko-yhteyksiä ei ole vähintään 500 ms. ``commit`` - katsotaan operaation päättyneen, kun verkko-vastaus on vastaanotettu ja asiakirja on aloittanut lataamisen. |\n\n\n        Palauttaa `UusiSivuTiedot` sanakirjana luodulle sivulle.\n        `UusiSivuTiedot` (dict) sisältää avaimet ``page_id`` ja ``video_path``. ``page_id`` on vakaa tunniste\n        luodulle sivulle. ``video_path`` on polku luotuun videoon tai tyhjä, jos videota ei ole\n        luotu.\n\n        Kun `Uusi Sivu` kutsutaan ilman avointa selainta, ensin suoritetaan `Uusi Selain`\n        ja `Uusi Konteksti` oletusarvoilla.\n\n        [https://forum.robotframework.org/t//4308|Kommentti >>]\n        "
    },
    "new_persistent_context": {
        "name": "uusi_pysyvä_konteksti",
        "doc": "Avaa uuden\n        [https://playwright.dev/docs/api/class-browsertype#browser-type-launch-persistent-context | pysyvän kontekstin].\n\n        `Uusi Pysyvä Konteksti` suorittaa käytännössä `Uusi Selain`, `Uusi Konteksti` ja `Uusi Sivu` yhdessä vaiheessa asettaen samalla profiilin.\n\n        Tämä avainsana palauttaa kolmikkona selaimen tunnuksen, kontekstin tunnuksen ja sivun tiedot. (Uusi Selainversiossa 15.0.0)\n\n        | =Argumentti=               | =Kuvaus= |\n        | ``userDataDir``          | Polku käyttäjätietojen hakemistoon, joka tallentaa selaimen istuntotiedot kuten evästeet ja paikallisen tallennustilan. Lisätietoja Chromiumista ja Firefoxista. Huomaa, että Chromiumin käyttäjätietohakemisto on \"Profiilipolun\" vanhempi hakemisto, joka näkyy osoitteessa chrome://version. Anna tyhjä merkkijono käyttääksesi tilapäistä hakemistoa. |\n        | ``browser``              | Käytettävä selaintyyppi. Oletuksena on Chromium. |\n        | ``headless``             | Ajetaanko selain päättömässä tilassa. Oletusarvo on ``True``. |\n        | muut argumentit          | Katso lisätietoja muista argumenteista `Uusi Selain`, `Uusi Konteksti` ja `Uusi Sivu`. |\n\n        Jos haluat käyttää laajennuksia, sinun on ladattava laajennus .zip-tiedostona, otettava laajennuksen lataus käyttöön ja ladattava laajennukset käyttämällä chromium-argumentteja seuraavasti. Laajennukset toimivat vain chromiumin kanssa ja päättömässä selaimessa.\n\n        | ${launch_args}=  Aseta Muuttuja  [\"--disable-extensions-except=./ublock/uBlock0.chromium\", \"--load-extension=./ublock/uBlock0.chromium\"]\n        | ${browserId}  ${contextId}  ${pageDetails}=  `Uusi Pysyvä Konteksti`  selain=chromium  headless=False  url=https://robocon,io  args=${launch_args}\n\n        Tarkista `Uusi Selain`, `Uusi Konteksti` ja `Uusi Sivu` tarkkoja argumenttiohjeita varten.\n\n        [https://forum.robotframework.org/t//4309|Kommentti >>]\n        "
    },
    "open_browser": {
        "name": "avaa_selain",
        "doc": "Avaa uuden selaininstanssin. Käytä tätä avainsanaa nopeisiin kokeiluihin tai vianmäärityssessioihin.\n\n        Käytä tuotannossa ja automatisoiduissa suorituksissa `Uusi Sivu` suoraan `Avaa Selain`-sijasta.\n        Katso `Selain, Konteksti ja Sivu` lisätietoja Selaimen ja niihin liittyvien käsitteiden suhteen.\n\n        Luo uuden selaimen, kontekstin ja sivun määritetyillä asetuksilla.\n\n\n        | =Argumentti=          | =Kuvaus= |\n        | ``url``              | Navigoi URL-osoitteeseen, jos annettu. Oletusarvo on Ei mitään. |\n        | ``browser``          | Määrittää, mitä selainta käytetään. Tuetut selaimet on lueteltu alla olevassa taulukossa. |\n        | ``headless``         | Jos asetettu epätodeksi, tarjotaan graafinen käyttöliittymä, muuten se on piilotettu. Oletusarvo on Epätosi. |\n        | ``pause_on_failure`` | Keskeytä suoritus virheen havaitessa ja jätä selain auki. Oletusarvo on Tosi. |\n        | ``bypassCSP``        | Oletusarvoisesti kiertää CSP ja mahdollistaa mukautetun skriptin liittämisen sivulle. |\n\n        Selaimet:\n\n        |   = Arvo =     |        = Nimi(et) =                                   |\n        | ``firefox``     | [https://www.mozilla.org/en-US/firefox/new|Firefox]  |\n        | ``chromium``    | [https://www.chromium.org/Home|Chromium]             |\n        | ``webkit``      | [https://webkit.org/|webkit]                         |\n\n        [https://forum.robotframework.org/t//4310|Kommentti >>]\n        "
    },
    "save_storage_state": {
        "name": "tallenna_tallennustila",
        "doc": "Tallentaa nykyisen aktiivisen kontekstin tallennustilan tiedostoon.\n\n        Verkkosovellukset käyttävät eväste- tai tunnuspohjaista todennusta, missä\n        todennettu tila tallennetaan\n        [https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies|evästeisiin]\n        tai\n        [https://developer.mozilla.org/en-US/docs/Web/API/Storage|paikalliseen tallennukseen].\n        Avainsana noutaa tallennustilan todennetuista konteksteista ja\n        tallentaa sen levylle. Tämän jälkeen `Uusi Konteksti` voidaan luoda ennaltatäytetyllä\n        tilalla.\n\n        Huomaa, että tilatiedosto saattaa sisältää salaisuuksia eikä sitä tulisi jakaa\n        organisaatiosi ulkopuolisten kanssa.\n\n        Tiedosto luodaan ${OUTPUTDIR}/browser/state -kansioon ja tiedostot\n        poistetaan automaattisesti, kun uusi testisuoritus alkaa. Avainsana\n        palauttaa tiedostopolun.\n\n        Esimerkki:\n        | Testitapaus\n        |     `Uusi konteksti`\n        |     `Uusi Sivu`    https://kirjautumissivu.html\n        |     #  Kirjautuminen\n        |     `Täytä Salainen`    id=käyttäjänimi    $käyttäjänimi\n        |     `Täytä Salainen`    id=salasana    $salasana\n        |     `Klikkaa`    id=nappi\n        |     `Hae Teksti`    id=otsikko    ==    Jotain\n        |     #  Tallenna tallennustila levylle\n        |     ${tilatiedosto} =    `Tallenna Tallennustila`\n        |     #  Luo uusi konteksti tallennetulla tilalla\n        |     `Uusi konteksti`    storageState=${tilatiedosto}\n        |     `Uusi Sivu`    https://kirjautumissivu.html\n        |     #  Kirjautumista ei tarvita, koska todennus luetaan tilatiedostosta\n        |     `Hae Teksti`    id=otsikko    ==    Jotain\n\n        [https://forum.robotframework.org/t//4318|Kommentti >>]\n        "
    },
    "set_default_run_before_unload": {
        "name": "aseta_oletusajo_ennen_purkamista",
        "doc": "Aseta oletusarvoinen runBeforeUnload-arvo, kun `Sulje Sivu` kutsutaan epäsuorasti.\n\n        Sulje Sivu kutsutaan epäsuorasti, kun\n        [https://marketsquare.github.io/robotframework-browser/Browser.html#Automatic%20page%20and%20context%20closing|sivun sulkeminen automaattisesti]\n        tapahtuu. Oletusarvo on epätosi, ja tätä avainsanaa voidaan käyttää arvon muuttamiseen.\n        Palauttaa vanhan runBeforeUnload-arvon.\n\n        [https://forum.robotframework.org/t/6203|Kommentti >>]\n        "
    },
    "switch_browser": {
        "name": "vaihda_selain",
        "doc": "Vaihtaa tällä hetkellä aktiivisen Selaimen toiseen avoinna olevaan Selaimeen.\n\n        Palauttaa vakaan tunnisteen edelliselle selaimelle.\n        Katso `Selain, Konteksti ja Sivu` lisätietoja Selaimen ja niihin liittyvien käsitteiden suhteen.\n\n        | =Argumentit= | =Kuvaus= |\n        | id          | Selaimen tunnus, johon vaihdetaan. Esimerkki: ``selain=96207191-8147-44e7-b9ac-5e04f2709c1d``. Selaimen tunnus palautetaan `Uusi Selain`-avainsanalla, kun se käynnistetään, tai se voidaan noutaa selainluettelosta `Hae Selainluettelo`-avainsanan palauttamana. |\n\n        [https://forum.robotframework.org/t//4334|Kommentti >>]\n        "
    },
    "switch_context": {
        "name": "vaihda_konteksti",
        "doc": "Vaihtaa aktiivisen Selainkontekstin toiseen avoimeen kontekstiin.\n\n        Palauttaa vakaan tunnisteen edelliselle kontekstille.\n        Katso `Selain, Konteksti ja Sivu` lisätietoja Kontekstin ja siihen liittyvien käsitteiden suhteen.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``id``      | Kontekstin tunnus, johon vaihdetaan. Esimerkki: ``context=525d8e5b-3c4e-4baa-bfd4-dfdbc6e86089``. Kontekstin tunnus palautetaan `Uusi Konteksti`-avainsanalla, kun se käynnistetään, tai se voidaan noutaa selainluettelosta `Hae Selainluettelo`-avainsanan palauttamana. |\n        | ``selain`` | Selain, jossa etsitään kyseistä kontekstia. ``CURRENT`` nykyiselle aktiiviselle selaimelle, ``ALL`` etsiäksesi kaikissa avoimissa selaimissa tai selaimen tunnus, johon konteksti vaihdetaan. |\n\n        Esimerkki:\n        | ${ensimmäinen_konteksti} =     `Uusi Konteksti`\n        | `Uusi Sivu`             ${URL1}\n        | ${toinen_konteksti} =    `Uusi Konteksti`\n        | `Uusi Sivu`             ${URL2}\n        | `Vaihda Konteksti`       ${ensimmäinen_konteksti}    # Vaihtaa takaisin ensimmäiseen kontekstiin ja sivulle.\n\n        [https://forum.robotframework.org/t//4335|Kommentti >>]\n        "
    },
    "switch_page": {
        "name": "vaihda_sivu",
        "doc": "Vaihtaa aktiivisen selainsivun toiseen avoimeen sivulle tunnuksen ``id`` tai ``UUSI`` perusteella.\n\n        Palauttaa vakaan tunnisteen ``id`` edelliselle sivulle.\n        Katso `Selain, Konteksti ja Sivu` lisätietoja Sivun ja siihen liittyvien käsitteiden suhteen.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``id``      | Sivun tunnus tai aliaksen, johon vaihdetaan. Esimerkki: ``sivu=8baf2991-5eaf-444d-a318-8045f914e96a`` tai ``UUSI``. Voi olla merkkijono tai sanakirja, joka palautetaan `Uusi Sivu`-avainsanalla. Sivun tunnus voidaan noutaa selainluettelosta `Hae Selainluettelo`-avainsanan palauttamana. ``UUSI`` voidaan käyttää vaihtaaksesi äskettäin avattuun popup-ikkunaan, ``NYKYINEN`` voidaan käyttää vaihtaaksesi aktiiviseen sivuun eri kontekstissa tai selaimessa, joka on tunnistettu niiden tunnuksella. |\n        | ``konteksti`` | Konteksti, jossa etsitään kyseistä sivua. ``NYKYINEN`` nykyiselle aktiiviselle kontekstille, ``KAikki`` etsiäksesi kaikissa avoimissa konteksteissa tai kontekstin tunnus, johon sivu vaihdetaan. |\n        | ``selain`` | Selain, jossa etsitään kyseistä sivua. ``NYKYINEN`` nykyiselle aktiiviselle selaimelle, ``KAikki`` etsiäksesi kaikissa avoimissa selaimissa tai selaimen tunnus, johon sivu vaihdetaan. |\n\n        ``Uusi`` voi aikakatkaista, jos uusia sivuja ei ole ennen kirjaston aikakatkaisua.\n\n        Esimerkki:\n        | `Klikkaa`           painike#avautuu    # Avaa uusi sivu\n        | ${edellinen} =    `Vaihda Sivu`      UUSI\n\n        [https://forum.robotframework.org/t//4336|Kommentti >>]\n        "
    },
    "clear_permissions": {
        "name": "tyhjennä_oikeudet",
        "doc": "Tyhjentää kaikki oikeudet nykyisestä kontekstista.\n\n        [https://forum.robotframework.org/t//4236|Kommentti >>]\n        "
    },
    "go_back": {
        "name": "mene_takaisin",
        "doc": "Siirtyy edelliselle sivulle historiassa.\n\n        [https://forum.robotframework.org/t//4289|Kommentti >>]\n        "
    },
    "go_forward": {
        "name": "mene_eteenpäin",
        "doc": "Siirtyy seuraavalle sivulle historiassa.\n\n        [https://forum.robotframework.org/t//4290|Kommentti >>]\n        "
    },
    "go_to": {
        "name": "siirry",
        "doc": "Siirtyy annettuun ``url``:ään.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``url`` | Siirtymiseen käytettävä URL. |\n        | ``timeout`` | Aika odottaa sivun latautumista. Jos ei määritetty, käytetään kirjaston oletusaikakatkaisuaikaa. |\n        | ``wait_until`` | Milloin operaatio katsotaan onnistuneeksi. Oletusarvo on lataus. Tapahtumat voivat olla joko: ``domcontentloaded`` - operaatio katsotaan valmiiksi, kun DOMContentLoaded-tapahtuma laukaistaan. ``load`` - operaatio katsotaan valmiiksi, kun lataustapahtuma laukaistaan. ``networkidle`` - operaatio katsotaan valmiiksi, kun verkko-yhteyksiä ei ole vähintään 500 ms ajan. ``commit`` - operaatio katsotaan valmiiksi, kun verkkovaste on vastaanotettu ja dokumentti on aloittanut latauksen. |\n\n\n        Palauttaa navigointipyynnön HTTP-tilakoodin kokonaislukuna tai 0, jos sitä ei vastaanoteta.\n\n        [https://forum.robotframework.org/t//4291|Kommentti >>]\n        "
    },
    "grant_permissions": {
        "name": "myönnä_luvat",
        "doc": "Myöntää luvat nykyiselle kontekstille.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``permissions`` | on lista myönnettävistä luvista. Luvat voivat olla seuraavista: geolocation, notifications, camera, microphone |\n        | ``origin`` | Alkuperä, jolle luvat myönnetään, esim. \"https://esimerkki.com\". |\n\n        Esimerkki:\n        | `Uusi Konteksti`\n        | `Myönnä Luvat`    geolocation\n\n        [https://forum.robotframework.org/t//4292|Kommentti >>]\n        "
    },
    "reload": {
        "name": "lataa_uudelleen",
        "doc": "Lataa nykyisen aktiivisen sivun uudelleen.\n\n        [https://forum.robotframework.org/t//4317|Kommentti >>]\n        "
    },
    "set_browser_timeout": {
        "name": "aseta_selaimen_aikakatkaisu",
        "doc": "Asettaa suurimman osan syötteistä ja getter-avainsanojen käyttämän aikakatkaisun.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``aikakatkaisu`` | Aikakatkaisu on nykyisen playwright-kontekstin ja uusien kontekstien aikakatkaisu. Tukee Robot Frameworkin [https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#time-format|aikamuotoa]. Palauttaa edellisen aikakatkaisun arvon. |\n        | ``laajuus``   | Laajuus määrittelee asetuksen voimassaoloajan. Käytettävissä olevat arvot ovat ``Globaali``, ``Kokoelma`` tai ``Testi`` / ``Tehtävä``. Katso `Laajuuden asetukset` lisätietoja varten. |\n\n        Esimerkki:\n        | ${vanha_aikakatkaisu} =    `Aseta Selaimen Aikakatkaisu`    1m 30 sekuntia\n        | Click     //button\n        | `Aseta Selaimen Aikakatkaisu`    ${vanha_aikakatkaisu}\n\n        [https://forum.robotframework.org/t//4328|Kommentti >>]\n        "
    },
    "set_geolocation": {
        "name": "aseta_maantieteellinen_sijainti",
        "doc": "Päivittää oikean kontekstin maantieteellisen sijainnin.\n\n        Leveysaste voi olla välillä -90 ja 90 ja pituusaste voi olla välillä -180 ja 180.\n        Sijainnin tarkkuuden on oltava positiivinen luku ja oletusarvo on 0. Kun\n        luodaan konteksti, myönnä ``geolocation``-oikeus sivuille lukea sen maantieteellinen sijainti.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``leveysaste`` | Leveysaste välillä -90 ja 90. |\n        | ``pituusaste`` | Pituusaste välillä -180 ja 180. |\n        | ``tarkkuus`` | Ei-negatiivinen tarkkuusarvo. Oletusarvo on 0. |\n\n        Esimerkki:\n        | ${oikeudet} =    Luo Lista    geolocation\n        | `Uusi Konteksti`    oikeudet=${oikeudet}\n        | `Aseta Maantieteellinen Sijainti`    60.173708, 24.982263    3    # Osoittaa Korkeasaareen Helsingissä.\n\n        [https://forum.robotframework.org/t//4329|Kommentti >>]\n        "
    },
    "set_offline": {
        "name": "aseta_offline_tila",
        "doc": "Vaihtaa nykyisen kontekstin offline-tilan emulaation.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``offline`` | Vaihtaa offline-tilaan. Aseta False palataksesi takaisin online-tilaan. Oletusarvo on True. |\n\n        [https://forum.robotframework.org/t//4330|Kommentti >>]\n        "
    },
    "set_retry_assertions_for": {
        "name": "aseta_uudelleenyritä_väitteet",
        "doc": "Asettaa aikakatkaisun, jota käytetään väitteiden uudelleenyrittämisessä niiden epäonnistuessa.\n\n        | =Argumentit = | =Kuvaus = |\n        | ``timeout`` | Väitteiden uudelleenyrittämisen aikakatkaisu määrittää, kuinka kauan Browser-kirjasto yrittää uudelleen väitettä todeksi. |\n        | ``scope``   | Kesto määrittää asetuksen elinkaaren. Käytettävissä olevat arvot ovat ``Global``, ``Suite`` tai ``Test`` / ``Task``. Katso lisätietoja kohdasta `Kesto`. |\n\n        Toinen avainsana `Aseta selaimen aikakatkaisu` hallitsee sitä, kuinka kauan Playwright odottaa solmun puolella, kunnes elementit täyttävät tietyt avainsanan vaatimukset.\n\n        Palauttaa väitteiden uudelleenyrittämisen aikakatkaisun aiemman arvon.\n\n        Esimerkki:\n        | `Aseta selaimen aikakatkaisu`    10 sekuntia\n        | ${vanha} =    `Aseta uudelleenyritä väitteet`    30s\n        | `Hae otsikko`    ==    Kirjautumissivu\n        | `Aseta uudelleenyritä väitteet`    ${vanha}\n\n        Esimerkki odottaa 10 sekuntia Playwrightilla saadakseen sivun otsikon, ja kirjasto yrittää uudelleen 30 sekuntia varmistaakseen, että otsikko on oikein.\n\n        [https://forum.robotframework.org/t//4331|Kommentti >>]\n        "
    },
    "set_selector_prefix": {
        "name": "aseta_valitsimen_etuliite",
        "doc": "Asettaa etuliitteen kaikille valitsimille annetussa kehikossa.\n\n        | =Argumentit = | =Kuvaus = |\n        | ``etuliite``   | Etuliite kaikille valitsimille. Etuliite ja valitsin erotetaan yhdellä välilyönnillä. Käytä ``${None}`` tai ``${EMPTY}`` poistaaksesi etuliitteen käytöstä. |\n        | ``kesto``   | Kesto määrittää asetuksen elinkaaren. Käytettävissä olevat arvot ovat ``Global``, ``Suite`` tai ``Test`` / ``Task``. Katso lisätietoja kohdasta `Kesto`. |\n\n        Palauttaa aiemman etuliitteen arvon.\n\n        Esimerkki:\n        | ${vanha} =    `Aseta valitsimen etuliite`    iframe#upotettu_sivu >>>\n        | `Klikkaa`    painike#kirjautumis_painike       # Klikkaa painiketta upotetun kehyksen sisällä valitsimella ``iframe#upotettu_sivu >>> painike#kirjautumis_painike``\n        | `Aseta valitsimen etuliite`    ${vanha}\n\n        Esimerkki klikkaa painiketta, jonka id on ``kirjautumis_painike`` upotetun kehyksen sisällä, jonka id on ``upotettu_sivu``.\n        Tuloksena oleva valitsin on ``iframe#upotettu_sivu >>> painike#kirjautumis_painike``.\n\n        Tämän etuliitteen vaikutus voidaan poistaa lisäämällä valitsimeen ``!etuliite ``, jossa on peräkkäinen välilyönti,\n        yksittäisiin avainsanakutsuihin. esim. ``!etuliite id=painike_ulkopuolella_kehystä``\n\n        `Hae elementti`, `Hae elementit`, `Hae elementti nimellä` ja `Hae elementti roolilla`\n        etuliitteeseen lisätään automaattisesti ``!etuliite ``, jotta niitä voi käyttää suoraan ilman etuliitteen asettamista ``${None}`` ennen käyttöä.\n\n        [https://forum.robotframework.org/t//4741|Kommentti >>]\n        "
    },
    "set_viewport_size": {
        "name": "aseta_näkymäkentän_koko",
        "doc": "Asettaa nykyisen sivun näkymäkentän koon määritettyihin mittoihin.\n\n        Useiden sivujen ollessa yhdessä selaimessa,\n        kullakin sivulla voi olla oma näkymäkentän koko. Kuitenkin,\n        `Uusi konteksti` mahdollistaa näkymäkentän koon (ja enemmän) asettamisen kaikille\n        myöhemmin avatuille sivuille kontekstissa kerrallaan.\n\n        `Aseta näkymäkentän koko` muuttaa sivun kokoa.\n        Monet verkkosivustot eivät odota puhelimien muuttuvan koosta,\n        joten näkymäkentän koko tulisi asettaa ennen sivulle siirtymistä\n        `Uudessa kontekstissa` ennen sivun avaamista.\n\n        | =Argumentit = | =Kuvaus = |\n        | ``leveys`` | Asettaa leveyden koon. |\n        | ``korkeus`` | Asettaa korkeuden koon. |\n\n        [https://forum.robotframework.org/t//4333|Kommentti >>]\n        "
    },
    "show_keyword_banner": {
        "name": "näytä_avainsanabanneri",
        "doc": "Ohjaa, näytetäänkö avainsanabanneri sivulla vai ei.\n\n        Avainsanakutsun banneri on CSS-kerros, joka näyttää parhaillaan suoritetun avainsanan suoraan sivulla.\n        Tämä on hyödyllistä vianmäärityksessä ja testien suorituksen näyttämisessä videon tallennuksissa.\n        Oletuksena banneria ei näytetä sivulla paitsi kun suoritetaan esittelijätilassa.\n\n        Banneria voidaan ohjata Browser-kirjaston tuontiasetuksella. (ks. `Tuonti`-osio)\n\n        | =Argumentit = | =Kuvaus = |\n        | ``näytä`` | Jos `True`, banneri näytetään sivulla. Jos `False`, banneri ei näytetä sivulla. Jos `None`, banneri näytetään sivulla vain suoritettaessa esittelijätilassa. |\n        | ``tyyli`` | Lisätyylit, jotka halutaan soveltaa banneriin. Nämä tyylit ovat CSS-asetuksia ja voivat korvata olemassa olevia asetuksia bannerille. |\n        | ``laajuus`` | Laajuus määrittelee kyseisen asetuksen elinajan. Käytettävissä olevat arvot ovat ``Global``, ``Suite`` tai ``Test`` / ``Task``. Katso lisätietoja kohdasta `Laajuus`. |\n\n        Esimerkki:\n        | Näytä Avainsanabanneri     True    top: 5px; bottom: auto; left: 5px; background-color: #00909077; font-size: 9px; color: black;   # Näyttää bannerin vasemman yläkulman kulmassa mukautetuilla tyyleillä\n        | Näytä Avainsanabanneri     False   # Piilottaa bannerin\n\n        [https://forum.robotframework.org/t//4716|Kommentti >>]\n        "
    },
    "take_screenshot": {
        "name": "ota_näyttökuva",
        "doc": "Ottaa kuvakaappauksen nykyisestä ikkunasta tai elementistä ja tallentaa sen levylle.\n\n        | =Argumentit = | =Kuvaus = |\n        | ``tiedostonimi`` | Tiedostonimi, johon tallennetaan. Tiedosto tallennetaan oletuksena robot-kehyksen  ${OUTPUTDIR}/browser/screenshot-hakemistoon, mutta sitä voidaan muokata antamalla mukautettu polku tai tiedostonimi. Merkkijono ``{indeksi}`` tiedostonimessä korvataan rullaavalla numerolla. Käytä tätä, jotta et korvaa tiedostonimiä. Jos tiedostonimi on EMBED (kirjoitusasulla ei ole väliä) tai ${NONE}, kuvakaappaus upotetaan Base64-kuvana log.html-tiedostoon. Kuva tallennetaan väliaikaisesti levylle ja näytetään varoitus, jos väliaikaisen tiedoston poistaminen epäonnistuu. ${OUTPUTDIR}/browser/-hakemisto poistetaan ensimmäisen suorituskerran alussa. |\n        | ``valitsija`` | Ota kuvakaappaus valitsimen avulla löytyvästä elementistä. Katso lisätietoja valitsimien etsimisestä osiosta `Elementtien etsiminen`. Jos valitsinta ei anneta, otetaan kuvakaappaus nykyisestä näkymästä. |\n        | ``rajaa`` | Rajaa otettu kuvakaappaus annettuun laatikkoon. Se ottaa saman sanakirjan kuin `Hanki rajauslaatikko` palauttaa. Leikkaus toimii vain sivun kuvakaappauksessa, jos valitsinta ei ole annettu. |\n        | ``poistaAnimaatiot`` | Kun asetetaan arvoon ``True``, pysäyttää CSS-animaatiot, CSS-siirtymät ja verkkosivuanimaatiot. Animaatiot käsitellään eri tavalla niiden keston perusteella:  - rajalliset animaatiot nopeutetaan loppuun, joten ne laukaisevat transitionend-tapahtuman.  - äärettömät animaatiot peruutetaan alkutilaan ja toistetaan sitten uudelleen kuvakaappauksen jälkeen. |\n        | ``tiedostotyyppi`` | ``png`` tai ``jpeg`` Määritä kuvakaappauksen tyyppi. Oletusarvo on ``png``. |\n        | ``kokosivu`` | Kun True, ottaa kuvakaappauksen koko sivun pituudelta sen sijaan, että otettaisiin nykyinen näkyvä näkymä. Oletusarvo on False. |\n        | ``loki_kuvakaappaus`` | Kun asetetaan ``False``, kuvakaappaus otetaan, mutta sitä ei kirjata log.html-tiedostoon. |\n        | ``maski`` | Määritä valitsimet, jotka tulee peittää, kun kuvakaappaus otetaan. Peitetyt elementit peitetään vaaleanpunaisella laatikolla ``#FF00FF``, joka peittää kokonaan sen rajauslaatikon. Argumentti voi ottaa yksittäisen valitsinmerkkijonon tai useiden eri elementtien valitsinmerkkijonon listan, jos useita eri elementtejä tulee peittää. |\n        | ``maskinVäri`` | Määritä peitteen laatikon väri valituille elementeille CSS-värimuodossa. Oletusväri on vaaleanpunainen #FF00FF. |\n        | ``jätäTaustaPois`` | Piilottaa oletusvalkoisen taustan ja mahdollistaa kuvakaappausten ottamisen läpinäkyvyydellä. Ei sovellu jpeg-kuville. |\n        | ``laatu`` | Kuvan laatu välillä 0-100. Ei sovellu png-kuville. |\n        | ``mittakaava`` | ``css`` tai ``laite``. ``css`` pienentää kuvan kokoa ja ``laite`` säilyttää kuvan alkuperäisessä koossa. Oletusarvo on ``laite``. |\n        | ``palauta_muodossa`` | Määrittelee, mitä tämä avainsana palauttaa. Mahdolliset arvot on dokumentoitu `Kuvakaappauksen palautustyyppi`-osiossa. Se voi olla joko polku kuvakaappauksen tiedostoon merkkijonona tai Path-objektina tai kuvan tiedot tavuina tai base64-koodattuna merkkijonona. |\n        | ``aikakatkaisu`` | Enimmäisaika, kuinka kauan kuvakaapauksen ottaminen voi kestää, oletuksena kirjaston aikakatkaisu. Tukee Robot Frameworkin aikamuotoa, kuten 10s tai 1 min, välitä 0 poistaaksesi aikakatkaisun käytöstä. Oletusarvon voi muuttaa käyttämällä `Aseta selaimen aikakatkaisu`-avainsanaa. |\n\n        Avainsana käyttää tiukkaa tilaa, jos valitsin on määritelty. Katso lisätietoja tiukasta tilasta kohdasta `Elementtien etsiminen`.\n\n        Esimerkki\n        | `Ota näyttökuva`                                 # Ottaa kuvakaappauksen sivusta oletustiedostonimellä\n        | `Ota näyttökuva`   valitsin=id=käyttäjänimi_kenttä    # Ottaa kuvakaappauksen elementistä kuvan\n        | # Ottaa kuvakaappauksen jpeg-laajennuksella, määrittelee kuvan laadun ja aikakatkaisun, kuinka kauan kuvakaapauksen ottaminen voi kestää\n        | `Ota näyttökuva`   kokosivu=True    tiedostotyyppi=jpeg    laatu=50    aikakatkaisu=10s\n        | `Ota näyttökuva`   EMBED                         # Kuvakaappaus upotetaan Base64-kuvana log.html-tiedostoon.\n\n        [https://forum.robotframework.org/t//4337|Kommentti >>]\n        "
    },
    "add_cookie": {
        "name": "lisää_eväste",
        "doc": "Lisää evästeen nykyiseen aktiiviseen selaimen kontekstiin.\n\n\n        | =Argumentit= | =Kuvaus= |\n        | ``nimi`` | Evästeen nimi. |\n        | ``arvo`` | Annetaan arvo evästeelle. |\n        | ``url`` | Annetaan URL evästeelle. Oletusarvoisesti ei mitään. Joko ``url`` tai ``domain`` / ``path`` -pari on määritettävä. |\n        | ``domain`` | Annetaan evästeen verkkotunnus. Oletusarvoisesti ei mitään. Joko ``url`` tai ``domain`` / ``path`` -pari on määritettävä. |\n        | ``polku`` | Annetaan polku evästeelle. Oletusarvoisesti ei mitään. Joko ``url`` tai ``domain`` / ``path`` -pari on määritettävä. |\n        | ``vanhentuminen`` | Annetaan evästeen vanhentumisaika. Voi olla päivämäärämuodossa tai unix-aikana. Tukee samoja muotoja kuin [http://robotframework.org/robotframework/latest/libraries/DateTime.html|DateTime] -kirjasto tai epoch-timestamppi. - esimerkki: 2027-09-28 16:21:35 |\n        | ``httpVain`` | Asettaa httpOnly-tunnuksen. |\n        | ``turvallinen`` | Asettaa turvallisen tunnuksen. |\n        | ``samaSivu`` | Asettaa samesite-tilan. |\n\n        Esimerkki:\n        | `Lisää Eväste`   foo   bar   http://osoite.com/polku/sivusto                                       # Käyttäen url-argumenttia.\n        | `Lisää Eväste`   foo   bar   verkkotunnus=esimerkki.com                polku=/foo/bar                     # Käyttäen verkkotunnusta ja url-argumentteja.\n        | `Lisää Eväste`   foo   bar   http://osoite.com/polku/sivusto   vanhentuminen=2027-09-28 16:21:35        # Vanhentuminen aikaleimana.\n        | `Lisää Eväste`   foo   bar   http://osoite.com/polku/sivusto   vanhentuminen=1822137695                 # Vanhentuminen epoch-sekunteina.\n\n        [https://forum.robotframework.org/t//4233|Kommentti >>]\n        "
    },
    "delete_all_cookies": {
        "name": "poista_kaikki_evästeet",
        "doc": "Poistaa kaikki evästeet nykyisestä aktiivisesta selaimen kontekstista.\n\n        [https://forum.robotframework.org/t//4244|Kommentti >>]\n        "
    },
    "eat_all_cookies": {
        "name": "syö_kaikki_evästeet",
        "doc": "Syö kaikki evästeet kaikille pääsiäisille.\n\n        [https://forum.robotframework.org/t//4250|Kommentti >>]\n        "
    },
    "get_cookie": {
        "name": "hae_eväste",
        "doc": "Palauttaa evästeen tiedot ``name`` mukaan joko Robot Frameworkin piste-sanakirjana tai merkkijonona.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``cookie`` | Haettavan evästeen nimi. |\n        | ``return_type`` | Paluuarvon tyyppi. Voi olla joko ``dictionary`` tai ``string``. Oletusarvo on ``dictionary``. |\n\n        Jos ``return_type`` on ``dictionary`` tai ``dict``, avainsana palauttaa Robot Frameworkin\n        [https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#accessing-list-and-dictionary-items|piste-sanakirjan]\n        Sanakirja sisältää kaikki mahdolliset evästeen avain-arvo-parit. Jos ``return_type`` on ``string`` tai ``str``,\n        avainsana palauttaa evästeen merkkijonona muodossa: ``nimi1=arvo1``. Paluuarvo sisältää vain\n        ``name`` ja ``value`` -avaimet evästeestä.\n\n        Jos evästettä ei löydy ``name``:n perusteella, avainsana epäonnistuu. Evästeen sanakirja sisältää\n        yksityiskohtia evästeestä. Sanakirjassa saatavilla olevat avaimet on dokumentoitu alla olevassa taulukossa.\n\n        | *Arvo*   | *Selitys*                                                                                  |\n        | name     | Evästeen nimi, pakollinen.                                                                |\n        | value    | Evästeen arvo, pakollinen.                                                                |\n        | url      | Määrittelee evästeen soveltamisalan, mihin URL-osoitteisiin evästeitä tulisi lähettää.   |\n        | domain   | Määrittelee, mitkä isäntäkoneet saavat vastaanottaa evästeen.                              |\n        | path     | Ilmaisee URL-polun, joka on oltava pyydettyä URL-osoitetta varten, esimerkiksi `/`.        |\n        | expiry   | Evästeen elinikä. Palautetaan datetime-objektina tai None, jos kelvollista aikaa ei saatu. |\n        | httpOnly | Kun tosi, evästettä ei voi käyttää JavaScriptin kautta.                                    |\n        | secure   | Kun tosi, evästettä käytetään vain HTTPS-yhteyksissä.                                       |\n        | sameSite | Attribuutti mahdollistaa palvelimien vaatia, ettei evästettä lähetetä ristiinoriginpyynnöissä. |\n\n        Katso\n        [https://playwright.dev/docs/api/class-browsercontext#browsercontextaddcookiescookies|playwright-dokumentaatiosta]\n        lisätietoja kustakin ominaisuudesta.\n\n        Esimerkki:\n        | ${eväste}=        `Hae Eväste`              Foobar\n        | Pitäisi Olla Sama   ${eväste.value}           Tidii\n        | Pitäisi Olla Sama   ${eväste.expiry.year}     ${2020}\n\n        [https://forum.robotframework.org/t//4265|Kommentti >>]\n        "
    },
    "get_cookies": {
        "name": "hae_evästeet",
        "doc": "Palauttaa evästeet nykyisestä aktiivisesta selaimen kontekstista.\n\n        Jos ``return_type`` on ``dictionary`` tai ``dict``, avainsana palauttaa Robot Frameworkin\n        [https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#accessing-list-and-dictionary-items|piste-sanakirjoja]\n        Sanakirja sisältää kaikki mahdolliset evästeen avain-arvo-parit. Katso `Hae eväste` -avainsanan dokumentaatiosta\n        sanakirjan avaimet ja arvot.\n\n        Jos ``return_type`` on ``string`` tai ``str``, avainsana palauttaa evästeen merkkijonona muodossa:\n        ``nimi1=arvo1; nimi2=arvo2; nimi3=arvo3``. Paluuarvo sisältää vain evästeen ``name`` ja ``value`` -avaimet.\n\n        [https://forum.robotframework.org/t//4266|Kommentti >>]\n        "
    },
    "crawl_site": {
        "name": "selaa_sivustoa",
        "doc": "\n        Verkkorobotti on työkalu, joka käy läpi kaikki tietyn URL-osoitteen verkkotunnuksen sivut.\n        Tämä tapahtuu löytämällä kaikki samalle sivustolle johtavat linkit ja avaamalla ne.\n\n        palauttaa luettelon haetuista URL-osoitteista.\n\n        | =Argumentit = | =Kuvaus= |\n        | ``url`` | on sivu, josta aloitetaan selaaminen. |\n        | ``page_crawl_keyword`` | on avainsana, joka suoritetaan jokaisella sivulla. Oletuksena se ottaa kuvakaappauksen jokaiselta sivulta. |\n        | ``max_number_of_page_to_crawl`` | on yläraja sivujen haulle. Haun lopetetaan, jos haettujen sivujen määrä ylittää tämän. |\n        | ``max_depth_to_crawl`` | on yläraja peräkkäisille linkeille, jotka seuraavat aloitussivulta. Haun lopetetaan, jos tämän syvyyden alapuolella ei ole enää linkkejä. |\n\n        [https://forum.robotframework.org/t//4243|Kommentti >>]\n        "
    },
    "get_device": {
        "name": "hae_laite",
        "doc": "Hakee yksittäisen laitteen kuvauksen, jonka nimi täsmää tarkasti annettuun nimeen.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``name`` | Haluttu laitteen nimi. Katso Playwrightin [https://github.com/microsoft/playwright/blob/master/packages/playwright-core/src/server/deviceDescriptorsSource.json|deviceDescriptorsSource.json] muotoiltu luettelo. |\n\n        Sallii tiiviin syntaksin verkkosivujen testausarvojen asettamiseksi tiettyihin\n        mobiililaitteisiin täsmäävillä tarkkuuksilla.\n\n        Käytä sitä välittämällä siihen liittyvä kontekstiin. Laitekuvauksen kanssa kontekstin luomisen jälkeen\n        varmista, että aktiivinen sivusi on kyseisessä kontekstissa.\n        Käyttö:\n\n        | ${laite}=           `Hae Laite`       iPhone X\n        | `Uusi Konteksti`    &{laite}\n        | `Uusi Sivu`\n        | `Hae Näyttökoko`   # palauttaa { \"width\": 375, \"height\": 812 }\n\n        [https://forum.robotframework.org/t//4267|Kommentti >>]\n        "
    },
    "get_devices": {
        "name": "hae_laitteet",
        "doc": "Palauttaa sanakirjan kaikista Playwrightin laitekuvauksista.\n\n        Katso Playwrightin\n        [https://github.com/microsoft/playwright/blob/master/packages/playwright-core/src/server/deviceDescriptorsSource.json|deviceDescriptorsSource.json]\n        muotoiltu luettelo.\n\n        [https://forum.robotframework.org/t//4268|Kommentti >>]\n        "
    },
    "add_style_tag": {
        "name": "lisää_tyyli_tagi",
        "doc": "Lisää <style type=\"text/css\"> -tagin sisällön kanssa.\n\n        | =Arguments= | =Kuvaus= |\n        | ``sisältö`` | Raaka CSS-sisältö ruiskutettavaksi kehykseen. |\n\n        Esimerkki:\n        | `Lisää Tyyli Tagi`    \\#käyttäjänimi_kenttä:focus {taustaväri: akva;} |\n\n        [https://forum.robotframework.org/t//4234|Kommentti >>]\n        "

    },
    "download": {
        "name": "lataa",
        "doc": "Lataa annetun URL-osoitteen sisältö.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``url`` | URL-osoite, josta tiedosto ladataan. |\n        | ``saveAs`` | Polku, johon tiedosto tallennetaan pysyvästi. Jos tyhjä, käytetään luotua ainutlaatuista polkua (GUID), ja tiedosto poistetaan, kun konteksti suljetaan. |\n        | ``wait_for_finished`` | Jos asetettu arvoon ``False``, avainsana palauttaa heti, kun lataus on aloitettu. Oletuksena ``True``. |\n        | ``download_timeout`` | Aikakatkaisu itse lataukselle, jos ``wait_for_finished`` on asetettu ``True``-arvoon. Oletuksena aikakatkaisua ei ole asetettu. |\n\n        Avainsana palauttaa `DownloadInfo` -tyyppisen sanakirjan.\n\n"
    },
    "evaluate_javascript": {
        "name": "arvioi_javascript",
        "doc": "Suorittaa annetun JavaScript-koodin valituilla elementeillä tai sivulla.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``selector`` | Valitsin, joka ratkaistaan ja välitetään JavaScript-funktiolle. Tämä on ensimmäinen argumentti, jonka funktio vastaanottaa, jos ei ole ``${None}``. ``selector`` on valinnainen ja sitä voidaan jättää pois. Jos annetaan valitsin, funktio on välttämätön, jossa on argumentti elementin käsittelijän tallentamiseksi. Esimerkiksi ``(elementti) => document.activeElement === elementti`` Katso `Elementtien löytäminen` -osio lisätietoja valitsimista. |\n        | ``*funktio`` | Kelvollinen JavaScript-funktio tai JavaScript-funktion runko. Näitä argumentteja voidaan käyttää luettavan monirivisen JavaScriptin kirjoittamiseen. |\n        | ``arg`` | Lisäargumentti, joka voidaan välittää JavaScript-funktiolle. Tämän argumentin on oltava JSON-sarjoitettavissa. Elementtikäsittelijöitä ei tueta. |\n        | ``all_elements`` | Määrittää, annetaanko funktiolle vain yksi valitsimella löydetty elementtikäsittelijä vai jos asetettu arvoon ``True``, kaikki löydetyt elementit annetaan taulukkona. |\n\n        Esimerkki ``all_elements=True``:n kanssa:\n        |  ${tekstit}=    Arvioi JavaScript    painike\n        |  ...    (elementit, arg) => {\n        |  ...        let teksti = []\n        |  ...            for (e of elementit) {\n        |  ...                console.log(e.innerText)\n        |  ...                teksti.push(e.innerText)\n        |  ...            }\n        |  ...        teksti.push(arg)\n        |  ...        return teksti\n        |  ...    }\n        |  ...    all_elements=True\n        |  ...    arg=Vain toinen teksti\n\n        Avainsana käyttää tiukkaa tilaa, jos ``all_elements`` on ``False``. Katso `Elementtien löytäminen` lisätietoja tiukasta tilasta.\n\n        [https://github.com/MarketSquare/robotframework-browser/tree/main/atest/test/06_Examples/js_evaluation.robot | Käyttöesimerkit. ]\n\n        [https://forum.robotframework.org/t//4251|Kommentti >>]\n        "
    },
    "highlight_elements": {
        "name": "korosta_elementtejä",
        "doc": "Lisää korostuksen elementteihin, jotka vastaavat ``selector``-valitsinta. Tarjoaa tyylisäädön.\n\n        Palauttaa korostettujen elementtien lukumäärän. Avainsana ei epäonnistu, jos `locator` ei vastaa yhtäkään elementtiä\n        sivulla. Avainsana ei vieritä elementtejä näkymään, ja korostettu elementti voi olla näkymän ulkopuolella. Käytä `Scroll To Element`-avainsanaa vierittääksesi elementti näkymään.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``selector`` | Valitsimet, jotka halutaan korostaa. Katso `Elementtien etsiminen` -osio tarkempien valitsintietojen saamiseksi. |\n        | ``duration`` | Määrittää kuinka kauan valitsin pysyy korostettuna. Oletusarvoisesti ``5s`` => 5 sekuntia. |\n        | ``width`` | Asettaa korostuksen reunuksen leveyden. Oletusarvo on 2px. |\n        | ``style`` | Asettaa reunuksen tyylin. Oletusarvo on pisteviiva. |\n        | ``color`` | Asettaa reunuksen värin. Kelvollisia värejä ovat esimerkiksi: ``red``, ``blue``, ``yellow``, ``pink``, ``black`` |\n\n        Avainsana ei epäonnistu, vaikka valitsin ratkaisisi useisiin elementteihin.\n\n        Esimerkki:\n        | `Korosta elementit`    input#kirjautumispainike    kesto=200ms\n        | ${lukumäärä} =    `Korosta elementit`    input#kirjautumispainike    kesto=200ms    leveys=4px    tyyli=solid    väri=\\#FF00FF\n        | Pitäisi olla yhtä suuri    ${lukumäärä}    ${5}\n\n        [https://forum.robotframework.org/t//4294|Kommentti >>]\n        "
    },
    "set_assertion_formatters": {
        "name": "aseta_väitteen_muotoilijat",
        "doc": "Aseta väitteiden muotoilijat avainsanoille.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``formatters`` | Avainsanojen ja muotoilijoiden sanakirja, jossa avain on avainsanan nimi, johon muotoilijat ovat sovellettu. Sanakirjan arvo on luettelo muotoilijoista, jotka ovat käytössä. Määritellyn avainsanan muotoilijat korvataan aina. Tyhjä luettelo poistaa kaikki muotoilijat avainsanasta. Jos ``formatters`` on tyhjä sanakirja, silloin kaikki muotoilijat poistetaan kaikista avainsanoista. |\n        | ``scope`` | Määrittää muotoilijan eliniän, mahdolliset arvot ovat Global, Suite ja Test. |\n\n        Katso `FormatterTypes` -tyypin dokumentaatiota lisätietoja varten.\n\n        On mahdollista määrittää omia muotoilijoita lambda-funktioina.\n\n        Esimerkki:\n        | `Aseta väitteiden muotoilijat`    {\"Hanki teksti\": [\"strip\", \"normaalitilassa välit\"]}  # Tämä muuttaa kaikki välit yhdeksi välilyönniksi ja poistaa välilyönnit merkkijonon alusta ja lopusta.\n        | `Aseta väitteiden muotoilijat`    {\"Hanki otsikko\": [\"sovelletaan odotettuun\",\"lambda x: x.replace(' ', '')\"]}  # Tämä poistaa kaikki välit merkkijonosta.\n        "
    },
    "check_checkbox": {
        "name": "valiste_valintaruutu",
        "doc": "Tarkistaa valintaruudun tai valitsee valintapainikkeen, jonka löytää ``selector``-valitsimen avulla.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``selector`` | Valintaruudun valitsin. Katso `Elementtien etsiminen` -osio tarkempien valitsintietojen saamiseksi. |\n        | ``force`` | Aseta Trueksi ohittaaksesi Playwrightin [https://playwright.dev/docs/actionability | Toimintakyvyn tarkistukset]. |\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien etsiminen` lisätietoja tiukasta tilasta.\n\n        Ei tee mitään, jos elementti on jo tarkistettu/valittu.\n\n        [https://forum.robotframework.org/t//4235|Kommentti >>]\n        "
    },
    "clear_text": {
        "name": "tyhjenna_teksti",
        "doc": "Tyhjentää tekstikentän, joka löytyy ``selector``-valitsimen avulla.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``selector`` | Tekstikentän valitsin. Katso `Elementtien etsiminen` -osio tarkempien valitsintietojen saamiseksi. |\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien etsiminen` lisätietoja tiukasta tilasta.\n\n        [https://forum.robotframework.org/t//4237|Kommentti >>]\n        "
    },
    "click": {
        "name": "klikkaus",
        "doc": "Simuloi hiiren napsautusta elementissä, joka löytyy ``selector``-valitsimen avulla.\n\n        Tämä avainsana napsauttaa elementtiä, joka vastaa ``selector``-valitsinta suorittamalla seuraavat vaiheet:\n        - Etsi elementti, joka vastaa valitsinta. Jos sellaista ei ole, odota, kunnes vastaava elementti liitetään DOM:aan.\n        - Odota toimintakyvyn tarkistuksia vastaavalle elementille, ellei ``force``-valintaa ole asetettu.\n          Jos elementti irrotetaan tarkistusten aikana, koko toiminto yritetään uudelleen.\n        - Vieritä elementti näkymään tarvittaessa.\n        - Käytä `Mouse Button` -toimintoa napsauttaaksesi elementin keskellä tai määritetyssä sijainnissa.\n        - Odota aloitettua siirtymistä joko onnistuakseen tai epäonnistuakseen.\n\n\n        | =Argumentit= | =Kuvaus= |\n        | ``selector`` | Napsautettava valitsimeen liittyvä elementti. Katso `Elementtien etsiminen` -osio tarkempien valitsintietojen saamiseksi. |\n        | ``button`` | Oletusarvo on ``left``, jos se on virheellinen. |\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien etsiminen` lisätietoja tiukasta tilasta.\n\n        Esimerkki:\n        | `Click`    id=button_location\n        | `Click`    id=button_location    left\n        | `Click`    id=button_location    right\n\n        [https://forum.robotframework.org/t//4238|Kommentti >>]\n        "
    },
    "click_with_options": {
        "name": "napsauta_vaihtoehtoja",
        "doc": "Simuloi hiiren napsautusta elementtiin, joka löytyy ``valitsimella``.\n\nTämä avainsana napsauttaa elementtiä, joka vastaa ``valitsinta``, suorittamalla seuraavat vaiheet:\n- Etsi elementti, joka vastaa valitsinta. Jos sellaista ei löydy, odota, kunnes vastaava elementti on liitetty DOM:iin.\n- Odota toimintakyvyn tarkistuksia vastaavalla elementillä, ellei ``pakota`` -valintaa ole asetettu.\nJos elementti irrotetaan tarkistusten aikana, koko toiminto yritetään uudelleen.\n- Vieritä elementti näkyviin tarvittaessa.\n- Käytä `Hiiren painiketta` napsauttaaksesi elementin keskellä tai määritetyssä sijainnissa.\n- Odota aloitettua siirtymää, kunnes se onnistuu tai epäonnistuu, ellei ``noWaitAfter`` -valintaa ole asetettu.\n\n\n| =Argumentit = | =Kuvaus= |\n| ``valitsin`` | Valitsimelementti, jota napsautetaan. Katso `Elementtien löytäminen` -osiosta lisätietoja valitsimista. |\n| ``painike`` | Oletusarvoisesti ``vasen``, jos virheellinen. |\n| ``*muokkaajat`` | Painettavat muokkausnäppäimet. Varmistaa, että napsautuksen aikana painetaan vain näitä muokkaajia ja palauttaa sitten nykyiset muokkaajat takaisin. Ellei määritetty, käytetään tällä hetkellä painettuja muokkaajia. Muokkaajat voidaan määrittää missä tahansa järjestyksessä, ja useita muokkaajia voidaan määrittää. Kelpaavia muokkausnäppäimiä ovat ``Control``, ``Alt``, ``Shift`` ja ``Meta``. Koska argumentti `*muokkaajat` on vain paikallinen argumentti, kaikki sitä edeltävät avainsanat on määritettävä paikallisina argumentteina ennen `*muokkaajia`. |\n| ``napsautuslaskuri`` | Oletusarvoisesti 1. |\n| ``viive`` | Aika odottaa hiiren painalluksen ja vapautuksen välillä. Oletusarvoisesti 0. |\n| ``sijainti_x`` ``sijainti_y`` | Piste, johon napsautetaan suhteessa elementin rajauslaatikon vasempaan yläkulmaan. Vain positiiviset arvot rajauslaatikossa ovat sallittuja. Ellei määritetty, napsauttaa jotakin näkyvää pistettä elementissä. |\n| ``pakota`` | Aseta ``True`` ohittaaksesi Playwrightin toimintakyvyn tarkistukset (https://playwright.dev/docs/actionability). |\n| ``eiOdotaJälkeen`` | Toimet, jotka aloittavat siirtymän, odottavat näitä siirtymiä tapahtuvan ja sivujen lataamisen aloittamista. Voit poistua odottamasta asettamalla tämän lipun. Tarvitset tätä vaihtoehtoa vain poikkeustapauksissa, kuten siirryttäessä saavuttamattomille sivuille. Oletusarvo on ``False``. |\n| ``koe`` | Kun tämä on asetettu, tämä metodi suorittaa vain toimintakyvyn tarkistukset ja ohittaa toiminnon. Oletusarvoisesti epätosi. Hyödyllinen odottamaan, kunnes elementti on valmis toimintaa varten ilman sen suorittamista. |\n\nArgumentit ``napsautuslaskuri``, ``viive``, ``sijainti_x``, ``sijainti_y``, ``pakota``, ``eiOdotaJälkeen`` ja ``koe`` ovat nimettyjä argumentteja ja ne on määritettävä niiden nimillä..\n\nAvainsana käyttää tiukkaa tilaa, katso `Elementtien löytäminen` lisätietoja tiukasta tilasta.\n\nEsimerkki:\n| `Napsauta Vaihtoehtoja`    id=button_location\n| `Napsauta Vaihtoehtoja`    id=button_location    koe=True\n| `Napsauta Vaihtoehtoja`    \\#napsautaVaihtoehdoilla    viive=100ms    napsautuslaskuri=2\n| `Napsauta Vaihtoehtoja`    id=napsautaMuokkaajilla    vasen     Alt    Meta    Shift    napsautuslaskuri=1    pakota=True\n| `Napsauta Vaihtoehtoja`    id=napsautaVaihtoehdoilla    oikea    napsautuslaskuri=2    pakota=True    eiOdotaJälkeen=True\n\n[https://forum.robotframework.org/t//5936|Kommentti >>]\n"
    },
    "deselect_options": {
        "name": "poista_valinnat",
        "doc": "Poistaa kaikki vaihtoehdot valitusta valintaelementistä, joka löytyy ``valitsimella``.\n\n| =Argumentit= | =Kuvaus= |\n| ``valitsin`` | Valitun valinta-elementin valitsin. Katso `Elementtien löytäminen` -osio tarkempia tietoja valitsimista. |\n\nJos haluat valita yhden tai useampia tiettyjä vaihtoehtoja ja tällä hetkellä on valittuna enemmän vaihtoehtoja,\nkäytä `Valitse vaihtoehdot` -avainsanaa valitaksesi lopussa valittavat vaihtoehdot.\n\nAvainsana käyttää tiukkaa tilaa, katso `Elementtien löytäminen` tarkempia tietoja tiukasta tilasta.\n\n[https://forum.robotframework.org/t//4245|Kommentti >>]\n"
    },
    "drag_and_drop": {
        "name": "vedä_ja_pudota",
        "doc": "Suorittaa Vedä&Pudota -toiminnon elementistä, joka on valittu ``lähteellä`` olevan elementin kautta elementtiin, joka on valittu ``kohdalla``.\n\n| =Argumentit= | =Kuvaus= |\n| ``lähteen_valitsin`` | Määrittää elementin, jonka keskipiste on lähtöpiste. |\n| ``kohdan_valitsin`` | Määrittää elementin, jonka keskipiste on lopetuspiste. |\n| ``askeleet`` | Määrittelee, kuinka monta välivaiheen hiiren liike-tapahtumaa lähetetään. Usein on tarpeen lähettää useampi kuin yksi välivaiheen tapahtuma halutun tuloksen saamiseksi. Oletusarvo on 1. |\n\nKatso `Elementtien löytäminen` -osio tarkempia tietoja valitsimista.\n\nEnsin se siirtää hiiren lähtöpisteeseen,\nsitten painaa vasenta hiiren painiketta,\nsitten siirtyy määrättyyn määrään askeleita lopetuspisteeseen,\nsitten vapauttaa hiiren painikkeen.\n\nLähtö- ja lopetuspiste määritellään elementin rajauslaatikon keskipisteen perusteella.\n\nAvainsana käyttää tiukkaa tilaa, katso `Elementtien löytäminen` tarkempia tietoja tiukasta tilasta.\n\nEsimerkki\n| `Vedä Ja Pudota`    \"Ympyrä\"    \"Tavoite\"\n\n[https://forum.robotframework.org/t//4247|Kommentti >>]\n"
    },
    "drag_and_drop_by_coordinates": {
        "name": "vedä_ja_pudota_koordinaattien_perusteella",
        "doc": "Suorittaa Vedä&Pudota -toiminnon koordinaatista toiseen koordinaattiin.\n\nEnsin se siirtää hiiren lähtöpisteeseen,\nsitten painaa vasenta hiiren painiketta,\nsitten siirtyy määrättyyn määrään askeleita lopetuspisteeseen,\nsitten vapauttaa hiiren painikkeen.\n\nLähtö- ja lopetuspiste määritellään ``x`` ja ``y`` -koordinaattien perusteella\nsivun näkymän vasemman yläkulman suhteen.\n\n| ``from_x`` & ``from_y`` | Määrittävät aloituspisteen sivulla. |\n| ``to_x`` & ``to_y`` | Määrittävät lopetuspisteen. |\n| ``askeleet`` | Määrittelee, kuinka monta välivaiheen hiiren liike-tapahtumaa lähetetään. Usein on tarpeen lähettää useampi kuin yksi välivaiheen tapahtuma halutun tuloksen saamiseksi. Oletusarvo on 1. |\n\nEsimerkki:\n| `Vedä Ja Pudota Koordinaattien Perusteella`\n| ...    from_x=30    from_y=30\n| ...    to_x=10    to_y=10    askeleet=20\n\n[https://forum.robotframework.org/t//4248|Kommentti >>]\n"
    },
    "drag_and_drop_relative_to": {
        "name": "vedä_ja_pudota_suhteessa",
        "doc": "Suorittaa Vedä ja Pudota -toiminnon valitusta elementistä ``selector_from`` koordinaatteihin suhteessa tuon elementin keskukseen.\n\nTätä avainsanaa voi käyttää kätevänä simuloimaan pyyhkäisytoimintoja.\n\n| =Argumentit= | =Kuvaus= |\n| ``selector_from`` | määrittää elementin, jonka keskus on lähtöpiste. |\n| ``x`` & ``y`` | määrittää loppupisteen, joka on suhteessa lähtöpisteeseen. |\n| ``steps`` | määrittää kuinka monta välivaiheen hiiren siirto -tapahtumaa lähetetään. Usein tarvitaan lähettämään useampia kuin yksi välivaiheen tapahtuma saadakseen halutun tuloksen. Oletusarvo on 1. |\n\nKatso `Elementtien löytäminen` -osio tarkemmat tiedot valitsimista.\n\nEnsin siirtää hiiren lähtöpisteeseen (boundingboxin keskelle),\nsitten painaa vasenta hiiren painiketta,\nsitten siirtyy suhteelliseen sijaintiin annettujen välivaiheiden kanssa,\nsitten vapauttaa hiiren painikkeen.\n\nAvainsana käyttää tiukkaa tilaa, katso `Elementtien löytäminen` lisätietoja tiukasta tilasta.\n\nEsimerkki\n| `Vedä Ja Pudota Suhteessa`    \"Ympyrä\"    -20    0     # Liikuttaa elementtiä 20 pikseliä vasemmalle\n\n[https://forum.robotframework.org/t//4249|Kommentoi >>]\n"
    },
    "fill_secret": {
        "name": "täytä_salainen",
        "doc": "Täyttää annetun salaisuuden muuttujasta ``variable_name`` löytyvään\n        tekstikenttään, joka on löydetty ``selector``:llä.\n\n\n        | =Argumentit= | =Kuvaus= |\n        | ``salaisuus`` | Salainen merkkijono, joka tulisi täyttää tekstikenttään. |\n        | ``valitsin`` | Tekstikentän valitsin. Katso `Elementtien löytäminen` -osio tarkemmat tiedot valitsimista. |\n        | ``pakota`` | Aseta Tosi arvoksi ohittaaksesi Playwrightin [https://playwright.dev/docs/actionability | Toimintakyky tarkistukset]. |\n\n\n        Tämä avainsana ei kirjaa salaisuutta Robot Framework -lokeihin, kun\n        avainsana ratkaisee ``salaisuus`` muuttujan sisäisesti.\n        Kun ``salaisuus`` muuttuja on etuliitteellä `$`, ilman aaltosulkeita,\n        kirjasto ratkaisee vastaavan Robot Framework -muuttujan.\n\n        Jos ``salaisuus`` muuttuja on etuliitteellä `%`, kirjasto ratkaisee\n        vastaavan ympäristömuuttujan. Esimerkiksi `$Salasana``\n        ratkaisee ``${Salasana}`` Robot Framework -muuttujan.\n        Myös ``%ENV_SALASANA`` ratkaisee ``%{ENV_SALASANA}`` ympäristömuuttujan.\n\n        *Tavallisten Robot Framework -muuttujien käyttö kuten ``${salasana}`` ei toimi!*\n\n        *Tavallinen selkeä teksti ei toimi.*\n        Jos haluat käyttää selkeää tekstiä, käytä sen sijaan `Täytä Teksti` avainsanaa.\n\n        Tämä avainsana toimii myös annetun salakirjoitetun salakirjoitetun tekstin kanssa,\n        joka on salattu Crypto-kirjastolla.\n        Katso lisätietoja [https://github.com/Snooz82/robotframework-crypto | Crypto-kirjastosta].\n\n        Jos ``enable_playwright_debug`` on otettu käyttöön kirjaston tuonnissa,\n        salaisuus näkyy aina selkeänä tekstinä playwrightin vianmäärityslokeissa,\n        riippumatta Robot Framework -lokin tasosta.\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien löytäminen` lisätietoja tiukasta tilasta.\n\n        Katso `Täytä Teksti` muut tiedot.\n\n        Esimerkki:\n        | `Täytä Salainen`    input#käyttäjänimi_kenttä    $käyttäjänimi    # Avainsana ratkaisee muuttujan arvon Robot Framework -muuttujista\n        | `Täytä Salainen`    input#käyttäjänimi_kenttä    %käyttäjänimi    # Avainsana ratkaisee muuttujan arvon ympäristömuuttujista\n\n        [https://forum.robotframework.org/t//4253|Kommentoi >>]\n        "
    },
    "fill_text": {
        "name": "täytä_teksti",
        "doc": "Tyhjentää ja täyttää annetun ``txt`` tekstillä löydettyyn tekstikenttään ``selector``:n perusteella.\n\n        Tämä metodi odottaa, että elementti, joka vastaa ``selector``:ia, ilmestyy,\n        odottaa toimintakyvyn tarkistuksia, keskittyy elementtiin, täyttää sen ja\n        laukaisee syöttötapahtuman täyttämisen jälkeen.\n\n        Jos ``selector``:ia vastaava elementti ei ole <input>, <textarea> tai\n        [contenteditable]-elementti, tämä metodi heittää virheen. Huomaa, että\n        voit antaa tyhjän merkkijonon ``txt``:nä tyhjentääksesi syötekentän.\n\n\n        | =Argumentit= | =Kuvaus= |\n        | ``selector`` | Tekstikentän valitsin. Katso `Elementtien löytäminen` -osio tarkemmat tiedot valitsimista. |\n        | ``txt`` | Teksti tekstikentälle. |\n        | ``pakota`` | Aseta Tosi arvoksi ohittaaksesi Playwrightin [https://playwright.dev/docs/actionability | Toimintakyky tarkistukset]. |\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien löytäminen` lisätietoja tiukasta tilasta.\n\n        Katso `Kirjoita Teksti` emuloidaksesi tekstiä kirjoittamalla merkkejä kerrallaan.\n\n        Esimerkki:\n        | `Täytä Teksti`    css=input#käyttäjänimi_kenttä    käyttäjänimi\n\n        [https://forum.robotframework.org/t//4254|Kommentoi >>]\n        "
    },
    "focus": {
        "name": "kohdista",
        "doc": "Siirtää fokuksen elementtiin, joka on löydetty ``selector``:n perusteella.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``selector`` | Elementin valitsin. Katso `Elementtien löytäminen` -osio tarkemmat tiedot valitsimista. |\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien löytäminen` lisätietoja tiukasta tilasta.\n\n        Jos valitsimelle ei löydy vastaavaa elementtiä, metodi odottaa, kunnes\n        vastaava elementti ilmestyy DOM:aan. Aikakatkaisu 10 sekunnin kuluttua.\n\n        [https://forum.robotframework.org/t//4255|Kommentoi >>]\n        "
    },
    "handle_future_dialogs": {
        "name": "käsittele_tulevat_dialogit",
        "doc": "Käsittele seuraava dialogi sivulla ``toiminnolla``.\n\n        Dialogi voi olla mikä tahansa varoitus-, ennen-poistumista-, vahvista- tai kysy-dialogi. Dialogin käsittely\n        on kutsuttava ennen toimintaa, kuten esimerkiksi napsautusta, joka laukaisee\n        dialogin.\n\n        Jos käsittelijää ei ole asetettu, dialogit hylätään oletuksena.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``toiminto`` | Miten varoitus käsitellään. Voi olla ``hyväksy`` tai ``hylkää``. |\n        | ``kysy_tieto`` | Arvo, joka syötetään kyselyyn. Käytetään vain, jos ``toiminto``-argumentti on ``hyväksy``. Oletusarvo on tyhjä merkkijono. |\n\n        Esimerkki:\n        | `Käsittele Tulevat Dialogit`    toiminto=hyväksy\n        | `Napsauta`                    \\#varoitukset\n\n        [https://forum.robotframework.org/t//4293|Kommentoi >>]\n        "
    },
    "hover": {
        "name": "leijuta",
        "doc": "Siirtää virtuaalisen hiiren ja vierittää elementtiin, joka löydetään ``selector``:n perusteella.\n\n        Tämä metodi leijuu elementin yli, joka vastaa ``selector``:ia suorittamalla seuraavat vaiheet:\n        - Etsi elementti, joka vastaa ``selector``:ia. Jos sellaista ei ole,\n          odota kunnes vastaava elementti on liitetty DOM:aan.\n        - Odota toimintakyvyn tarkistuksia vastaavalle elementille, ellei ``pakota``-valintaa ole asetettu.\n          Jos elementti irrotetaan tarkistusten aikana, koko toiminto yritetään uudelleen.\n        - Vieritä elementti näkyviin tarvittaessa.\n        - Käytä `Hiiren Siirto` -toimintoa leijumaan elementin keskustan yli tai määritettyyn ``sijaintiin``.\n\n\n        | =Argumentit= | =Kuvaus= |\n        | ``selector`` | Valitsin elementille, jonka yli leijutaan. Katso `Elementtien löytäminen` -osio tarkemmat tiedot valitsimista. |\n        | ``sijainti_x`` & ``sijainti_y`` | Piste, johon leijutaan suhteessa elementin bounding boxin vasempaan yläkulmaan. Jos ei ole määritetty, leijutaan elementin näkyvissä olevaan pisteeseen. Vain positiiviset arvot bounding-boxin sisällä ovat sallittuja. |\n        | ``pakota`` | Aseta Tosi arvoksi ohittaaksesi Playwrightin [https://playwright.dev/docs/actionability | Toimintakyky tarkistukset]. |\n        | ``*modifikaattorit`` | Muokkausnäppäimet painettavaksi. Varmistaa, että vain nämä muokkausnäppäimet ovat painettuna leijumisen aikana ja palauttaa sitten nykyiset muokkausnäppäimet takaisin. Jos ei ole määritetty, käytetään tällä hetkellä painettuja muokkausnäppäimiä. |\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien löytäminen` lisätietoja tiukasta tilasta.\n\n        Esimerkki:\n        | `Leijuta`    h1\n        | `Leijuta`    h1    10   20    Alt\n\n        [https://forum.robotframework.org/t//4295|Kommentoi >>]\n        "
    },
    "keyboard_input": {
        "name": "näppäimistön_syöttö",
        "doc": "Syötä tekstiä sivulle virtuaalinäppäimistöllä.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``toiminto`` | ``insertText``: Lähettää vain syöttötapahtuman, ei lähetä keydown-, keyup- tai keypress-tapahtumia. ``type``: Lähettää keydown-, keypress/input- ja keyup-tapahtuman jokaiselle merkille tekstissä. |\n        | ``syöte`` | Syötetty merkkijono. _Ei mahdollista käyttää erikoisnäppäimiä._ |\n        | ``viive`` | Aika odottaa näppäinten painallusten välissä Robot Frameworkin aikamuodossa. Oletusarvo on 0. |\n\n        *Huomio:*\n        Argumentin tyyppi `int` 'viiveelle' millisekunneissa on muutettu `timedelta` muotoon selaimessa 14.0.0. Käytä Robot Frameworkin aikamuotoa yksiköillä sen sijaan.\n\n\n        Huomautus: Erityisnäppäinten, kuten Control tai ArrowDown, painamiseksi käytä näppäimistö.painamista.\n        Muokkausnäppäimet EIVÄT vaikuta näihin metodeihin. Muokkausvaikutusten testaamiseksi käytä yksittäisiä näppäinpainalluksia `Näppäimistön Nappi paina` -toiminnolla.\n\n        Esimerkki:\n        | `Näppäimistön Syöttö`    insertText    0123456789\n\n        [https://forum.robotframework.org/t//4297|Kommentoi >>]\n        "
    },
    "keyboard_key": {
        "name": "näppäimistön_nappi",
        "doc": "Paina näppäimistön näppäintä virtuaalinäppäimistöllä tai aseta näppäin ylös tai alas.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``toiminto`` | Määrittää, pitäisikö näppäimen olla vapautettu (``ylös``), pidettynä (``alas``) tai painettuna kerran (``painallus``). ``alas`` tai ``ylös`` ovat hyödyllisiä yhdistelmissä esimerkiksi Shiftin kanssa. |\n        | ``näppäin`` | Näppäin, joka painetaan. Esimerkki kelvollisista näppäimistä ovat: ``F1`` - ``F12``, ``Digit0`` - ``Digit9``, ``KeyA`` - ``KeyZ``, ``Backquote``, ``Minus``, ``Equal``, ``Backslash``, ``Backspace``, ``Tab``, ``Delete``, ``Escape``, ``ArrowDown``, ``End``, ``Enter``, ``Home``, ``Insert``, ``PageDown``, ``PageUp``, ``ArrowRight``, ``ArrowUp`` , jne. |\n\n\n        Hyödyllisiä näppäimiä ``alas`` ja ``ylös`` ovat esimerkiksi:\n        ``Shift``, ``Control``, ``Alt``, ``Meta``, ``ShiftLeft``\n\n        Esimerkki suorituksesta:\n        | `Näppäimistön Nappi`    painallus    S\n        | `Näppäimistön Nappi`    alas     Shift\n        | `Näppäimistön Nappi`    painallus    ArrowLeft\n        | `Näppäimistön Nappi`    painallus    Delete\n        | `Näppäimistön Nappi`    ylös       Shift\n\n        Huomaa: Isojen kirjainten kirjoittaminen ei vaadi Shiftin apua. Voit kirjoittaa ne suoraan.\n\n        [https://forum.robotframework.org/t//4298|Kommentoi >>]\n        "
    },
    "mouse_button": {
        "name": "hiiren_painike",
        "doc": "Napsauttaa, painaa tai vapauttaa hiiren painiketta.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``toiminto`` | Määrittää, onko se hiiren napsautus (``napsauta``), painikeen painaminen alas (``alas``) tai sen vapauttaminen (``ylös``). |\n        | ``x``, ``y`` | Koordinaatit, joihin siirrytään ennen toiminnon suorittamista. |\n        | ``painike`` | Yksi seuraavista: ``vasen``, ``keskellä`` tai ``ylös``. Oletusarvo on ``vasen``. |\n        | ``napsautusmäärä`` | Määrittää kuinka usein painiketta napsautetaan, jos toiminto on ``napsauta``. Oletusarvo on 1. |\n        | ``viive`` | Viive Robot Frameworkin aikamuodossa hiiren painikkeen painalluksen ja vapautuksen välillä. Sitä voidaan asettaa vain, jos toiminto on ``napsauta``. |\n\n        *Huomio:*\n        Argumentin tyyppi `int` 'viiveelle' millisekunneissa on muutettu `timedelta` muotoon selaimessa 14.0.0. Käytä sen sijaan Robot Frameworkin aikamuotoa.\n        Refaktorointia varten lisää vain 'ms' viiveen numeron jälkeen.\n\n        Viiveen esimerkki:\n        | `Hiiren Painike`    napsauta    100 ms\n        | `Hiiren Painike`    napsauta    ${dyn_viive} ms\n\n        Hiiren painikkeen painamisen ja vapauttamisen välillä liikkuminen on mahdollista `Hiiren Siirrolla`.\n\n        Esimerkki:\n        | `Leijuta`                    \"Este\"           # Siirrä hiirtä elementin päälle\n        | `Hiiren Painike`              alas                 # Paina hiiren painiketta alas\n        | `Hiiren Siirto Suhteessa`    \"Este\"    500    # Vedä hiirtä\n        | `Hiiren Painike`              ylös                   # Vapauta hiiren painike\n\n        [https://forum.robotframework.org/t//4303|Kommentoi >>]\n        "
    },
    "mouse_move": {
        "name": "hiiren_siirto",
        "doc": "Sen sijaan, että käytetään valitsimia, komennolla hiiri voidaan ohjata koordinaattien avulla.\n        Klikkauskomennot jättävät virtuaalihiiiren määritettyihin koordinaatteihin.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``x`` & ``y`` | Absoluuttiset koordinaatit, jotka alkavat sivun vasemmasta yläkulmasta. |\n        | ``askeleet`` | Hiiritapahtuman väliaskelten lukumäärä. Usein on tarpeen lähettää useampi kuin yksi väliaskel halutun tuloksen saamiseksi. Oletusarvo on 1. |\n\n        Esimerkki:\n        | `Hiiren Siirto`    400    400\n\n        [https://forum.robotframework.org/t//4304|Kommentoi >>]\n        "
    },
    "mouse_move_relative_to": {
        "name": "hiiren_siirto_suhde_sijaintiin",
        "doc": "Siirtää hiiren kohdistimen suhteessa valittuun elementtiin.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``valitsin`` | Tunnistaa elementin, jonka keskipiste on aloituspiste. |\n        | ``x`` & ``y`` | Ovat suhteellisia koordinaatteja elementin bounding boxin keskipisteeseen. |\n        | ``askeleet`` | Hiiritapahtuman väliaskelten lukumäärä. Usein on tarpeen lähettää useampi kuin yksi väliaskel halutun tuloksen saamiseksi. Oletusarvo on 1. |\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien löytäminen` lisätietoja tiukasta tilasta.\n\n        Esimerkki:\n        | `Hiiren Siirto Suhteessa`    id=osoitin    -100\n\n        [https://forum.robotframework.org/t//4305|Kommentoi >>]\n        "
    },
    "mouse_wheel": {
        "name": "hiiren_rulla",
        "doc": "Simuloi käyttäjän hiiren rullan pyörimistä.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``deltaX`` & ``deltaY`` | Pikselit, jotka vieritetään vaakasuunnassa ja pystysuunnassa. |\n\n        Esimerkki:\n        | # Ennen hiiren rullan interaktiota hiiren täytyy olla sijoitettuna selainikkunaan.\n        | `Leijuta`    body\n        | `Hiiren Rulla`    0    250\n\n        [https://forum.robotframework.org/t//5186|Kommentoi >>]\n        "
    },
    "press_keys": {
        "name": "painaa_näppäimiä",
        "doc": "Kirjoittaa annetun näppäinyhdistelmän elementtiin, joka löytyy valitsimella ``selector``.\n\n\n        | =Argumentit= | =Kuvaus= |\n        | ``valitsin`` | Tekstikentän valitsin. Katso `Elementtien löytäminen` -osio lisätietoja valitsimista. |\n        | ``*näppäimet`` | Näppäimet, jotka painetaan peräkkäin. Yhdistelmämuokkaajia yhden näppäinpainalluksen kanssa, kuten ``Control+Shift+T``, voidaan yhdistää + -merkillä. |\n\n\n        Tukee arvoja kuten \"a, b\", jotka kirjoitetaan automaattisesti.\n\n        Tukee myös näppäinten tunnisteita, kuten ``ArrowLeft`` tai ``Backspace``.\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien löytäminen` lisätietoja tiukasta tilasta.\n\n        Katso playwrightin dokumentaatiosta kattavampi lista\n        tuetuista syöttönäppäimistä.\n        [https://playwright.dev/docs/api/class-page#page-press | Playwrightin pain-näppäimistödokumentaatio.]\n\n        Esimerkki:\n        | # Avainsana         Valitsin                    *Näppäimet\n        | `Painaa Näppäimiä`      //*[@id=\"käyttäjänimi_kenttä\"]    h    e   l   o   ArrowLeft   l\n\n        [https://forum.robotframework.org/t//4311|Kommentoi >>]\n        "
    },
    "record_selector": {
        "name": "tallenna_valitsin",
        "doc": "Tallentaa hiiren alla olevan valitsimen.\n\n\n        | =Argumentit= | =Kuvaus= |\n        | ``tunniste`` | teksti, joka näytetään laatikossa sivulla tallennettaessa. |\n\n        Keskity sivulle ja liikuta hiirtä elementin päälle, jonka haluat valita.\n\n        Esimerkki:\n        | ${valitsin} =    `Tallenna Valitsin`   Painike\n        | `Klikkaa`  ${valitsin}\n        | ${valitsin2} =    `Tallenna Valitsin`  Sivun otsikko\n        | `Hanki Teksti`  ${valitsin2}  ==  Odotettu teksti\n\n        [https://forum.robotframework.org/t//4315|Kommentoi >>]\n        "
    },
    "scroll_by": {
        "name": "vieritä_määrällä",
        "doc": "Vierittää elementtiä tai sivua nykyisestä sijainnista annettujen arvojen suhteen.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``valitsin`` | Elementin valitsin. Jos valitsin on ``${None}`` tai ``${Empty}``, sivua vieritään. Varmistaaksesi, että elementti on näkyvissä, käytä sen sijaan `Leijuta` -avainsanaa. Katso `Elementtien löytäminen` -osio lisätietoja valitsimista. |\n        | ``pystysuunta`` | määrittää, kuinka kaukana ja mihin suuntaan vieritään pystysuunnassa. Se voi olla positiivinen tai negatiivinen luku. Positiivinen vierittää alaspäin, kuten ``50``, negatiivinen ylöspäin, kuten ``-50``. Se voi olla prosentuaalinen arvo absoluuttisesta vieritettävästä koosta, kuten ``9.95%`` tai negatiivinen, kuten ``-10%``. Se voi olla merkkijono ``height``, määritellen vierittämään tarkasti yhden näkyvän korkeuden alas- tai ylöspäin käyttäen ``-height``. _Ole tietoinen, että jotkut sivut lataavat sisältöä laiskasti ja lataavat lisää sisältöä, kun vierität alas päin._ Käytetään nykyisen vieritettävän korkeuden prosenttiosuutta, mikä voi muuttua. |\n        | ``vaakasuunta`` | määrittää, minne vieritetään vaakasuunnassa. Toimii samalla tavalla kuin pystysuunta, mutta määrittelee positiiviset arvot oikealle ja negatiiviset arvot vasemmalle. ``width`` määrittelee vierittämään tarkasti yhden näkyvän alueen oikealle päin. |\n        | ``käytös`` | määrittää, tapahtuuko vieritys suoraan vai sujuvasti. |\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien löytäminen` lisätietoja tiukasta tilasta.\n\n        [https://forum.robotframework.org/t//4319|Kommentoi >>]\n        "
    },
    "scroll_to": {
        "name": "vieritä_kohtaan",
        "doc": "Vierittää elementtiä tai sivua absoluuttiseen sijaintiin annettujen koordinaattien perusteella.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``valitsin`` | Elementin valitsin. Jos valitsin on ``${None}`` tai ``${Empty}``, sivua vieritään. Varmistaaksesi, että elementti on näkyvissä, käytä sen sijaan `Leijuta` -avainsanaa. Katso `Elementtien löytäminen` -osio lisätietoja valitsimista. |\n        | ``pystysuunta`` | määrittää, minne vieritetään pystysuunnassa. Se voi olla positiivinen luku, kuten ``300``. Se voi olla prosentuaalinen arvo absoluuttisesta vieritettävästä koosta, kuten ``50%``. Se voi olla merkkijono, joka määrittelee vierityksen alueen ylä- tai alareunan. < ``top`` | ``bottom`` > _Ole tietoinen, että jotkut sivut lataavat sisältöä laiskasti ja lataavat lisää sisältöä, kun vierität alas päin._ Bottom määrittelee nykyisen tunnetun alareunan koordinaatin. |\n        | ``vaakasuunta`` | määrittää, minne vieritetään vaakasuunnassa. Toimii samalla tavalla kuin pystysuunta, mutta määrittelee < ``left`` | ``right`` > aloitus- ja lopetuspisteen. |\n        | ``käytös`` | määrittää, tapahtuuko vieritys suoraan vai sujuvasti. |\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien löytäminen` lisätietoja tiukasta tilasta.\n\n        [https://forum.robotframework.org/t//4320|Kommentoi >>]\n        "
    },
    "scroll_to_element": {
        "name": "vieritä_elementtiin",
        "doc": "Tämä metodi odottaa toimintakykytarkistuksia, ja yrittää sitten vierittää elementin näkyviin, ellei se ole täysin näkyvissä.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``valitsin`` | Valintaruudun valitsin. Katso `Elementtien löytäminen` -osio lisätietoja valitsimista. |\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien löytäminen` lisätietoja tiukasta tilasta.\n\n        Ei tee mitään, jos elementti on jo näkyvissä.\n\n        [https://forum.robotframework.org/t//4321|Kommentoi >>]\n        "
    },
    "select_options_by": {
        "name": "valitse_vaihtoehdot",
        "doc": "Valitsee vaihtoehdot valitsimen elementistä, joka löytyy valitsimella ``selector``.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``valitsin`` | ``<select>`` -tagin valitsimen valitsin. Katso `Elementtien löytäminen` -osio lisätietoja valitsimista. |\n        | ``attribuutti`` | Attribuutti, jonka perusteella vaihtoehdot valitaan. Voi olla ``arvo``, ``tunniste``, ``teksti`` tai ``indeksi``. Missä ``tunniste`` ja ``teksti`` ovat samoja. |\n        | ``*arvot`` | Valitut arvot. |\n\n\n        Palauttaa listan vaihtoehdoista, jotka avainsana pystyi valitsemaan. Listan kohteen tyyppi vastaa ``attribuutin`` määritystä. Esimerkiksi jos ``attribuutti`` on `tunniste`, palautettu lista sisältää tunnisteiden arvot. Tai `indeksi`-tapauksessa se sisältää valittujen indeksien luettelon.\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien löytäminen` lisätietoja tiukasta tilasta.\n\n        Jos mitään valittavia arvoja ei ole annettu, poistaa valitsimen vaihtoehdot.\n\n        Esimerkki:\n        | ${valitut} =    `Valitse Vaihtoehdot`    select[nimi=mieluiten_kanava]    tunniste    Suoramainonta\n        | Lista Sisältää Arvon    ${valitut}    Suoramainonta\n        | ${valitut} =    `Valitse Vaihtoehdot`    select[nimi=kiinnostuksen kohteet]    arvo    miehet    naiset    muut\n        | Lista Sisältää Arvon    ${valitut}    miehet\n        | Lista Sisältää Arvon    ${valitut}    naiset\n        | Lista Sisältää Arvon    ${valitut}    muut\n        | Pituus Pitäisi Olla    ${valitut}    3\n        | ${valitut} =    `Valitse Vaihtoehdot`    select[nimi=mahdolliset_kanavat]    indeksi    0    2\n        | Lista Sisältää Arvon    ${valitut}    0\n        | Lista Sisältää Arvon    ${valitut}    2\n        | ${valitut} =    `Valitse Vaihtoehdot`    select[nimi=kiinnostuksen kohteet]    teksti     Miehet    Naiset\n        | Lista Sisältää Arvon    ${valitut}    Miehet\n        | Lista Sisältää Arvon    ${valitut}    Naiset\n\n        [https://forum.robotframework.org/t//4322|Kommentoi >>]\n        "
    },
    "tap": {
        "name": "napauta",
        "doc": "Simuloi napautusta valitsimen elementillä, joka löytyy valitsimella ``selector``.\n\n        Edellyttää, että `Uusi Konteksti` -vaihtoehdon ``hasTouch`` on asetettu arvoon true.\n        Tämä metodi napauttaa elementtiä suorittamalla seuraavat vaiheet:\n        - Odota toimintakykytarkistuksia elementille, ellei force-vaihtoehtoa ole asetettu.\n        - Vieritä elementti näkyviin tarvittaessa.\n        - Käytä sivun kosketusnäyttöä napauttaaksesi elementin keskelle tai määritettyyn kohtaan.\n        - Odota aloitettujen navigointien joko onnistumista tai epäonnistumista, ellei noWaitAfter-vaihtoehtoa ole asetettu.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``valitsin`` | Valitsimen elementti, jota napautetaan. Katso `Elementtien löytäminen` -osio lisätietoja valitsimista. |\n        | ``*muokkaajat`` | Muokkausnäppäimet painettavaksi. Varmistaa, että vain nämä muokkausnäppäimet ovat painettuna napautuksen aikana ja palauttaa sitten nykyiset muokkaajat takaisin. Jos ei ole määritetty, käytetään tällä hetkellä painettuja muokkausnäppäimiä. Muokkaajat voidaan määrittää millä tahansa järjestyksessä, ja useita muokkaajia voidaan määrittää. Kelpaavat muokkausnäppäimet ovat ``Control``, ``Alt``, ``Shift`` ja ``Meta``. |\n        | ``force`` | Ohittaako toimintakykytarkistukset. Oletusarvo on false. |\n        | ``noWaitAfter`` | Toimet, jotka aloittavat navigoinnit, odottavat näiden navigointien tapahtumista ja sivujen lataamisen aloittamista. Voit jättäytyä odottamatta asettamalla tämän lipun. Tarvitset tätä vaihtoehtoa vain poikkeustapauksissa, kuten navigoitaessa saavuttamattomiin sivuihin. Oletusarvo on ``False``. |\n        | ``position_x`` ``position_y`` | Piste, johon napautetaan suhteessa elementin rajauksen vasempaan yläkulmaan. Vain positiiviset arvot rajauksen sisällä ovat sallittuja. Jos ei ole määritetty, napauttaa johonkin näkyvään pisteeseen elementissä. |\n        | ``koe`` | Kun asetettu, tämä metodi suorittaa vain toimintakykytarkistukset ja ohittaa toiminnon. Oletusarvo on ``False``.  |\n\n        Esimerkki:\n        | Uusi Konteksti    hasTouch=${False}\n        | Uusi Sivu    ${URL}\n        | Napauta    css=input#kirjautumisnappi\n\n        [https://forum.robotframework.org/t//5939|Kommentoi >>]\n        "
    },
    "type_secret": {
        "name": "kirjoita_salainen",
        "doc": "Kirjoittaa annetun salaisen muuttujan ``variable_name`` sisällön tekstikenttään, joka löytyy valitsimella ``selector``.\n\n        Tämä avainsana ei kirjaa salaisuutta Robot Frameworkin lokitiedostoihin, jos avainsana ratkaisee muuttujan arvon sisäisesti. Jos ``enable_playwright_debug`` on käytössä kirjaston tuonnissa, salaisuus näkyy aina tekstimuodossa playwrightin vianmäärityslokeissa riippumatta Robot Frameworkin lokitasosta.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``selector`` | Tekstikentän valitsin. Katso `Elementtien löytäminen` -osio lisätietoja valitsimista. |\n        | ``secret`` | Ympäristömuuttujan nimi % -etuliitteellä tai paikallinen muuttuja $ -etuliitteellä, jolla on salainen tekstiarvo. Muuttujanimiä voi käyttää sekä aaltosulkeilla että ilman. |\n        | ``viive`` | Viive yksittäisten näppäinpainallusten välillä. Se voi olla joko numero tai Robot Frameworkin aikamuoto. Aikamuodot on selitetty tarkemmin Robot Frameworkin käyttöoppaan liitteessä. Oletusarvo on ``0 ms``. Esimerkki: ``50 ms`` |\n        | ``tyhjennä`` | Aseta arvoksi false, jos kenttää ei tule tyhjentää ennen kirjoittamista. Oletusarvo on true. |\n\n        Tämä avainsana ei kirjaa salaisuutta Robot Frameworkin lokitiedostoihin, kun\n        avainsana ratkaisee ``secret`` muuttujan sisäisesti.\n        Kun ``secret`` -muuttujaan on lisätty $ -etuliite ilman aaltosulkeita,\n        kirjasto ratkaisee vastaavan Robot Framework -muuttujan.\n\n        Jos ``secret`` -muuttujaan on lisätty % -etuliite, kirjasto ratkaisee\n        vastaavan ympäristömuuttujan. Esimerkiksi `$Password` ratkaisee\n        muuttujan ``${Password}`` Robot Frameworkissa.\n        Myös ``%ENV_PWD`` ratkaisee ympäristömuuttujan ``%{ENV_PWD}``.\n\n        *Normaalien Robot Framework -muuttujien kuten ``${password}`` käyttö ei toimi!*\n\n        *Normaali tekstimuoto ei toimi.*\n        Jos haluat käyttää tavallista tekstiä, käytä sen sijaan `Kirjoita teksti` -avainsanaa.\n\n        Tämä avainsana toimii myös annetun salakirjoitetun tekstin kanssa,\n        joka on salattu Crypto-kirjastolla.\n        Katso lisätietoja osoitteesta [https://github.com/Snooz82/robotframework-crypto | Crypto Library].\n\n        Avainsana käyttää tiukkaa moodia, katso `Elementtien löytäminen` lisätietoja tiukasta moodista.\n\n        Katso `Kirjoita teksti` yksityiskohtia varten.\n\n        Esimerkki\n        | `Kirjoita salainen`    input#käyttäjänimi_kenttä    $käyttäjänimi      # Avainsana ratkaisee ${käyttäjänimi} muuttujan arvon Robot Frameworkin muuttujista\n        | `Kirjoita salainen`    input#käyttäjänimi_kenttä    %käyttäjänimi      # Avainsana ratkaisee $KÄYTTÄJÄNIMI/%KÄYTTÄJÄNIMI% muuttujan arvon ympäristömuuttujista\n        | `Kirjoita salainen`    input#käyttäjänimi_kenttä    ${käyttäjänimi}    # Robot Framework ratkaisee muuttujan arvon, mutta salaisuus voi vuotaa Robot Frameworkin tuotostiedostoihin.\n\n        [https://forum.robotframework.org/t//4338|Kommentoi >>]\n        "
    },
    "type_text": {
        "name": "kirjoita_teksti",
        "doc": "Kirjoittaa annetun ``txt`` -tekstin tekstikenttään, joka löytyy valitsimella ``selector``.\n\n        Lähettää ``keydown``, ``keypress/input`` ja ``keyup`` tapahtumat jokaiselle\n        merkille tekstillä.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``selector`` | Tekstikentän valitsin. Katso `Elementtien löytäminen` -osio lisätietoja valitsimista. |\n        | ``txt`` | Teksti tekstikenttää varten. |\n        | ``viive`` | Viive yksittäisten näppäinpainallusten välillä. Se voi olla joko numero tai Robot Frameworkin aikamuoto. Aikamuodot on selitetty tarkemmin Robot Frameworkin käyttöoppaan liitteessä. Oletusarvo on ``0 ms``. Esimerkki: ``50 ms`` |\n        | ``tyhjennä`` | Aseta arvoksi false, jos kenttää ei tule tyhjentää ennen kirjoittamista. Oletusarvo on true. |\n\n        Avainsana käyttää tiukkaa moodia, katso `Elementtien löytäminen` lisätietoja tiukasta moodista.\n\n        Katso `Täytä teksti` suoraan täyttämiseen kerralla koko tekstillä.\n\n        Esimerkki\n        | `Kirjoita teksti`    input#käyttäjänimi_kenttä    käyttäjä\n        | `Kirjoita teksti`    input#käyttäjänimi_kenttä    käyttäjä    viive=10 ms    tyhjennä=Ei\n\n        [https://forum.robotframework.org/t//4339|Kommentoi >>]\n        "
    },
    "uncheck_checkbox": {
        "name": "poista_valintaruutu",
        "doc": "Poistaa valintaruudun, joka löytyy valitsimella ``selector``.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``selector`` | Valintaruudun valitsin. Katso `Elementtien löytäminen` -osio lisätietoja valitsimista. |\n        | ``pakota`` | Aseta arvoksi True ohittaaksesi Playwrightin [https://playwright.dev/docs/actionability | Toimintavalmius-tarkistukset]. |\n\n        Avainsana käyttää tiukkaa moodia, katso `Elementtien löytäminen` lisätietoja tiukasta moodista.\n\n        Ei tee mitään, jos elementtiä ei ole valittu.\n\n        [https://forum.robotframework.org/t//4340|Kommentoi >>]\n        "
    },
    "upload_file_by_selector": {
        "name": "lataa_tiedosto_valitsimella",
        "doc": "Lataa tiedoston `polusta` valitsimella löydettyyn tiedostonsyöttökenttään.\n\n        Epäonnistuu, jos latausta ei ole suoritettu ennen kirjaston aikakatkaisua.\n        Siksi aikakatkaisua voi olla tarpeen lisätä käyttämällä `Aseta selaimen aikakatkaisu` -avainsanaa.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``valitsin`` | Määrittää tiedostonsyöttökentän. |\n        | ``polku`` | Tiedoston polku, joka halutaan ladata. |\n\n        Esimerkki:\n        | `Lataa tiedosto valitsimella`    //input[@type='file']    iso_tiedosto.zip\n\n        [https://forum.robotframework.org/t//4341|Kommentoi >>]\n        "
    },
    "wait_for_alert": {
        "name": "odota_hälytystä",
        "doc": "Palauttaa lupauksen odottaa seuraavaa valintaikkunaa sivulla, käsittelee sen toiminnolla ``toiminto`` ja valinnaisesti varmentaa valintaikkunan tekstin.\n\n        Valintaikkuna/hälytys voi olla mikä tahansa seuraavista: hälytys, ennenpoistuminen, vahvistus tai kysely.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``toiminto`` | Miten käsitellä hälytystä. Voi olla ``hyväksy`` tai ``hylkää``. |\n        | ``kyselysyöte`` | Arvo, joka syötetään kyselyyn. Käytetään vain, jos ``toiminto``-argumentti on ``hyväksy``. Oletusarvo on tyhjä merkkijono. |\n        | ``teksti`` | Valinnainen teksti, jolla varmennetaan valintaikkunan teksti. |\n        | ``aikakatkaisu`` | Valinnainen aikakatkaisu Robot Frameworkin aikamuodossa. |\n\n\n        Pääasiallinen ero tämän avainsanan ja `Käsittele tulevia valintaikkunoita`-avainsanan välillä on, että `Käsittele tulevia valintaikkunoita`-avainsana on automaattisesti lupaus. Mutta tätä avainsanaa on kutsuttava argumenttina `Lupaus`-avainsanalle. Lisäksi tämä avainsana voi valinnaisesti varmentaa valintaikkunan tekstin ja palauttaa sen. Jos ``teksti`` on argumentti ``None`` tai sitä ei ole määritetty, valintaikkunan tekstiä ei varmenneta.\n\n        Esimerkki tekstin palauttamisesta:\n\n        | ${lupaus} =         `Lupaus`    `Odota hälytystä`    toiminto=hyväksy\n        | `Klikkaa`              id=hälytykset\n        | ${teksti} =            `Odota`      ${lupaus}\n        | Pitäisi olla yhtä suuri      ${teksti}         Olen hälytys\n\n        Esimerkki tekstin varmentamisesta:\n\n        | ${lupaus} =       Lupaus To    Wait For Alert    toiminto=hyväksy    teksti=Olen hälytys\n        | Klikkaa              id=hälytykset\n        | ${teksti} =          Odota      ${lupaus}\n\n        [https://forum.robotframework.org/t//4343|Kommentoi >>]\n        "
    },
    "get_attribute": {
        "name": "hae_attribuutti",
        "doc": "Palauttaa elementin, joka on löydetty valitsimella ``valitsin``, HTML-``attribuutin``.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``valitsin`` | Valitsin, jonka tiedot halutaan noutaa. Katso osiosta `Elementtien etsiminen` tarkemmat tiedot valitsimista. |\n        | ``attribuutti`` | Pyydetty attribuutin nimi. |\n        | ``assertion_operator`` | Katso `Väittämät` lisätietoja varten. Oletusarvo on None. |\n        | ``assertion_expected`` | Odotettu arvo tilalle |\n        | ``viesti`` | korvaa oletusvirhesanoman väittämälle. |\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien etsiminen` lisätietoja tiukasta tilasta.\n\n        Valinnaisesti väittää, että attribuutin arvo vastaa odotettua arvoa. Katso\n        `Väittämät` lisätietoja varten väittämäargumenteista. Oletuksena väittämää\n        ei tehdä.\n\n        Kun valitaan attribuutti, jota ei ole läsnä, eikä väittämäoperaattoria ole asetettu,\n        avainsana epäonnistuu. Jos väittämäoperaattori on asetettu ja attribuuttia ei ole,\n        palautettu arvo on ``None``. Tätä voidaan käyttää väittämään attribuutin läsnäoloa\n        tai puuttumista.\n\n        Esimerkki-elementti:\n        | <button class=\"login button active\" id=\"enabled_button\" something>Login</button>\n\n        Esimerkkikoodi:\n        | `Hae Attribuutti`   id=enabled_button    disabled                   # EPÄONNISTUU => \"Attribuuttia 'disabled' ei löytynyt!\"\n        | `Hae Attribuutti`   id=enabled_button    disabled     ==    ${None}     # ONNISTUU => palauttaa: None\n        | `Hae Attribuutti`   id=enabled_button    something    evaluate    value is not None    # ONNISTUU =>  palauttaa: True\n        | `Hae Attribuutti`   id=enabled_button    disabled     evaluate    value is None        # ONNISTUU =>  palauttaa: True\n\n        [https://forum.robotframework.org/t//4256|Kommentoi >>]\n        "
    },
    "get_attribute_names": {
        "name": "hae_attribuutin_nimet",
        "doc": "Palauttaa elementin kaikki HTML-attribuuttinimet listana.\n\n\n        | =Argumentit= | =Kuvaus= |\n        | ``valitsin`` | Valitsin, jonka tiedot halutaan noutaa. Katso osiosta `Elementtien etsiminen` tarkemmat tiedot valitsimista. |\n        | ``assertion_operator`` | Katso `Väittämät` lisätietoja varten. Oletusarvo on None. |\n        | ``*assertion_expected`` | Odotettu arvo tilalle |\n        | ``viesti`` | korvaa oletusvirhesanoman väittämälle. |\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien etsiminen` lisätietoja tiukasta tilasta.\n\n        Valinnaisesti väittää, että attribuuttinimet vastaavat odotettua arvoa. Katso\n        `Väittämät` lisätietoja varten väittämäargumenteista. Oletuksena väittämää\n        ei tehdä.\n\n        Saatavilla olevat väittämät:\n        - ``==`` , ``!=`` ja ``contains`` / ``*=`` voivat toimia useiden arvojen kanssa\n        - ``validate`` ja ``evaluate`` hyväksyvät vain yhden yksittäisen odotetun arvon\n\n        Muut operaattorit eivät ole sallittuja.\n\n        Esimerkki:\n        | `Hae Attribuutin Nimet`    [name=\"readonly_input\"]    ==    type    name    value    readonly    # Sisältää täsmälleen nämä attribuuttinimet.\n        | `Hae Attribuutin Nimet`    [name=\"readonly_input\"]    contains    disabled    # Sisältää ainakin tämän attribuutinimen.\n\n        [https://forum.robotframework.org/t//4257|Kommentoi >>]\n        "
    },
    "get_boundingbox": {
        "name": "hae_rajaava_laatikko",
        "doc": "Hakee elementin koon ja sijainnin objektina ``{x: float, y: float, width: float, height: float}``.\n\n\n        | =Argumentit= | =Kuvaus= |\n        | ``valitsin`` | Valitsin, josta tiedot haetaan. Katso `Elementtien löytäminen` -osio tarkempia tietoja valitsimista. |\n        | ``avain`` | Valinnaisesti suodattaa palautetut arvot. Jos avaimet on asetettu ``KAIKKI``:een (oletus), palautetaan BoundingBox-sanakirjana, muuten palautetaan vain yksittäinen avainvalinta. Huomaa: Jos palautetaan vain yksi arvo, väitettä ei tarvitse *validoida* yhdistettynä ``validate``:hen ja ``value``:n muunnokseen. |\n        | ``väittämä_operaattori`` | Katso `Väitteet` lisätietoja varten. Oletusarvo on Ei mitään. |\n        | ``väittämä_odotettu`` | Odotettu arvo tilalle |\n        | ``viesti`` | Korvaa oletusvirhesanoman. |\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien löytäminen` -osio tarkempien tietojen saamiseksi tiukasta tilasta.\n\n        Valinnaisesti väittää, että arvo vastaa määritettyä väitettä. Katso\n        `Väitteet` lisätietoja varten väitteiden argumenteista. Oletuksena väitettä ei tehdä.\n\n        Esimerkkikäyttö:\n        | ${bounding_box}=    `Get BoundingBox`    id=element                 # suodattamaton\n        | Log                 ${bounding_box}                                 # {'x': 559.09375, 'y': 75.5, 'width': 188.796875, 'height': 18}\n        | ${x}=               `Get BoundingBox`    id=element    x            # suodatettu\n        | Log                 X: ${x}                                         # X: 559.09375\n        | # Väitteet:\n        | `Get BoundingBox`     id=element         width         >    180\n        | `Get BoundingBox`     id=element         ALL           validate    value['x'] > value['y']*2\n\n        [https://forum.robotframework.org/t//4258|Kommentti >>]\n        "
    },
    "get_checkbox_state": {
        "name": "hae_valintaruudun_tila",
        "doc": "Palauttaa valintaruudun tilan, joka löytyy valitsimella ``valitsin``.\n\n\n        Valinnaisesti väittää, että tila vastaa määriteltyä väittämää. Katso\n        `Väittämät` lisätietoja varten väittämäargumenteista. Oletuksena väittämää\n        ei tehdä.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``valitsin`` | Valitsin, jota tarkastellaan. Katso osiosta `Elementtien etsiminen` tarkemmat tiedot valitsimista. |\n        | ``assertion_operator`` | ``==`` ja ``!=`` ja vastaavat ovat sallittuja boolean-arvoille. Muut operaattorit eivät ole sallittuja. |\n        | ``assertion_expected`` | Odotettu tilan boolean-arvo. Merkkijonot tulkitaan boolean-arvoiksi. Kaikki merkkijonot ovat ``${True}`` paitsi seuraavat: `FALSE, NO, OFF, 0, UNCHECKED, NONE, ${EMPTY}`` (kirjoitusasusta riippumatta). Oletusarvo on valitsematon. |\n        | ``viesti`` | korvaa oletusvirhesanoman väittämälle. |\n\n        - ``valittu`` => ``True``\n        - ``valitsematon`` => ``False``\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien etsiminen` lisätietoja tiukasta tilasta.\n\n        Esimerkki:\n        | `Hae Valintaruudun Tila`    [name=can_send_email]    ==    valittu\n\n        [https://forum.robotframework.org/t//4261|Kommentoi >>]\n        "
    },
    "get_classes": {
        "name": "hae_luokat",
        "doc": "Palauttaa elementin kaikki luokat listana.\n\n\n        | =Argumentit= | =Kuvaus= |\n        | ``valitsin`` | Valitsin, jonka tiedot haetaan. Katso osiosta `Elementtien etsiminen` lisätietoja valitsimista. |\n        | ``väittämäoperaattori`` | Katso `Väittämät` lisätietoja varten. Oletusarvo on None. |\n        | ``*väittämäodotettu`` | Odotetut arvot tilalle |\n        | ``viesti`` | korvaa oletusvirhesanoman väittämälle. |\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien etsiminen` lisätietoja tiukasta tilasta.\n\n        Valinnaisesti väittää, että arvo vastaa määriteltyä väittämää. Katso\n        `Väittämät` lisätietoja varten väittämäargumenteista. Oletuksena väittämää\n        ei tehdä.\n\n        Saatavilla olevat väittämät:\n        - ``==`` , ``!=`` ja ``contains`` / ``*=`` voi toimia useiden arvojen kanssa\n        - ``validate`` ja ``evaluate`` hyväksyvät vain yhden yksittäisen odotetun arvon\n\n        Muita operaattoreita ei sallita.\n\n        Esimerkki:\n        | `Hae Luokat`    id=vedettävä    ==    react-vedettävä    laatikko    # Elementti sisältää täsmälleen tämän luokkanimen.\n        | `Hae Luokat`    id=vedettävä    validate    \"react-vedettävä-vedetty\" not in value    # Elementti ei sisällä react-vedettävä-vedetty-luokkaa.\n\n        [https://forum.robotframework.org/t//4262|Kommentoi >>]\n        "
    },
    "get_client_size": {
        "name": "saada_asiakkaan_koko",
        "doc": "Saa elementtien tai sivujen asiakaskoon ( clientHeight, clientWidth) objektina {leveys: float, korkeus: float}.\n\n\n| = Argumentit = | = Kuvaus = |\n| valitsin | Vaihtoehtoinen valitsin, josta on haettava. Jos valitsinta ei anneta, käytetään sivun asiakaskokoa itse ( document.scrollingElement). Katso Elementtien etsiminen -osio lisätietoja valitsimista. |\n| avain | Suodattaa palautetut arvot valinnaisesti. Jos avaimet on asetettu ALL (oletusarvo), se palauttaa vierityskoon sanakirjana, muuten se palauttaa vain valitun arvon avaimen mukaan. |\n| assertion_operator | Katso Väitteet lisätietoja varten. Oletusarvo on Ei mitään. |\n| assertion_expected | Odotettu arvo laskennalle |\n| viesti | korvaa väittämän oletusvirhesanoman. |\n\nAvainsana käyttää tiukkaa tilaa, katso Elementtien etsiminen lisätietoja tiukasta tilasta.\n\nValinnaisesti väittää, että arvo vastaa määritettyä väitettä. Katso\nVäitteet lisätietoja väittämien argumenteista. Oletuksena väittäminen\nei tapahdu.\n\nKatso Hanki rajoittava laatikko tai Hanki vierityskoko esimerkkejä varten.\n\n[https://forum.robotframework.org/t//4263|Kommentti >>]\n"
    },
    "get_download_state": {
        "name": "hae_latauksen_tila",
        "doc": "Saa latauksen tilan.\n\n        Palauttaa sanakirjan tyypistä `DownloadInfo` seuraavilla avaimilla:\n        | {\n        |   saveAs: str\n        |   suggestedFilename: str\n        |   state: str\n        |   downloadID: Vaihtoehtoinen[str]\n        | }\n\n        | =Argumentit= | =Kuvaus= |\n        | ``lataus`` | `DownloadInfo`-sanakirja, joka palautetaan `Lupaus odottaa latausta` tai lataustunniste merkkijonona. |\n        | ``väittämä_operaattori`` | Katso `Väitteet` lisätietoja varten. Oletusarvo on Ei mitään. |\n        | ``väittämä_odotettu`` | Latauksen odotettu tila. Huomaa, että palautettu arvo on sanakirja |\n        | ``viesti`` | korvaa väitteen oletusvirhesanoman. |\n\n        [https://forum.robotframework.org/t//6479|Kommentti >>]\n        "
    },
    "get_element": {
        "name": "hae_elementti",
        "doc": "Palauttaa viittauksen Playwrightin [https://playwright.dev/docs/api/class-locator|Locator]-objektiin.\n\n        Viittausta voidaan käyttää myöhemmissä valitsimissa.\n\n\n        | =Argumentit= | =Kuvaus= |\n        | ``valitsin`` | Valitsin, josta on haettava . Katso `Elementtien etsiminen` -osio lisätietoja valitsimista. |\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien etsiminen` lisätietoja tiukasta tilasta.\n\n        Esimerkki:\n        | ${elementti} =    `Hae elementti`    \\#käyttäjätunnuskenttä\n        | ${valinta_arvo} =    `Hae ominaisuus`    ${elementti} >> vaihtoehtoYksi    arvo    # Valitsin ratkaistaan sivulta.\n        | ${valinta_arvo} =    `Hae ominaisuus`    ${elementti} >> vaihtoehtoKaksi    arvo    # Valitsin ratkaistaan uudelleen sivulta.\n\n        [https://forum.robotframework.org/t//4269|Kommentti >>]\n        "
    },
    "get_element_by": {
        "name": "hae_elementti_avulla",
        "doc": "Mahdollistaa elementtien paikantamisen niiden ominaisuuksien perusteella.\n\n        Valintastrategioita voi olla useita Playwright-strategioita, kuten AltText tai Label.\n        Katso lisätietoja [https://playwright.dev/docs/locators|Playwright Locators] -sivulta.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``paikannusstrategia`` | Käytettävä SelectionStrategy. Viittaa Playwrightin ``page.getBy***`` -toimintoihin. Katso https://playwright.dev/docs/locators |\n        | ``teksti`` | Teksti, jonka perusteella elementti paikannetaan. |\n        | ``tarkka`` | Määrittääkö etsittävän tarkan osuman: isot ja pienet kirjaimet huomioiden koko merkkijono. Oletusarvo on epätosi. Sitä ei huomioida, kun etsitään säännöllisellä lausekkeella. Huomaa, että tarkka osuma poistaa välilyönnit. Tällä ei ole vaikutusta, jos käytetään RegExpia tai jos TestID:a käytetään strategiana. |\n        | ``kaikki_elementit`` | Jos tosi, palauttaa kaikki sopivat elementit listana. |\n\n        Tämä avainsana toteuttaa seuraavat Playwright-toiminnot:\n        - [https://playwright.dev/docs/api/class-page#page-get-by-alt-text|page.getByAltText]\n        - [https://playwright.dev/docs/api/class-page#page-get-by-label|page.getByLabel]\n        - [https://playwright.dev/docs/api/class-page#page-get-by-placeholder|page.getByPlaceholder]\n        - [https://playwright.dev/docs/api/class-page#page-get-by-test-id|page.getByTestId]\n        - [https://playwright.dev/docs/api/class-page#page-get-by-text|page.getByText]\n        - [https://playwright.dev/docs/api/class-page#page-get-by-title|page.getByTitle]\n\n        ``page.getByRole`` tukee `Hae elementti roolin mukaan`-avainsanaa.\n\n        Jos elementti on haettava iframe:sta, valitsimen etuliite on määritettävä käyttäen `Aseta valitsimen etuliite`-avainsanaa, joka sisältää ``>>>`` lopetuksena.\n\n        [https://forum.robotframework.org/t//5937|Kommentti >>]\n        "
    },
    "get_element_by_role": {
        "name": "hae_elementti_roolilla",
        "doc": "Palauttaa viittauksen Playwrightin [https://playwright.dev/docs/api/class-locator|Locator]-objektiin\n        sopivasta elementistä ``rooli`` mukaan tai luettelon viittauksista, jos ``kaikki_elementit`` on asetettu ``Tosi``.\n\n        Mahdollistaa elementtien paikantamisen niiden [https://www.w3.org/TR/wai-aria-1.2/#roles|ARIA-roolin],\n        [https://www.w3.org/TR/wai-aria-1.2/#aria-attributes|ARIA-attribuuttien] ja\n        [https://w3c.github.io/accname/#dfn-accessible-name|saavutettavan nimen] perusteella.\n\n\n        Harkitse seuraavaa DOM-rakennetta.\n\n        | <h3>Rekisteröidy</h3>\n        | <label>\n        |   <input type=\"checkbox\" /> Tilaa\n        | </label>\n        | <br/>\n        | <button>Lähetä</button>\n\n        Voit paikantaa jokaisen elementin sen implisiittisen roolin perusteella:\n        | ${otsikko}    Hae elementti roolin mukaan    otsikko    nimi=Rekisteröidy\n        | ${valintaruutu}   Hae elementti roolin mukaan    valintaruutu    nimi=Tilaa\n        | ${painike}     Hae elementti roolin mukaan    painike    nimi=/lähetä/i\n\n        | =Argumentit= | =Kuvaus= |\n        | ``kaikki_elementit`` | Jos tosi, palauttaa kaikki sopivat elementit listana. |\n        | ``rooli`` | Rooli, josta on haettava. |\n        | ``valittu`` | Attribuutti, joka on yleensä asetettu aria-checked tai native <input type=checkbox> -ohjaimilla. |\n        | ``pois_päältä`` | Attribuutti, joka on yleensä asetettu aria-disabled tai disabled. |\n        | ``tarkka`` | Määrittääkö nimi täsmälleen: isot ja pienet kirjaimet huomioiden koko merkkijono. Oletusarvo on epätosi. Sitä ei huomioida, kun nimi on säännöllinen lauseke. Huomaa, että tarkka osuma poistaa välilyönnit. |\n        | ``laajennettu`` | Attribuutti, joka on yleensä asetettu aria-expanded. |\n        | ``sisällytä_piilotetut`` | Vaihtoehto, joka ohjaa, vastaavatko piilotetut elementit. Oletuksena vain ARIA:n määrittelemättömät piilotetut elementit vastaavat roolivalitsintaan. |\n        | ``taso`` | Numeroattribuutti, joka on yleensä läsnä rooleissa otsikko, listaelementti, rivi, puun alkio, oletusarvoina <h1>-<h6> elementeille. |\n        | ``nimi`` | Vaihtoehto vastata saavutettavaan nimeen. Oletuksena vastaaminen on kirjainten koosta riippumaton ja etsii alimerkkijonoa, käytä tarkkaa ohjaamaan tätä käyttäytymistä. |\n        | ``painettu`` | Attribuutti, joka on yleensä asetettu aria-pressed. |\n        | ``valittu`` | Attribuutti, joka on yleensä asetettu aria-selected. |\n\n        Jos elementti on haettava iframe:sta, valitsimen etuliite on määritettävä käyttäen `Aseta valitsimen etuliite`-avainsanaa, joka sisältää ``>>>`` lopetuksena.\n\n        [https://forum.robotframework.org/t//5938|Kommentti >>]\n        "
    },
    "get_element_count": {
        "name": "hae_elementtien_lukumäärä",
        "doc": "Palauttaa elementtien lukumäärän, jotka on löydetty ``valitsin``-parametrilla.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``valitsin`` | Valitsin, jota on laskettava. Katso `Elementtien etsiminen` -osio lisätietoja valitsimista. |\n        | ``väittämä_operaattori`` | Katso `Väitteet` lisätietoja varten. Oletusarvo on Ei mitään. |\n        | ``väittämä_odotettu`` | Odotettu arvo laskennalle |\n        | ``viesti`` | korvaa väitteen oletusvirhesanoman. |\n\n        Vaihtoehtoisesti väittää, että tila vastaa määritettyä väitettä. Katso\n        `Väitteet` lisätietoja varten väitteiden argumenteista. Oletuksena väitettä\n        ei tehdä.\n\n        Esimerkki:\n        | `Hae elementtien laskumäärä`    valintaruutu    >    1\n\n        [https://forum.robotframework.org/t//4270|Kommentti >>]\n        "
    },
    "get_element_states": {
        "name": "hae_elementtin_tilat",
        "doc": "Hanki elementistä, joka on löydetty ``valitsin``-parametrilla, aktiiviset tilat.\n\n        Tämä avainsana palauttaa listan tiloista, jotka ovat voimassa valitulle elementille.\n\n\n        | =Argumentit= | =Kuvaus= |\n        | ``valitsin`` | Vastaavan objektin valitsin. Katso `Elementtien etsiminen` -osio lisätietoja valitsimista. |\n        | ``väittämä_operaattori`` | Katso `Väitteet` lisätietoja varten. Oletusarvo on Ei mitään. |\n        | ``*väittämä_odotettu`` | Odotetut tilat |\n        | ``viesti`` | korvaa väitteen oletusvirhesanoman. |\n        | ``palauta_nimet`` | Jos asetetaan arvoon ``Epätosi``, avainsana palauttaa IntFlag-objektin (`ElementState`) sijasta listan. `ElementState` voi sisältää useita tiloja samanaikaisesti. Oletusarvo on ``Tosi``. |\n\n        Vaihtoehtoisesti väittää, että tila vastaa määritettyä väitettä. Katso\n        `Väitteet` lisätietoja varten väitteiden argumenteista. Oletuksena väitettä\n        ei tehdä.\n\n        Tämä avainsana toimii sisäisesti Pythonin IntFlagin kanssa.\n        Lippuja voidaan käsitellä bitiviisaiden operaattoreiden, kuten & (bittien JA) ja | (bittien TAI), avulla.\n        Käytettäessä väittämäoperaattoreita ``sitten``, ``arvioi`` tai ``validoi``, ``arvo``\n        sisältää tilat `ElementState`-muodossa.\n\n        Esimerkki:\n        | `Hae elementin tilat`    h1    validoi    arvo & näkyvä   # Epäonnistuu, jos elementti on näkymätön\n        | `Hae elementin tilat`    h1    sitten    arvo & (näkyvä | piilotettu)  # Palauttaa joko ``['näkyvä']`` tai ``['piilotettu']``\n        | `Hae elementin tilat`    h1    sitten    bool(arvo & näkyvä)  # Palauttaa ``${Tosi}``, jos elementti on näkyvä\n\n        Tavallisin käyttötarkoitus olisi varmistaa, että elementti sisältää tietyn tilan tai useita tiloja.\n\n        Esimerkki:\n        | `Hae elementin tilat`    id=tarkistettu_elem      *=    tarkistettu\n        | `Hae elementin tilat`    id=tarkistettu_elem      ei sisällä    tarkistettu\n        | `Hae elementin tilat`    id=piilotettu_elem    sisältää    piilotettu    liitetty\n        | `Hae elementin tilat`    id=pois_käytöstä_elem     sisältää    näkyvä    pois_käytöstä    vain_luku\n\n        Elementit palauttavat positiiviset ja negatiiviset arvot tarvittaessa.\n        Esimerkiksi valintaruutu palauttaa joko ``tarkistettu`` tai ``tarkistamaton``, kun taas tekstin syöttökentällä\n        ei ole näitä kahta tilaa.\n        Valintaelementeillä on myös joko ``valittu`` tai ``valitsematon``.\n\n        ``animoiva``-tila asetetaan, jos elementtiä ei pidetä ``vakiona``\n        300 millisekunnin kuluessa.\n\n        Jos elementtiä ei ole liitetty DOM:iin, joten sitä ei voi löytää 250 millisekunnin kuluessa\n        se merkitään ``irrotettuna`` ainoaksi tilaksi.\n\n        ``vakaa``-tilaa ei palauteta, koska se aiheuttaisi liian suuren viiveen kyseisessä avainsanassa.\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien etsiminen` lisätietoja tiukasta tilasta.\n\n        [https://forum.robotframework.org/t//4272|Kommentti >>]\n        "
    },
    "get_elements": {
        "name": "hae_elementtit",
        "doc": "Palauttaa viittauksen Playwrightin [https://playwright.dev/docs/api/class-locator|Locator]-objektiin\n        kaikille sopiville elementeille ``valitsin``-parametrilla.\n\n\n        | =Argumentit= | =Kuvaus= |\n        | ``valitsin`` | Valitsin, josta on haettava. Katso `Elementtien etsiminen` -osio lisätietoja valitsimista. |\n\n        Esimerkki:\n        | ${elementit} =    `Hae elementit`\n        | ${elem} =    Hae listasta    ${elementit}    0\n        | ${valinnan_arvo} =    `Hae ominaisuus`    ${elem} >> vaihtoehto    arvo\n\n        [https://forum.robotframework.org/t//4273|Kommentti >>]\n        "
    },
    "get_page_source": {
        "name": "hae_sivun_koodi",
        "doc": "Hakee sivun HTML-lähteen merkkijonona.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``väittämä_operaattori`` | Katso `Väitteet` lisätietoja varten. Oletusarvo on Ei mitään. |\n        | ``väittämä_odotettu`` | Odotettu arvo tilalle |\n        | ``viesti`` | korvaa väitteen oletusvirhesanoman. |\n\n        Vaihtoehtoisesti tekee merkkijonoväitteen. Katso `Väitteet` lisätietoja varten\n        väitteiden argumenteista. Oletuksena väitettä ei tehdä.\n\n        [https://forum.robotframework.org/t//4275|Kommentti >>]\n        "
    },
    "get_property": {
        "name": "hae_ominaisuus",
        "doc": "Palauttaa ``ominaisuuden``, joka on löydetty ``valitsin``-parametrilla.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``valitsin`` | Valitsin, josta tieto on noudettava. Katso `Elementtien etsiminen` -osio lisätietoja valitsimista. |\n        | ``ominaisuus`` | Pyydetyn ominaisuuden nimi. |\n        | ``väittämä_operaattori`` | Katso `Väitteet` lisätietoja varten. Oletusarvo on Ei mitään. |\n        | ``väittämä_odotettu`` | Odotettu arvo tilalle |\n        | ``viesti`` | korvaa väitteen oletusvirhesanoman. |\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien etsiminen` lisätietoja tiukasta tilasta.\n\n        Vaihtoehtoisesti väittää, että ominaisuuden arvo vastaa odotettua arvoa. Katso `Väitteet`\n        lisätietoja varten väitteiden argumenteista. Oletuksena väitettä ei tehdä.\n\n        Jos ``väittämä_operaattori`` on asetettu ja ominaisuutta ei löydy, ``arvo`` on ``None``\n        ja avainsana ei epäonnistu. Katso `Hae attribuutti` esimerkkejä varten.\n\n        Esimerkki:\n        | `Hae ominaisuus`    h1    innerText    ==    Kirjautumissivu\n        | ${ominaisuus} =    `Hae ominaisuus`    h1    innerText\n\n        [https://forum.robotframework.org/t//4276|Kommentti >>]\n        "
    },
    "get_scroll_position": {
        "name": "hae_vierityksen_sijainti",
        "doc": "Hakee elementtien tai sivun nykyisen vieritysasennon objektina ``{ylä: float, vasen: float, ala: float, oikea: float}``.\n\n        Se kuvaa suorakulmiota, joka on näkyvissä kyseisen elementin vieritettävästä sisällöstä.\n        kaikki arvot mitataan sijainnista {ylä: 0, vasen: 0}.\n\n\n        | =Argumentit= | =Kuvaus= |\n        | ``valitsin`` | Valinnainen valitsin, josta tiedot on noudettava. Jos valitsinta ei anneta, käytetään sivun omaa vierityselementtiä (``document.scrollingElement``). Katso `Elementtien etsiminen` -osio lisätietoja valitsimista. |\n        | ``avain`` | Valinnaisesti suodattaa palautetut arvot. Jos avaimet on asetettu arvoon ``KAIKKI`` (oletusarvo) se palauttaa vieritysasennon sanakirjana, muuten se palauttaa vain avaimen valitseman yksittäisen arvon. |\n        | ``väittämä_operaattori`` | Katso `Väitteet` lisätietoja varten. Oletusarvo on Ei mitään. |\n        | ``väittämä_odotettu`` | Odotettu arvo laskennalle |\n        | ``viesti`` | korvaa väitteen oletusvirhesanoman. |\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien etsiminen` lisätietoja tiukasta tilasta.\n\n        Vaihtoehtoisesti väittää, että arvo vastaa määritettyä väitettä. Katso\n        `Väitteet` lisätietoja varten väitteiden argumenteista. Oletuksena väitettä\n        ei tehdä.\n\n        Katso esimerkkejä `Hae rajoittava laatikko` tai `Hae vierityksen koko`.\n\n        [https://forum.robotframework.org/t//4277|Kommentti >>]\n        "
    },
    "get_scroll_size": {
        "name": "hae_vierityksen_koko",
        "doc": "Hakee elementtien tai sivun vieritettävän koon objektina ``{leveys: float, korkeus: float}``.\n\n\n        | =Argumentit= | =Kuvaus= |\n        | ``valitsin`` | Valinnainen valitsin, josta tiedot on noudettava. Jos valitsinta ei anneta, käytetään sivun omaa vierityskokoa. Katso `Elementtien etsiminen` -osio lisätietoja valitsimista. |\n        | ``avain`` | Valinnaisesti suodattaa palautetut arvot. Jos avaimet on asetettu arvoon ``KAIKKI`` (oletusarvo) se palauttaa vierityskoon sanakirjana, muuten se palauttaa vain avaimen valitseman yksittäisen arvon. |\n        | ``väittämä_operaattori`` | Katso `Väitteet` lisätietoja varten. Oletusarvo on Ei mitään. |\n        | ``väittämä_odotettu`` | Odotettu arvo laskennalle |\n        | ``viesti`` | korvaa väitteen oletusvirhesanoman. |\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien etsiminen` lisätietoja tiukasta tilasta.\n\n        Vaihtoehtoisesti väittää, että tila vastaa määritettyä väitettä. Katso\n        `Väitteet` lisätietoja varten väitteiden argumenteista. Oletuksena väitettä\n        ei tehdä.\n\n        Katso `Hae rajoittava laatikko` lisää vastaavia esimerkkejä varten.\n\n        Esimerkkikäyttö:\n        | ${korkeus}=         `Hae vierityskoko`    korkeus                          # suodatettu sivu korkeuden mukaan\n        | Log                Leveys: ${korkeus}                                      # Korkeus: 58425\n        | ${vierityskoko}=    `Hae vierityskoko`    id=avainsanat-pikanäppäimet-astia  # suodattamaton elementti\n        | Log                ${vierityskoko}                                         # {'leveys': 253, 'korkeus': 3036}\n\n        [https://forum.robotframework.org/t//4278|Kommentti >>]\n        "
    },
    "get_select_options": {
        "name": "hae_valittu_vaihtoehdot",
        "doc": "Palauttaa ``select``-elementin valintojen attribuutit listana sanakirjoina.\n\n        Palautetut sanakirjat sisältävät seuraavat avaimet ja niiden arvot\n        \"indeksi\", \"arvo\", \"tunniste\" ja \"valittu\".\n\n\n        | =Argumentit= | =Kuvaus= |\n        | ``valitsin`` | Valitsin, josta tiedot on noudettava. Katso `Elementtien etsiminen` -osio lisätietoja valitsimista. |\n        | ``väittämä_operaattori`` | Katso `Väitteet` lisätietoja varten. Oletusarvo on Ei mitään. |\n        | ``väittämä_odotettu`` | Odotettu arvo tilalle |\n        | ``viesti`` | korvaa väitteen oletusvirhesanoman. |\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien etsiminen` lisätietoja tiukasta tilasta.\n\n        Vaihtoehtoisesti väittää, että ne vastaavat määritettyä väitettä. Katso\n        `Väitteet` lisätietoja varten väitteiden argumenteista. Oletuksena väitettä\n        ei tehdä.\n\n        Esimerkki:\n\n        | `Hae valintavaihtoehdot`     //select[2]    validate  [v[\"tunniste\"] for v in arvo] == [\"Sähköposti\", \"Matkapuhelin\"]\n        | `Hae valintavaihtoehdot`   select#nimet     validate  any(v[\"tunniste\"] == \"Mikko\" for v in arvo)\n\n        [https://forum.robotframework.org/t//4279|Kommentti >>]\n        "
    },
    "get_selected_options": {
        "name": "hae_valitut_vaihtoehdot",
        "doc": "Palauttaa määritetyn valitun vaihtoehdon attribuutin ``select`` -elementistä.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``valitsin`` | Valitsin, jolta tiedot on haettava. Katso `Elementtien löytäminen` -osio tarkempia tietoja valitsimista. |\n        | ``vaihtoehto_attribuutti`` | Mikä ominaisuus palautetaan/tarkistetaan. Oletusarvo on label. |\n        | ``väittämä_operaattori`` | Katso `Väitteet` lisätietoja varten. Oletusarvo on Ei mitään. |\n        | ``väittämä_odotettu`` | Odotettu arvo tilalle |\n        | ``viesti`` | Korvaa oletusvirhesanoman. |\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien löytäminen` -osio tarkempien tietojen saamiseksi tiukasta tilasta.\n\n        Valinnaisesti väittää, että nämä vastaavat määritettyä väitettä. Katso\n        `Väitteet` lisätietoja varten väitteiden argumenteista. Oletuksena väitettä ei tehdä.\n\n        - ``==`` , ``!=`` ja ``contains`` / ``*=`` voi toimia useiden arvojen kanssa\n        - ``validate`` ja ``evaluate`` hyväksyvät vain yhden odotetun arvon\n\n        Muut operaattorit eivät ole sallittuja.\n\n        Esimerkki:\n\n        | `Select Options By`      label                    //select[2]    Email      Mobile\n        | ${selected_list}         `Get Selected Options`   //select[2]                                         # hakija\n        | `Get Selected Options`   //select[2]              label          `==`       Mobile             Mail   #väite sisältö\n        | `Select Options By`      label                    select#names   2          4\n        | `Get Selected Options`   select#names             index          `==`       2                  4      #väite indeksi\n        | `Get Selected Options`   select#names             label          *=         Mikko                     #väite sisältää\n        | `Get Selected Options`   select#names             label          validate   len(value) == 3           #väite pituus\n\n        [https://forum.robotframework.org/t//4280|Kommentti >>]\n        "
    },
    "get_style": {
        "name": "hae_tyyli",
        "doc": "Hakee elementin valitun tyylin laskennalliset ominaisuudet valitsimella ``selector``.\n\n        Valinnaisesti vastaa minkä tahansa sekvenssin väitteen operaattorilla.\n\n\n        | =Argumentit= | =Kuvaus= |\n        | ``valitsin`` | Valitsin, jolta tyyli on haettava. Katso `Elementtien löytäminen` -osio tarkempia tietoja valitsimista. |\n        | ``avain`` | Pyydetyn CSS-ominaisuuden avain. Noutaa \"ALL\" tyylit sanakirjana oletusarvoisesti. Kaikkia css-asetuksia voidaan käyttää avaimina, vaikka niitä ei kaikkia palauteta sanakirjassa. |\n        | ``väittämä_operaattori`` | Katso `Väitteet` lisätietoja varten. Oletusarvo on Ei mitään. |\n        | ``väittämä_odotettu`` | Odotettu arvo tilalle |\n        | ``viesti`` | Korvaa oletusvirhesanoman. |\n        | ``pseudo-elementti`` | Väärennetty elementti vastaamaan. Oletusarvo on Ei mitään. Pseudo-elementit ovat erityisiä css |\n\n        [ https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements | Pseudo element ] on css-toiminnallisuus, joka lisää tyylejä. Esimerkiksi `::before` tai `::after`.\n\n        Avainsana käyttää tiukkaa tilaa, katso `Elementtien löytäminen` -osio tarkempien tietojen saamiseksi tiukasta tilasta.\n\n        Valinnaisesti väittää, että tyyli vastaa määritettyä väitettä. Katso\n        `Väitteet` lisätietoja varten väitteiden argumenteista. Oletuksena väitettä ei tehdä.\n\n        [https://forum.robotframework.org/t//4281|Kommentti >>]\n        "
    },
    "get_table_cell_element": {
        "name": "hae_taulukon_soluelementti",
        "doc": "Palauttaa Web-elementin, jolla on sama sarakkeen indeksi ja sama rivin indeksi kuin valituilla elementeillä.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``taulukko`` | Valitsimen on valittava ``<table>``-elementti, joka sisältää molemmat valitut elementit |\n        | ``sarake`` | Valitsin voi valita minkä tahansa ``<th>``- tai ``<td>``-elementin tai jonkin niiden alielementin. |\n        | ``rivi`` | Valitsin voi valita minkä tahansa ``<tr>``-elementin tai jonkin sen alielementin, kuten ``<td>``-elementit. |\n\n        ``sarake`` ja ``rivi`` voivat kuluttaa myös indeksinumeroita valitsimien sijaan.\n        Indeksit alkavat ``0``:sta, ja ``-1`` on erityinen viimeiselle elementille.\n\n        ``Saraketta`` ja ``riviä`` koskevat valitsimet liitetään suoraan ``taulukon`` valitsimeen näin: ``f\"{taulukko} >> {rivi}\" .``\n\n        | = GitHub = |   = Slack =      | = Oikea nimi =   |\n        | mkorpela   | @mkorpela        | Mikko Korpela   |\n        | aaltat     | @aaltat          | Tatu Aalto      |\n        | xylix      | @Kerkko Pelttari | Kerkko Pelttari |\n        | Snooz82    | @Ren\u00e9            | Ren\u00e9 Rohner     |\n\n\n        Esimerkki:\n        | ${taulukko}=    Aseta muuttuja    [id=\"Get Table Cell Element\"] >> div.kw-docs table >> nth=1\n        | ${e}=    `Hae taulukon solun elementti`    ${taulukko}    \"Oikea nimi\"    \"aaltat\"   # Palauttaa elementin tekstillä ``Tatu Aalto``\n        | Hae teksti    ${e}    ==    Tatu Aalto\n        | ${e}=    `Hae taulukon solun elementti`    ${taulukko}    \"Slack\"    \"Mikko Korpela\"   # Palauttaa elementin tekstillä ``@mkorpela``\n        | Hae teksti    ${e}    ==    @mkorpela\n        | ${e}=    `Hae taulukon solun elementti`    ${taulukko}    \"mkorpela\"    \"Kerkko Pelttari\"   # saraketta ei tarvitse olla rivillä 0\n        | Hae teksti    ${e}    ==    @mkorpela\n        | ${e}=    `Hae taulukon solun elementti`    ${taulukko}    2    -1   # Indeksi on myös suoraan mahdollinen\n        | Hae teksti    ${e}    ==    Ren\u00e9 Rohner\n\n        [https://forum.robotframework.org/t//4282|Kommentti >>]\n        "
    },
    "get_table_cell_index": {
        "name": "hae_taulukon_soluindeksi",
        "doc": "Palauttaa taulukon solun indeksin (0-pohjainen) sen rivillä.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``valitsin`` | voi valita minkä tahansa ``<th>``- tai ``<td>``-elementin tai jonkin niiden alielementin. Katso lisätietoja valitsimista osiosta `Elementtien etsiminen`. |\n        | ``väittämä_operaattori`` | Katso `Väitteet` lisätietoja varten. Oletusarvo on Ei mitään. |\n        | ``väittämä_odotettu`` | Odotettu arvo tilalle |\n        | ``viesti`` | korvaa väitteen oletusvirhesanoman. |\n\n        Esimerkki:\n        | ${taulukko}=    Aseta muuttuja    id=`Get Table Cell Element` >> div.kw-docs table   #Taulukko avainsanan `Get Table Cell Element`\n        | ${idx}=    `Hae taulukon solun indeksi`    ${taulukko} >> \"Oikea nimi\"\n        | Pitäisi olla yhtä suuri    ${idx}    ${2}\n        | `Hae taulukon solun indeksi`    ${taulukko} >> \"@aaltat\"    ==    1\n\n        Valinnaisesti väittää, että indeksi vastaa määritettyä väitettä. Katso\n        `Väitteet` lisätietoja varten väitteiden argumenteista.\n        Oletuksena väitettä ei tehdä.\n\n        [https://forum.robotframework.org/t//4283|Kommentti >>]\n        "
    },
    "get_table_row_index": {
        "name": "hae_taulukon_rivi-indeksi",
        "doc": "Palauttaa taulukon rivin indeksin (0-pohjainen).\n\n\n        | =Argumentit= | =Kuvaus= |\n        | ``valitsin`` | voi valita minkä tahansa ``<th>``- tai ``<td>``-elementin tai jonkin niiden alielementin. Katso lisätietoja valitsimista osiosta `Elementtien etsiminen`. |\n        | ``väittämä_operaattori`` | Katso `Väitteet` lisätietoja varten. Oletusarvo on Ei mitään. |\n        | ``väittämä_odotettu`` | Odotettu arvo tilalle |\n        | ``viesti`` | korvaa väitteen oletusvirhesanoman. |\n\n        Esimerkki:\n        | ${taulukko}=    Aseta muuttuja    id=`Get Table Cell Element` >> div.kw-docs table   #Taulukko avainsanan `Get Table Cell Element`\n        | ${idx}=    `Hae taulukon rivin indeksi`    ${taulukko} >> \"@Ren\u00e9\"\n        | Pitäisi olla yhtä suuri    ${idx}    ${4}\n        | `Hae taulukon rivin indeksi`    ${taulukko} >> \"@aaltat\"    ==    2\n\n        Valinnaisesti väittää, että indeksi vastaa määritettyä väitettä. Katso\n        `Väitteet` lisätietoja varten väitteiden argumenteista.\n        Oletuksena väitettä ei tehdä.\n\n        [https://forum.robotframework.org/t//4284|Kommentti >>]\n        "
    },
    "get_text": {
        "name": "hae_teksti",
        "doc": "Palauttaa ``valitsimen`` löytämän elementin tekstiattribuutin.\n\n               Avainsana voi myös palauttaa `input`- tai `textarea`-elementin arvonattribuutin tekstin.\n        Katso lisätietoja valitsimista osiosta `Elementtien etsiminen`.\n\n               | =Argumentit= | =Kuvaus= |\n               | ``väittämä_operaattori`` | Katso `Väitteet` lisätietoja varten. Oletusarvo on Ei mitään. |\n               | ``väittämä_odotettu`` | Odotettu arvo tilalle |\n               | ``viesti`` | korvaa väitteen oletusvirhesanoman. |\n\n               Avainsana käyttää tiukkaa tilaa, katso `Elementtien etsiminen` lisätietoja tiukasta tilasta.\n\n               Valinnaisesti väittää, että teksti vastaa määritettyä väitettä. Katso `Väitteet`\n               lisätietoja varten väitteiden argumenteista. Oletuksena väitettä ei tehdä.\n\n               Esimerkki:\n               | ${teksti} =    `Hae teksti`    id=tärkeä                             # Palauttaa elementin tekstin ilman väitettä.\n               | ${teksti} =    `Hae teksti`    id=tärkeä    ==    Tärkeä teksti    # Palauttaa elementin tekstin väitteen kanssa.\n               | ${teksti} =    `Hae teksti`    //input         ==    root              # Palauttaa syöte-elementin tekstin väitteen kanssa.\n\n               [https://forum.robotframework.org/t//4285|Kommentti >>]\n        "
    },
    "get_title": {
        "name": "hae_otsikko",
        "doc": "Palauttaa nykyisen sivun otsikon.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``väittämä_operaattori`` | Katso `Väitteet` lisätietoja varten. Oletusarvo on Ei mitään. |\n        | ``väittämä_odotettu`` | Odotettu arvo tilalle |\n        | ``viesti`` | Korvaa oletusvirhesanoman. |\n\n        Valinnaisesti väittää, että otsikko vastaa määritettyä väitettä. Katso `Väitteet`\n        lisätietoja varten väitteiden argumenteista. Oletuksena väitettä ei tehdä.\n\n        [https://forum.robotframework.org/t//4286|Kommentti >>]\n        "
    },
    "get_url": {
        "name": "hae_osoite",
        "doc": "Palauttaa nykyisen URL-osoitteen.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``väittämä_operaattori`` | Katso `Väitteet` lisätietoja varten. Oletusarvo on Ei mitään. |\n        | ``väittämä_odotettu`` | Odotettu arvo tilalle |\n        | ``viesti`` | Korvaa oletusvirhesanoman. |\n\n        Väittää valinnaisesti, että se vastaa määritettyä väitettä. Katso `Väitteet` lisätietoja varten\n        väitteiden argumenteista. Oletuksena väitettä ei tehdä.\n\n        [https://forum.robotframework.org/t//4287|Kommentti >>]\n        "
    },
    "get_viewport_size": {
        "name": "hae_näkymän_koko",
        "doc": "Palauttaa nykyiset näkymänmitat.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``avain`` | Suodattaa valinnaisesti palautetut arvot. Jos avain on asetettu arvoon ``ALL`` (oletus), se palauttaa näkymän koon sanakirjana, muuten se palauttaa vain avaimen valitseman yksittäisen arvon. Huomautus: Jos haetaan yksittäistä arvoa, väittämää ei tarvitse *validoida* yhdistettynä ``arvo``-muunnokseen. |\n        | ``väittämä_operaattori`` | Katso `Väitteet` lisätietoja varten. Oletusarvo on Ei mitään. |\n        | ``väittämä_odotettu`` | Odotettu arvo tilalle |\n        | ``viesti`` | Korvaa oletusvirhesanoman. |\n\n        Väittää valinnaisesti, että tila vastaa määritettyä väitettä. Katso\n        `Väitteet` lisätietoja varten väitteen argumenteista. Oletuksena väitettä ei tehdä.\n\n        Esimerkki:\n        | `Get Viewport Size`    ALL    ==    {'width':1280, 'height':720}\n        | `Get Viewport Size`    width    >=    1200\n\n        [https://forum.robotframework.org/t//4288|Kommentti >>]\n        "
    },
    "http": {
        "name": "http",
        "doc": "Suorittaa HTTP-pyynnön nykyisessä selaimen kontekstissa\n\n        | =Argumentit= | =Kuvaus= |\n        | ``url`` | Pyyntö-URL-osoite, esim. ``/api/foo``. |\n        | ``method`` | HTTP-menetelmä pyynnölle. Oletusarvo on GET. |\n        | ``body`` | Pyyntötieto. GET-pyynnöillä ei voi olla tietoa. Jos tieto voidaan tulkita JSON-muotoon, pyynnön ``Content-Type``-otsikko asetetaan automaattisesti arvoon ``application/json``. Oletusarvo on Ei mitään. |\n        | ``headers`` | Lisäotsikoista koostuva sanakirja. Oletusarvo on Ei mitään. |\n\n        Vastaus on Python-sanakirja, jossa on seuraavat ominaisuudet:\n          - ``status`` <int> Vastauksen tilakoodi.\n          - ``statusText`` <str> Tilateksti vastaten ``status``-arvoa, esim. OK tai INTERNAL SERVER ERROR. Tätä ei välttämättä ole saatavilla kaikille selaimille.\n          - ``body`` <dict> | <str> Vastauksen tieto. Jos tieto voidaan tulkita JSON-objektiksi,\n          se palautetaan Pythonin sanakirjana, muuten se palautetaan merkkijonona.\n          - ``headers`` <dict> Sanakirja, joka sisältää kaikki vastauksen otsikot.\n          - ``ok`` <bool> Oliko pyyntö onnistunut, eli ``status`` on 200-299 -alueella.\n\n        Tässä on esimerkki Robot Frameworkin sanakirjamuuttujien ja laajennetun muuttujasyntaksin käytöstä\n        väittämien tekemiseen vastausobjektissa:\n\n        | &{res}=             `HTTP`                       /api/loppupiste\n        | Should Be Equal     ${res.status}              200\n        | Should Be Equal     ${res.body.jokin_kenttä}     jokin arvo\n\n        [https://forum.robotframework.org/t//4296|Kommentti >>]\n        "
    },
    "wait_for_navigation": {
        "name": "odota_navigointia",
        "doc": "Odottaa, kunnes sivu on navigoinut annettuun ``url``-osoitteeseen.\n\n\n        | =Argumentit= | =Kuvaus= |\n        | ``url`` | Odotettu navigointikohdeosoite, joko täsmällinen osoite tai JavaScript-tyyppinen säännöllinen lauseke, joka on kääritty ``/``-symboleihin. |\n        | ``timeout`` | Aikakatkaisu tukee Robot Frameworkin aikamuotoa. Käyttää oletusaikakatkaisua, jos ei ole asetettu. |\n        | ``wait_until`` | Milloin katsotaan, että toiminto on onnistunut, oletusarvoisesti lataus. Tapahtumat voivat olla joko: ``domcontentloaded`` - katsotaan toiminto valmiiksi, kun DOMContentLoaded-tapahtuma lähetetään. ``load`` - katsotaan toiminto valmiiksi, kun load-tapahtuma lähetetään. ``networkidle`` - katsotaan toiminto valmiiksi, kun ei ole verkkoyhteyksiä vähintään 500 ms ajan. ``commit`` - katsotaan toiminto valmiiksi, kun verkkovastaus on saatu ja dokumentti on alkanut ladata. |\n\n\n        Avainsana toimii vain, kun sivu on ladattu, eikä toimi, jos URL-tunnus muuttuu. Esimerkiksi jos\n        https://marketsquare.github.io/robotframework-browser/Browser.html muuttuu\n        https://marketsquare.github.io/robotframework-browser/Browser.html#Odota%20Navigointia\n        avainsana epäonnistuu.\n\n        Esimerkki:\n        | `Siirry`                  ${ROOT_URL}/uudelleenohjaaja.html\n        | `Odota navigointia`    ${ROOT_URL}/postitettu.html    wait_until=${wait_until}\n\n        [https://forum.robotframework.org/t//4347|Kommentti >>]\n        "
    },
    "wait_for_request": {
        "name": "odota_pyyntöä",
        "doc": "Odottaa, että vastaava pyyntö tehdään.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``matcher`` | Pyynnön URL-tunniste. Se voi olla merkkijono (Glob-kuvio), JavaScript RegExp (kapseloitu /-merkillä seuraavilla lipuilla) tai JavaScript nuolifunktio, joka vastaanottaa [https://playwright.dev/docs/api/class-request|Request]-objektin ja palauttaa boolean-arvon. Oletuksena (tyhjällä merkkijonolla) vastaa ensimmäiseen saatavilla olevaan pyyntöön. Lisätietoja löytyy Playwrightin [https://playwright.dev/docs/api/class-page#page-wait-for-request|waitForRequest]-dokumentaatiosta. |\n        | ``timeout`` | Aikakatkaisu tukee Robot Frameworkin aikamuotoa. Käyttää oletusaikakatkaisua, jos ei ole asetettu. |\n\n        Katso lisätietoja avainsanasta `Wait For Response`.\n\n        *VAROITUS:* Ennen selainkirjaston versiota 17.0.0, ``matcher``-argumentti oli aina joko regex tai JS-funktio.\n        Mutta regexin ei tarvinnut olla kauttaviivojen sisällä.\n        Yksinkertaisin tapa siirtyä uuteen syntaksiin on lisätä kauttaviivat matcherin ympärille.\n        Joten ``/api/get/json`` muuttuu muotoon ``//api/get/json/``.\n\n        [https://forum.robotframework.org/t//4348|Kommentti >>]\n        "
    },
    "wait_for_response": {
        "name": "odota_vastausta",
        "doc": "Odottaa vastausta, joka vastaa vastaavaa vastaajaa, ja palauttaa vastauksen robotin sanakirjana.\n\n        Tämä avainsana palauttaa vastauksen, joka on robotin sanakirja ja sisältää seuraavat ominaisuudet:\n          - ``status`` <int> Vasteen tilakoodi.\n          - ``statusText`` <str> Tilateksti vastaa tilaa, esimerkiksi OK tai INTERNAL SERVER ERROR. Tätä ei välttämättä ole saatavilla kaikille selaimille.\n          - ``body`` <dict | str> Vasteen runko. Jos runko voidaan jäsentää JSON-objektiksi, se palautetaan Pythonin sanakirjana, muuten se palautetaan merkkijonona.\n          - ``headers`` <dict> Sanakirja, joka sisältää kaikki vastausotsikot.\n          - ``ok`` <bool> Oliko pyyntö onnistunut, eli ``status`` on alueella 200-299.\n          - ``request`` <dict> sisältää ``method`` <str>, ``headers`` <dict> ja ``postData`` <dict> | <str>\n          - ``url`` <str> pyynnön URL.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``matcher`` | Pyyntö-URL-vastaaja. Se voi olla merkkijono (Glob-kuvio), JavaScript RegExp (kapseloitu / seuraavilla lipuilla) tai JavaScript nuolifunktio, joka vastaanottaa Vaste-objektin ja palauttaa boolean-arvon. Oletuksena (tyhjällä merkkijonolla) vastaa ensimmäiseen saatavilla olevaan pyyntöön. Lisätietoja löytyy Playwrightin [https://playwright.dev/docs/api/class-page#page-wait-for-response|page.waitForResponse]-dokumentaatiosta. |\n        | ``timeout`` | Aikakatkaisu tukee Robot Frameworkin aikamuotoa. Käyttää oletusaikakatkaisua, jos ei ole asetettu. |\n\n        *VAROITUS:* Ennen selainkirjaston versiota 17.0.0, ``matcher``-argumentti oli aina joko regex tai JS-funktio. Mutta regexin ei tarvinnut olla kauttaviivojen sisällä. Yksinkertaisin tapa siirtyä uuteen syntaksiin on lisätä kauttaviivat matcherin ympärille. Joten ``/api/get/json`` muuttuu muotoon ``//api/get/json/``.\n\n        == Matcher Esimerkkejä: ==\n\n        === Glob-Kuvio: ===\n\n        Glob-kuvio on merkkijono, joka voi sisältää jokerimerkkejä. Seuraavat jokerimerkit ovat tuettuja:\n\n        Mahdolliset jokerimerkit/kuvioinnit ovat:\n        - ``*`` vastaa minkä tahansa määrän merkkejä, paitsi ``/``\n        - ``**`` vastaa minkä tahansa määrän merkkejä, mukaan lukien ``/``\n        - ``?`` vastaa yhtä merkkiä, paitsi ``/``\n        - ``[abc]`` vastaa yhtä merkkiä hakasissa (tässä esimerkissä ``a``, ``b`` tai ``c``)\n        - ``[a-z]`` vastaa yhtä merkkiä alueella (tässä esimerkissä ``a``:sta ``z``:ään)\n        - ``{foo,bar,baz}`` vastaa yhtä merkkijonoa aaltosulkeissa (tässä esimerkissä ``foo``, ``bar`` tai ``baz``)\n\n       Esimerkki:\n        | `Wait For Response`    **/api/get/text    # vastaa mihin tahansa pyyntöön, jonka URL päättyy /api/get/text. esimerkki: https://browser.fi/api/get/text\n\n        === RegExp: ===\n\n        Säännölliset lausekkeet ovat JavaScriptin säännöllisiä lausekkeita, jotka on kapseloitu ``/`` ja niiden perässä voi olla valinnaisia lippuja:\n        Ole tietoinen siitä, että kenoviivat on pakko karkottaa Robot Frameworkissa, esimerkiksi ``\\\\w`` sen sijaan että ``\\w``.\n        Lisätietoja säännöllisistä lausekkeista löytyy [https://regex101.com|regex101]-sivustolta.\n\n        Esimerkki:\n        | `Wait For Response`    /http://\\\\w+:\\\\d+/api/get/text/i    # vastaa mihin tahansa pyyntöön, jonka URL päättyy /api/get/text ja sisältää http://:n jälkeen minkä tahansa sanan ja portin. esimerkki: http://localhost:8080/api/get/text\n\n        === JavaScript nuolifunktio: ===\n\n        JavaScriptin nuolifunktiot ovat nimettömiä JavaScript-funktioita, jotka saavat\n        [https://playwright.dev/docs/api/class-response|Response]-objektin ja palauttavat boolean-arvon.\n\n        Esimerkki:\n        | `Wait For Response`    response => response.url() === 'http://localhost/api/post' && response.status() === 200    # vastaa mihin tahansa vastaukseen, jossa URL on http://localhost/api/post ja tilakoodi on 200\n\n        == Robotin esimerkit: ==\n\n        Synkroninen esimerkki:\n        | `Click`                \\#delayed_request    # Luo vastauksen, jota pitää odottaa ennen seuraavia toimia\n        | `Wait For Response`    matcher=/http://\\\\w+:\\\\d+/api/get/text/i\n        | `Click`                \\#save\n\n        Asynkroninen esimerkki:\n        | ${promise} =    `Promise To`    `Wait For Response`    timeout=60s\n        | `Click`           \\#delayed_request    # Luo vastauksen, jota pitää odottaa ennen tallennuspainikkeen painamista.\n        | `Click`           \\#next\n        | `Wait For`        ${promise}            # Odottaa vastausta\n        | `Click`           \\#save\n\n        JavaScript-funktioesimerkki:\n        | `Click`               \\#delayed_request    # Luo vastauksen, jota pitää odottaa ennen tallennuspainikkeen painamista.\n        | `Wait For Response`   [https://playwright.dev/docs/api/class-response/|response] => response.url().endsWith('json') && response.request().method() === 'GET'\n\n        [https://forum.robotframework.org/t//4349|Kommentoi >>]\n        "
    },
    "wait_until_network_is_idle": {
        "name": "odota_kunnes_verkko_on_käyttämättömänä",
        "doc": "*DEPRECATED!!* Käytä sen sijaan `Wait For Load State`.\n\n        Jos sinulla on:\n        | `Wait Until Network Is Idle`    timeout=3s\n        niin vaihda se seuraavaan:\n        | `Wait For Load State`    networkidle    timeout=3s\n\n        Odottaa, kunnes sivulla on ollut vähintään yksi tapaus, jossa ei ole ollut verkko-liikennettä 500 ms:n ajan latauksen jälkeen.\n\n        Ei odota verkko-liikennettä, joka ei ole alkanut 500 ms sisällä sivun latauksesta.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``timeout`` | Aikakatkaisu tukee Robot Frameworkin aikamuotoa. Käyttää selaimen aikakatkaisua, jos sitä ei ole asetettu. |\n\n        Esimerkki:\n        | `Siirry`                        ${URL}\n        | `Wait Until Network Is Idle`    timeout=3s\n\n        [https://forum.robotframework.org/t//4350|Kommentoi >>]\n        "
    },
    "register_keyword_to_run_on_failure": {
        "name": "rekisteröi_avainsana_joka_suoriteaan_epäonnistunisen_kohdalla",
        "doc": "Asettaa avainsanan suoritettavaksi, kun selaimen avainsana epäonnistuu.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``avainsana`` | Avainsanan nimi, joka suoritetaan, jos selaimen avainsana epäonnistuu. Voit käyttää mitä tahansa saatavilla olevaa avainsanaa, mukaan lukien käyttäjän määrittelemiä avainsanoja tai avainsanoja muista kirjastoista. |\n        | ``*args`` | Avainsanaan liittyvät argumentit, jos niitä on. |\n        | ``scope`` | Sovellusala määrittää tämän asetuksen käyttöajan. Saatavilla olevat arvot ovat ``Global``, ``Suite`` tai ``Test`` / ``Task``. Katso lisätietoja kohdasta `Scope Settings`. |\n\n        Alkuperäinen avainsana asetetaan, kun kirjastoa `tuodaan`, ja\n        oletusarvoinen käytetty avainsana on `Take Screenshot`.\n        Kuvankaappaus epäonnistumistilanteessa on erittäin hyödyllinen\n        ominaisuus, mutta huomaa, että se voi hidastaa suoritusta.\n\n        Voit käyttää merkkijonoa ``NONE`` tai mitä tahansa muuta robotin virheellistä nimeä,\n        rekisteröidäksesi tämän toiminnallisuuden pois päältä,\n        kokoaikaisesti, samoin kuin Pythonin ``None``.\n\n        Tämä avainsana palauttaa olion, joka sisältää\n        aiemmin rekisteröidyn epäonnistumisen avainsanan. Paluuarvoa voidaan aina käyttää\n        alkuperäisen arvon palauttamiseen myöhemmin. Palautettu olio sisältää\n        avainsanan nimen ja mahdolliset argumentit, jotka on annettu avainsanalle.\n\n        Jos `Take Screenshot` -avainsana, ilman argumentteja, rekisteröidään suoritettavaksi epäonnistumisen yhteydessä,\n        silloin tiedostonimiargumentin oletusarvoa ei käytetä kuvakaappauksen tiedostonimeksi.\n        Sen sijaan käytetään muotoa ${TEST NAME}_FAILURE_SCREENSHOT_{index} tiedostonimenä.\n        Jos haluat käyttää tiedostonimen argumentin oletusarvoa, käytä\n        arvona robotframework-browser-screenshot-{index}.\n\n        Esimerkki:\n        | `Register Keyword To Run On Failure`    Take Screenshot    # Käyttää ${TEST NAME}_FAILURE_SCREENSHOT_{index} tiedostonimenä\n        | `Register Keyword To Run On Failure`    Take Screenshot    robotframework-browser-screenshot-{index}    # Käyttää robotframework-browser-screenshot-{index} tiedostonimenä\n        | ${edellinen avainsana}=    `Register Keyword To Run On Failure`    NONE    # Poistaa käytöstä epäonnistumisen jälkeisen toiminnallisuuden.\n        | `Register Keyword To Run On Failure`    ${edellinen avainsana}\n        | `Register Keyword To Run On Failure`    Take Screenshot    fullPage=True\n        | `Register Keyword To Run On Failure`    Take Screenshot    failure-{index}    fullPage=True\n\n        [https://forum.robotframework.org/t//4316|Kommentti >>]\n        "
    },
    "set_strict_mode": {
        "name": "aseta_tiukka_tila",
        "doc": "Hallitsee kirjaston tiukan tilan.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``mode`` | Kun asetetaan arvoksi ``True``, avainsanat, jotka etsivät elementtejä, käyttävät Playwrightin [https://playwright.dev/docs/api/class-page#page-query-selector|tiukkaa tilaa]. Avainsana muuttaa kirjaston tiukan tilan arvoa ja palauttaa myös edellisen tiukan tilan arvon. |\n        | ``scope``   | Sovellusala määrittää tämän asetuksen käyttöajan. Saatavilla olevat arvot ovat ``Global``, ``Suite`` tai ``Test`` / ``Task``. Katso lisätietoja kohdasta `Scope`. |\n\n\n        Esimerkki:\n        | ${vanha_tila} =      Set Strict Mode    False\n        | Get Text           //input            # Ei epäonnistu, jos valitsin osoittaa yhteen tai useampaan elementtiin\n        | Set Strict Mode    ${vanha_tila}\n\n        [https://forum.robotframework.org/t//4332|Kommentti >>]\n        "
    },
    "promise_to": {
        "name": "lupaa",
        "doc": "Kääri Browser-kirjaston avainsanan ja tee siitä lupaus.\n\n        Luvattu avainsana suoritetaan ja käynnistetään taustalla.\n        Testin suoritus jatkuu ilman odotusta, että ``kw`` on valmis.\n\n        Palauttaa viittauksen luvattuun avainsanaan.\n\n        ``kw`` Avainsana, joka toimii asynkronisesti taustalla.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``kw`` | Avainsana, joka toimii asynkronisesti taustalla. |\n        | ``*args`` | Avainsanan argumentit normaalisti käytettynä. |\n\n        Esimerkki:\n        | ${lupaus}=     `Promise To`            Wait For Response     matcher=     timeout=3\n        | `Click`           \\#delayed_request\n        | ${sisältö}=        `Wait For`              ${lupaus}\n\n        [https://forum.robotframework.org/t//4312|Kommentti >>]\n        "
    },
    "promise_to_upload_file": {
        "name": "lupaa_ladata_tiedoston",
        "doc": "Palauttaa lupauksen, joka ratkeaa, kun tiedosto ``path`` on ladattu.\n\n        Epäonnistuu, jos tiedoston lataus ei tapahdu aikarajan kuluessa.\n\n        Lataa tiedosto ``path`` seuraavaan sivulla olevaan tiedostovalitsimeen.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``path`` | Polku ladattavaan tiedostoon. |\n\n        Esimerkkikäyttö:\n\n        | ${lupaus}=    `Promise To Upload File`    ${CURDIR}/test_upload_file.txt\n        | `Click`          id=open_file_chooser_button\n        | ${lataustulos}=    `Wait For`    ${lupaus}\n\n        Vaihtoehtoisesti voit käyttää `Upload File By Selector` -avainsanaa.\n\n        [https://forum.robotframework.org/t//4313|Kommentti >>]\n        "
    },
    "promise_to_wait_for_download": {
        "name": "lupaa_odottaa_latausta",
        "doc": "Palauttaa lupauksen, joka odottaa seuraavaa lataustapahtumaa sivulla.\n\n Latausten mahdollistamiseksi kontekstin acceptDownloads -asetuksen on oltava tosi.\n\n Oletuspolulla ladatut tiedostot poistetaan, kun lataus tapahtui.\n\n Jos selain on yhteydessä etäisesti Connect To Browser -avainsanan avulla, saveAs on asetettava tallentaaksesi sen paikallisesti selaimen käyttöympäristöön!\n\n | =Argumentit= | =Kuvaus= |\n | saveAs | Määrittää polun, johon tiedosto tallennetaan pysyvästi. Tiedosto tallennetaan myös väliaikaisesti playwright-kontekstin oletuslataussijaintiin. Jos tyhjä, käytetään generoitua ainutlaatuista polkua (GUID), ja tiedosto poistetaan, kun konteksti suljetaan. |\n | wait_for_finished | Jos tosi, lupaus odottaa latauksen valmistumista. Jos epätosi, lupaus ratkeaa heti latauksen käynnistyttyä. |\n | download_timeout | Maksimiaika latauksen odottamiseen, jos wait_for_finished on asetettu True-arvoon. Jos lataus ei valmistu tänä aikana, avainsana epäonnistuu. |\n\n Avainsana palauttaa tyyppisen DownloadInfo -tyyppisen sanakirjan, joka sisältää ladatun tiedoston polun\n ja ehdotetun tiedostonimen sekä tilan ja latausID:n.\n Esimerkki:\n | {\n | 'saveAs': '/tmp/robotframework-browser/downloads/2f1b3b7c-1b1b-4b1b-9b1b-1b1b1b1b1b1b',\n | 'suggestedFilename': 'downloaded_file.txt'\n | }\n\n Avainsanalla New Browser on downloadsPath -asetus, jota voidaan käyttää oletuslataushakemiston asettamiseen.\n Jos saveAs on asetettu suhteelliseksi poluksi, tiedosto tallennetaan suhteessa selaimen downloadsPath-asetukseen tai jos sitä ei ole asetettu, suhteessa\n Playwrightin työhakemistoon. Jos saveAs on asetettu absoluuttiseksi poluksi, tiedosto tallennetaan siihen absoluuttiseen polkuun riippumatta downloadsPath:sta.\n\n Jos halutaan käyttää latauksen URL-osoitetta, Download-avainsana voi olla yksinkertaisempi vaihtoehto tiedoston lataamiseen.\n\n Odotettu lupaus palauttaa sanakirjan, joka sisältää saveAs- ja suggestedFilename-avaimet. SaveAs sisältää\n tiedoston tallennuspaikan ja suggestedFilename sisältää latauksen ehdotetun nimen.\n Ehdotettu tiedostonimi lasketaan yleensä selaimen toimesta Content-Disposition-vastausotsikosta\n tai latausominaisuudesta. Katso spesifikaatiosta [https://html.spec.whatwg.org/#downloading-resources|whatwg].\n Eri selaimet voivat käyttää eri logiikkaa sen laskemiseen.\n\n Käyttöesimerkki:\n | New Context acceptDownloads=True\n | New Page ${LOGIN_URL}\n | ${dl_promise} Promise To Wait For Download /path/to/download/file.name\n | Click id=file_download\n | ${file_obj}= Wait For ${dl_promise}\n | File Should Exist ${file_obj}[saveAs]\n | Should Be True ${file_obj.suggestedFilename}\n\n [https://forum.robotframework.org/t//4314|Kommentti >>]\n        "
    },
    "wait_for": {
        "name": "odottaa",
        "doc": "Odottaa lupausten suorittamista ja palauttaa niistä tulokset.\n\nPalauttaa yhden tuloksen, jos odotetaan yhtä lupausta. Muussa tapauksessa palauttaa tulosten taulukon. Jos yksi epäonnistuu, tämä avainsana epäonnistuu.\n\nKatso lisätietoja lupauksista kohdasta `Promise To`.\n\nYleistä odottamista elementtien suhteen katso kohdasta `Implicit waiting`.\n\n| =Argumentit= | =Kuvaus= |\n| ``lupaukset`` | Odottavat lupaukset. |\n\nEsimerkki:\n| ${lupaus}= | `Promise To` | `Wait For Response` | matcher= | timeout=3 |\n| `Click` | \\#viivästynyt_pyyntö |\n| ${sisältö}= | `Wait For` | ${lupaus} |\n\n[https://forum.robotframework.org/t//4342|Kommentti >>]\n"
    },
    "wait_for_all_promises": {
        "name": "odota_kaikkia_lupauksia",
        "doc": "Odottaa kaikkien lupausten suorittamista.\n\nJos yksi lupaus epäonnistuu, tämä avainsana epäonnistuu.\n\nEsimerkki:\n| `Promise To` | Wait For Response | matcher= | timeout=3 |\n| `Click` | \\#viivästynyt_pyyntö |\n| `Wait For All Promises` |\n\n[https://forum.robotframework.org/t//4344|Kommentti >>]\n"
    },
    "wait_for_condition": {
        "name": "odota_ehtoa",
        "doc": "Odottaa ehtoa, joka on määritelty selaimen hakijan avainsanoilla tulevaksi todeksi.\n\nTämä avainsana on pohjimmiltaan vain kääre ympärillämme oleville väittämäavainsanoille, mutta aikarajan kanssa. Sitä voidaan käyttää odottamaan mitä tahansa, mikä voidaan myös vahvistaa väittämäavainsanoillamme.\n\nVerrattuna Robot Frameworkin `Wait Until Keywords Succeeds` -avainsanaan, tämä avainsana on helpommin luettava ja käytettävä, mutta se on rajoitettu selaimen kirjaston väittämäavainsanoihin.\n\n| =Argumentit= | =Kuvaus= |\n| ``ehto`` | Ehto, määritelty selaimen hakijan avainsanoilla ilman sanaa ``Get``. |\n| ``*args`` | Argumentit, jotka välitetään ehtoavainsanalle. |\n| ``aikakatkaisu`` | Aikakatkaisu odottaa ehtoa tulemasta todeksi. Käyttää kirjaston oletusaikakatkaisua, jos sitä ei ole asetettu. |\n| ``viesti`` | Korvaa oletusvirheviestin. |\n\n\nHelpoin tapa käyttää tätä avainsanaa on aluksi aloittaa väittämäavainsanalla, jossa on väittämä kuten: `Get Text`\n\nAloitus:\n| `Get Text`    id=status_bar   contains    Done\n\nSitten korvaat sanan `Get` sanalla `Wait For Condition` ja tarvittaessa lisäät aikakatkaisuargumentin.\n\nLoppu:\n| `Wait For Condition`    Teksti    id=status_bar   contains    Done\n\n\nEsimerkki käytöstä:\n| `Wait For Condition`    Elementtien tilat    id=cdk-overlay-0    ==    irtikytkeytynyt\n| `Wait For Condition`    Elementtien tilat     //h1    contains    näkyvä    muokattavissa    käytössä    timeout=2 s\n| `Wait For Condition`    Otsikko    tulisi alkaa    Robot\n| `Wait For Condition`    Url    tulisi päättyä    robotframework.org\n\n[https://forum.robotframework.org/t//5269|Kommentti >>]\n"
    },
    "wait_for_elements_state": {
        "name": "odota_elementtien_tilaa",
        "doc": "Odottaa elementtiä, joka löydetään ``valitsimen`` mukaan täyttämään tilaoptio.\n\nHuomaa, että selainkirjastolla on `Implisiittinen odotus` -mekanismit. Tilanteesta riippuen et ehkä tarvitse käyttää `Wait for Elements State`.\n\nTilaoptiot voivat olla joko ilmestyä/poistua domista tai tulla näkyväksi/piilotetuksi.\nJos hetkellä, kun avainsanaa kutsutaan, valitsin jo täyttää ehdot, avainsana palauttaa välittömästi.\n\nJos valitsin ei täytä ehtoja aikakatkaisun sisällä, avainsana EPÄONNISTUU.\n\n| =Argumentit= | =Kuvaus= |\n| ``valitsin`` | Vastaavan kohteen valitsin. Katso tarkemmat tiedot valitsimista kohdasta `Elementtien löytäminen`. |\n| ``tila`` | Katso `ElementState` selitys. |\n| ``aikakatkaisu`` | käyttää kirjaston oletusaikakatkaisua, jos sitä ei ole asetettu. |\n| ``viesti`` | korvaa oletusvirheviestin. ``Viesti``-argumentti hyväksyy `{valitsin}`, `{toiminto}`, ja `{aikakatkaisu}` [https://docs.python.org/3/library/stdtypes.html#str.format|muoto] -optiot. `{toiminto}` -muotoilija on sama kuin ``tila``-argumentin arvo. |\n\nAvainsana käyttää tiukkaa tilaa, katso `Elementtien löytäminen` lisätietoja tiukasta tilasta.\n\nEsimerkki:\n| `Wait For Elements State`    //h1    näkyvä    timeout=2 s\n| `Wait For Elements State`    //hi    kohdistunut    1s\n\n[https://forum.robotframework.org/t//4345|Kommentti >>]\n"
    },
    "wait_for_function": {
        "name": "odota_toimintoa",
        "doc": "Kyselyt JavaScript-lauseketta tai -funktiota selaimessa, kunnes se palauttaa (JavaScriptin) tosiarvon.\n\n| =Argumentit= | =Kuvaus= |\n| ``funktio`` | Kelpo JavaScript-funktio tai JavaScript-funktion runko. Esimerkiksi ``() => true`` ja ``true`` käyttäytyvät samalla tavalla. |\n| ``valitsin`` | Valitsin, joka on selvitettävä ja välitettävä JavaScript-funktiolle. Tämä on ensimmäinen argumentti, jonka funktio saa. Jos annetaan valitsin, funktio on välttämätön, jossa on argumentti elementtikahvaa varten. Esimerkiksi ``(element) => document.activeElement === element`` Katso tarkemmat tiedot valitsimista kohdasta `Elementtien löytäminen`. |\n| ``kysely`` | Oletusarvoinen kyselyarvo \"raf\" kyselyt takaisin ``requestAnimationFrame`` -toiminnon avulla. Mikä tahansa muu arvo kyselylle tulkitaan robottikehyksen aikana väliaikana kyselyjen välillä. |\n| ``aikakatkaisu`` | käyttää kirjaston oletusaikakatkaisua, jos sitä ei ole asetettu. |\n| ``viesti`` | korvaa oletusvirheviestin. ``Viesti``-argumentti hyväksyy `{valitsin}`, `{funktio}`, ja `{aikakatkaisu}` [https://docs.python.org/3/library/stdtypes.html#str.format|muoto] -optiot. |\n\nAvainsana käyttää tiukkaa tilaa, katso `Elementtien löytäminen` lisätietoja tiukasta tilasta.\n\nEsimerkki käytöstä:\n| ${lupaus}      `Lupausta Varten`      `Wait For Function`    elementti => element.style.width==\"100%\"    valitsin=\\#edistyksen_palkki    aikakatkaisu=4s\n| `Click`         \\#edistyksen_palkki\n| `Wait For`      ${lupaus}\n\n[https://forum.robotframework.org/t//4346|Kommentti >>]\n"
    },
    "wait_for_load_state": {
        "name": "odota_lataustilaa",
        "doc": "Odottaa, että sivu saavuttaa vaaditun lataustilan.\n\nTämä ratkaisee, kun sivu saavuttaa vaaditun lataustilan, oletusarvoisesti lataa.\nNavigoinnin on täytynyt tapahtua, kun tätä metodia kutsutaan. Jos nykyinen asiakirja on jo\nsaavuttanut vaaditun tilan, ratkaisee välittömästi.\n\n| =Argumentit= | =Kuvaus= |\n| ``tila`` | Odotettava tila, oletusarvoisesti `lataus`. Mahdollisia arvoja ovat `lataus|domcontentloaded|verkkohiljainen` |\n| ``aikakatkaisu`` | Aikakatkaisu tukee Robottikehyksen aikamuotoa. Käyttää selaimen aikakatkaisua, jos ei ole asetettu. |\n\nJos tila on jo saavutettu nykyisen asiakirjan latauksen aikana, taustalla oleva Playwright ratkaisee\nvälittömästi. Voi olla yksi seuraavista:\n\n| 'lataus' - odota lataustapahtuman laukeamista.\n| 'domcontentloaded' - odota DOMContentLoaded-tapahtuman laukeamista.\n| 'verkkohiljainen' - EI SUOSITELTU odota, kunnes verkkoyhteyksiä ei ole vähintään 500 ms.\n\nEsimerkki:\n| `Siirry`                         ${URL}\n| `Odota Lataustilaa`    domcontentloaded    aikakatkaisu=3s\n"
    },
    "local_storage_clear": {
        "name": "paikallinen_säilytys_tyhjennä",
        "doc": "Poistaa kaikki tallennetut tiedot paikallisesta tallennuksesta.\n\n| =Argumentit= | =Kuvaus= |\n| ``kehysvalitsin`` | Jos tämä valitsin osoittaa elementtiin iframe-kehikon sisällä, käytetään kyseisen kehyksen LocalStoragea. Esimerkki: ``iframe[name=\"test\"] >>> body`` |\n\nEsimerkki:\n| `Paikallinen Tallennus Aseta Kenttä`      Foo    palkki\n| `Paikallinen Tallennus Tyhjennä`\n| ${kohde} =    `Paikallinen Tallennus Hae Kenttä`    Foo\n| Tulee Olla Yhtä Suuri    ${kohde}    ${Ei mitään}\n\n[https://forum.robotframework.org/t//4299|Kommentti >>]\n"
    },
    "local_storage_get_item": {
        "name": "paikallinen_säilytys_hae_tuote",
        "doc": "Hakee tallennetut tiedot paikallisesta tallennuksesta.\n\n| =Argumentit= | =Kuvaus= |\n| ``avain`` | Nimetty avain tallennuksessa olevaan kohteeseen. |\n| ``väittämäoperaattori`` | Väittämäoperaattori, jota käytetään. Katso lisätietoja kohdasta `Väittämät`. |\n| ``väittämän_odotettu`` | Odotettu arvo, jota verrataan. |\n| ``viesti`` | Mukautettu virhesanoma käytettäväksi. |\n| ``kehysvalitsin`` | Jos tämä valitsin osoittaa elementtiin iframe-kehikon sisällä, käytetään kyseisen kehyksen LocalStoragea. Esimerkki: ``iframe[name=\"test\"] >>> body`` |\n\nKatso `Väittämät` lisätietoja väittämäargumenteista. Oletusarvo on Ei mitään.\n\nEsimerkki:\n| `Paikallinen Tallennus Hae Kenttä`    Avain    ==    Arvo    Oma virhe\n| ${arvo} =    `Paikallinen Tallennus Hae Kenttä`    Avain\n\n[https://forum.robotframework.org/t//4300|Kommentti >>]\n"
    },
    "local_storage_remove_item": {
        "name": "paikallinen_säilytys_poista_tuote",
        "doc": "Poistaa tallennetun datan avaimella paikallisesta tallennuksesta.\n\n| =Argumentit= | =Kuvaus= |\n| ``avain`` | Kohteen nimi, joka poistetaan. |\n| ``kehysvalitsin`` | Jos tämä valitsin osoittaa elementtiin iframe-kehikon sisällä, käytetään kyseisen kehyksen LocalStoragea. Esimerkki: ``iframe[name=\"test\"] >>> body`` |\n\nEsimerkki:\n| `Paikallinen Tallennus Aseta Kenttä`      Foo    palkki\n| `Paikallinen Tallennus Poista Kenttä`    Foo\n| ${kohde} =    `Paikallinen Tallennus Hae Kenttä`    Foo\n| Tulee Olla Yhtä Suuri    ${kohde}    ${Ei mitään}\n\n[https://forum.robotframework.org/t//4301|Kommentti >>]\n"
    },
    "local_storage_set_item": {
        "name": "paikallinen_säilytys_aseta_tuote",
        "doc": "Tallentaa tiedot paikalliseen tallennukseen.\n\n| =Argumentit= | =Kuvaus= |\n| ``avain`` | Avain, jonka alle se tulisi tallentaa. |\n| ``arvo`` | Arvo, joka tulisi tallentaa merkkijonona. |\n| ``kehysvalitsin`` | Jos tämä valitsin osoittaa elementtiin iframe-kehikon sisällä, käytetään kyseisen kehyksen LocalStoragea. Esimerkki: ``iframe[name=\"test\"] >>> body`` |\n\nEsimerkki:\n| `Paikallinen Tallennus Aseta Kenttä`    Avain    Arvo\n\n[https://forum.robotframework.org/t//4302|Kommentti >>]\n"
    },
    "session_storage_clear": {
        "name": "istunnon_tallennustila_tyhjennä",
        "doc": "Poistaa kaikki tallennetut tiedot istuntotallennuksesta.\n\n| =Argumentit= | =Kuvaus= |\n| ``kehysvalitsin`` | Jos tämä valitsin osoittaa elementtiin iframe-kehikon sisällä, käytetään kyseisen kehyksen SessionStoragea. Esimerkki: ``iframe[name=\"test\"] >>> body`` |\n\nEsimerkki:\n| `Istuntotallennus Aseta Kenttä`    avain3    arvo3\n| `Istuntotallennus Tyhjennä`\n| `Istuntotallennus Hae Kenttä`    avain3    ==    ${Ei mitään}\n\n[https://forum.robotframework.org/t//4323|Kommentti >>]\n"
    },
    "session_storage_get_item": {
        "name": "istunnon_tallennustila_hae_tuote",
        "doc": "Hakee tallennetut tiedot istuntotallennuksesta.\n\n| =Argumentit= | =Kuvaus= |\n| ``avain`` | Nimetty avain tallennuksessa olevaan kohteeseen. |\n| ``väittämäoperaattori`` | Väittämäoperaattori, jota käytetään. Katso lisätietoja kohdasta `Väittämät`. |\n| ``väittämän_odotettu`` | Odotettu arvo, jota verrataan. |\n| ``viesti`` | Mukautettu virhesanoma käytettäväksi. |\n| ``kehysvalitsin`` | Jos tämä valitsin osoittaa elementtiin iframe-kehikon sisällä, käytetään kyseisen kehyksen SessionStoragea. Esimerkki: ``iframe[name=\"test\"] >>> body`` |\n\nEsimerkki:\n| `Istuntotallennus Aseta Kenttä`    avain2    arvo2\n| ${kohde} =    `Istuntotallennus Hae Kenttä`    avain1\n| Tulee Olla Yhtä Suuri    ${kohde}    arvo2\n\n[https://forum.robotframework.org/t//4324|Kommentti >>]\n"
    },
    "session_storage_remove_item": {
        "name": "istunnon_tallennustila_poista_tuote",
        "doc": "Poista tallennetut tiedot avaimella istuntotallennuksesta.\n\n        | =Argumentit= | =Kuvaus= |\n        | ``avain`` | Kohteen nimi, joka poistetaan. |\n        | ``kehysvalitsin`` | Jos tämä valitsin osoittaa elementtiin iframe-kehikon sisällä, käytetään kyseisen kehyksen SessionStoragea. Esimerkki: ``iframe[name=\"test\"] >>> body`` |\n\n        Esimerkki:\n        | `Istuntotallennus Aseta Kenttä`       avain2    arvo2\n        | `Istuntotallennus Poista Kenttä`    avain2\n        | `Istuntotallennus Hae Kenttä`       avain2    ==    ${Ei mitään}\n\n        [https://forum.robotframework.org/t//4325|Kommentti >>]\n        "
    },
    "session_storage_set_item": {
        "name": "istunnon_tallennustila_aseta_tuote",
        "doc": "Tallenna tiedot istuntotallennukseen.\n\n| =Argumentit= | =Kuvaus= |\n| ``avain`` | Avain, jonka alle se tulisi tallentaa. |\n| ``arvo`` | Arvo, joka tulisi tallentaa merkkijonona. |\n| ``kehysvalitsin`` | Jos tämä valitsin osoittaa elementtiin iframe-kehikon sisällä, käytetään kyseisen kehyksen SessionStoragea. Esimerkki: ``iframe[name=\"test\"] >>> body`` |\n\nEsimerkki:\n| `Istuntotallennus Aseta Kenttä`    avain2    arvo2\n\n[https://forum.robotframework.org/t//4326|Kommentti >>]\n        "
    },
    "__init__": {
        "name": "__init__",
        "doc": "Selainkirjasto on selaimen automatisointikirjasto Robot Frameworkille.\n\nTämä on avainsanadokumentaatio Selainkirjastolle. Lisätietoja\nasennuksesta, tuesta ja muusta löydät\n[https://github.com/MarketSquare/robotframework-playwright|projektin sivuilta].\nLisätietoja Robot Frameworkista löydät osoitteesta [https://robotframework.org|robotframework.org].\n\nSelainkirjasto käyttää\n[https://github.com/microsoft/playwright|Playwright Node -moduulia]\nautomaattiseen [https://www.chromium.org/Home|Chromiumin],\n[https://www.mozilla.org/en-US/firefox/new/|Firefoxin]\nja [https://webkit.org/|WebKitin] automatisointiin yhdellä kirjastolla.\n\n\n== Sisällysluettelo ==\n\n%TOC%\n\n= Selain, Konteksti ja Sivu =\n\nSelainkirjasto toimii kolmella eri tasolla, jotka perustuvat toisiinsa:\n*Selain*, *Konteksti* ja *Sivu*.\n\n\n== Selaimet ==\n\n*Selain* voidaan käynnistää yhdellä kolmesta eri moottorista: Chromiumista, Firefoxista tai Webkitistä.\n\n=== Tuetut selaimet ===\n\n|   Selain       | Selain tällä moottorilla                             |\n| ``chromium``  | Google Chrome, Microsoft Edge (vuodesta 2020), Opera |\n| ``firefox``   | Mozilla Firefox                                      |\n| ``webkit``    | Apple Safari, Mail, AppStore macOSilla ja iOS:llä     |\n\nKoska [https://github.com/microsoft/playwright|Playwright] tulee mukana valmiiksi asennettujen\nbinäärien kera kaikkia selaimia varten, lisäajureita kuten geckodriveria ei tarvita.\n\nKaikki nämä selaimet, jotka kattavat yli 85% maailmanlaajuisesti käytetyistä selaimista,\nvoivat olla testattavissa Windowsilla, Linuxilla ja macOS:lla.\nErillisiä koneita ei enää tarvita.\n\nSelainprosessi käynnistetään oletuksena ``päättömästi`` (ilman graafista käyttöliittymää).\nSuorita `New Browser` määritetyillä argumenteilla, jos pyydetään selainta graafisella\nkäyttöliittymällä tai jos välityspalvelin on määritettävä.\nYhdessä selainprosessissa voi olla useita konteksteja.\n\n\n== Kontekstit ==\n\n*Konteksti* vastaa joukkoa riippumattomia incognito-sivuja selaimessa,\njotka jakavat evästeet, istunnot tai profiiliasetukset. Kaksi erillistä\nkontekstia eivät jaa evästeitä, istuntoja tai profiiliasetuksia.\nVerrattuna Seleniumiin, nämä eivät vaadi omaa selainprosessia.\nPuhtaan ympäristön saamiseksi testi voi avata vain uuden kontekstin.\nTämän vuoksi uudet riippumattomat selainistunnot voidaan avata\nRobot Framework Browserilla noin 10 kertaa nopeammin kuin Seleniumilla\navaamalla vain `New Context` avoimessa selaimessa.\n\nSaman sarjan sivujen jakamiseksi tilaa, käytä samaa kontekstia avaamalla\nkonteksti `New Context` sarjan määrityksessä.\n\nKontekstikerros on hyödyllinen esimerkiksi eri käyttäjäistuntojen testaamiseen\nsaman verkkosivun kanssa avaamatta kokonaan uutta selainkontekstia.\nKonteksteilla voi myös olla yksityiskohtaisia määrityksiä, kuten maantieteellinen sijainti, kieliasetukset,\nnäkymän koko tai värimaailma. Kontekstit tukevat myös http-salasanojen asettamista,\njotta perusautentikointia voidaan testata. Jotta tiedostoja voidaan ladata testin aikana,\n``acceptDownloads``-argumentin on oltava asetettu arvoon ``True`` `New Context` -avainsanassa.\nKonteksti voi sisältää erilaisia sivuja.\n\n\n== Sivut ==\n\n*Sivu* sisältää ladatun verkkosivun sisällön ja selailuhistorian.\nSivut ja selainvälilehdet ovat samoja.\n\nTyypillinen käyttö voi olla:\n| *** Testitapaukset ***\n| Selaimen käynnistäminen sivulla\n|     New Browser    chromium    headless=false\n|     New Context    viewport={'width': 1920, 'height': 1080}\n|     New Page       https://marketsquare.github.io/robotframework-browser/Browser.html\n|     Get Title      ==    Browser\n\n`Open Browser` -avainsana avaa uuden selaimen, uuden kontekstin ja uuden sivun.\nTätä avainsanaa käytetään nopeisiin kokeiluihin tai vianetsintäistuntoihin.\n\nKun `New Page` kutsutaan ilman avointa selainta, `New Browser`\nja `New Context` suoritetaan ensin oletusarvoisilla arvoilla.\n\nJokaisella selaimella, kontekstilla ja sivulla on oma uniikki tunniste, jolla ne voidaan tunnistaa.\nKaikki avoimet kohteet voidaan hakea `Get Browser Catalog` -avainsanalla sanakirjana.\n\n= Automaattinen sivun ja kontekstin sulkeminen =\n\n%AUTO_CLOSING_LEVEL%\n\n= Elementtien löytäminen =\n\nKaikki kirjaston avainsanat, jotka tarvitsevat vuorovaikutusta elementin kanssa\nverkkosivulla, ottavat argumentin, joka yleensä on nimeltään ``selector`` ja joka määrittää,\nmiten elementti löydetään. Avainsanat voivat löytää elementtejä tiukassa tilassa.\nJos tiukka tila on tosi ja paikannin löytää useita elementtejä sivulta, avainsana epäonnistuu.\nJos avainsana löytää yhden elementin, avainsana ei epäonnistu tiukan tilan vuoksi.\nJos tiukka tila on epätosi, avainsana ei epäonnistu, vaikka valitsin osoittaisikin useita elementtejä.\nTiukka tila on oletuksena käytössä, mutta sitä voi muuttaa kirjaston\n`importing` tai `Set Strict Mode` -avainsanalla. Avainsanan dokumentaatio kertoo,\njos avainsana käyttää tiukkaa tilaa. Jos avainsana ei mainitse tiukan tilan käyttöä,\nniin tiukkaa tilaa ei sovelleta avainsanaan. Lisätietoja löytyy Playwrightista\n[https://playwright.dev/docs/api/class-page#page-query-selector|tiukan tilan dokumentaatiosta].\n\nOletuksena tuetut valitsimen strategiat on lueteltu alla olevassa taulukossa.\n\n| = Strategia = |     = Vastaava peruste =      |         = Esimerkki =               |\n| ``css``       | CSS-valitsin.                  | ``css=.class > \\#login_btn``      |\n| ``xpath``     | XPath-lauseke.                 | ``xpath=//input[@id=\"login_btn\"]`` |\n| ``text``      | Selaimen tekstimootori.       | ``text=Kirjaudu sisään``            |\n| ``id``        | Elementin ID-attribuutti.     | ``id=login_btn``                   |\n\nCSS-valitsimia voidaan tallentaa myös `Record selector` -avainsanalla.\n\n== Eksplisiittinen valitsimen strategia ==\n\nEksplisiittinen valitsimen strategia määritetään etuliitteellä käyttämällä syntaksia\n``strategia=arvo``. Erottajan ympärillä olevat välilyönnit jätetään huomiotta, joten\n``css=foo``, ``css= foo`` ja ``css = foo`` ovat kaikki samanarvoisia.\n\n\n== Implisiittinen valitsimen strategia ==\n\n*Oletusvalitsimen strategia on `css`.*\n\nJos valitsimessa ei ole yhtä tunnetuista eksplisiittisistä valitsimen strategioista,\noletetaan, että se sisältää css-valitsimen.\n\nValitsimet, jotka alkavat ``//`` tai ``..``, katsotaan xpath-valitsimiksi.\n\nValitsimet, jotka ovat lainausmerkeissä, katsotaan tekstin valitsimiksi.\n\nEsimerkit:\n\n| # CSS-valitsimet ovat oletusarvoisia.\n| `Click`  span > button.some_class         # Tämä on samanarvoinen\n| `Click`  css=span > button.some_class     # kuin tämä.\n|\n| # // tai .. johtavat xpath-valitsimen strategiaan\n| `Click`  //span/button[@class=\"some_class\"]\n| `Click`  xpath=//span/button[@class=\"some_class\"]\n|\n| # \"teksti\" lainausmerkeissä johtaa tarkkaan tekstivalitsimen strategiaan\n| `Click`  \"Kirjaudu sisään\"\n| `Click`  text=\"Kirjaudu sisään\"\n\n\n== CSS ==\n\nKuten aiemmin mainittiin, oletusvalitsimen strategia on `css`. Katso\n[https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | css-valitsin]\nlisätietoja varten.\n\nMikä tahansa virheellinen valitsin, joka ei ala ``//`` tai ``..`` eikä ala tai pääty\nlainausmerkkiin, oletetaan css-valitsimeksi.\n\nHuomaa, että ``#`` on kommenttimerkki [https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#ignored-data | Robot Framework -syntaksissa] ja sen on oltava\nescapetoitu kuten ``\\#`` toimiakseen [https://developer.mozilla.org/en-US/docs/Web/CSS/ID_selectors | css ID -valitsimena].\n\nEsimerkit:\n| `Click`  span > button.some_class\n| `Get Text`  \\#käyttäjänimi_kenttä  ==  Joonas\n\n\n== XPath ==\n\nXPath-moottori vastaa [https://developer.mozilla.org/en/docs/Web/API/Document/evaluate|Document.evaluate]-toimintoa.\nEsimerkki: ``xpath=//html/body//span[text()=\"Hei maailma\"]``.\n\nVirheellinen valitsin, joka alkaa ``//`` tai ``..``, oletetaan olevan xpath-valitsin.\nEsimerkiksi ``//html/body`` muunnetaan muotoon ``xpath=//html/body``. Lisää\nesimerkkejä näytetään `Esimerkit`-osiossa.\n\nHuomaa, että xpath ei pysty käsittelemään [https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM|varjojuuria].\n\n\n== Teksti ==\n\nTekstimootori löytää elementin, joka sisältää tekstisolmun annetulla tekstillä.\nEsimerkiksi ``Click    text=Kirjaudu sisään`` klikkaa kirjautumispainiketta ja\n``Wait For Elements State   text=\"laiskasti ladattu teksti\"`` odottaa \"laiskasti ladattu teksti\"\nnäkyvän sivulla.\n\nTekstimootori löytää kentät niiden etikettien perusteella tekstiä syöttävissä avainsanoissa.\n\nVirheellinen valitsin, joka alkaa ja päättyy lainausmerkillä (joko ``\"`` tai ``'``), oletetaan\nolevan tekstivalitsin. Esimerkiksi ``Click    \"Kirjaudu sisään\"`` muunnetaan muotoon ``Click    text=\"Kirjaudu sisään\"``.\nHuomaa, että nämä johtavat vain täsmällisiin osumiin!\nLisää esimerkkejä näytetään `Esimerkit`-osiossa.\n\n\n=== Ei-herkkä osuma ===\n\nOletuksena osuma on kirjainkoosta riippumaton, ohittaa johtavan/päättyvän välilyönnin ja\netsii alimerkkijonoa. Tämä tarkoittaa, että ``text= Kirjaudu sisään`` vastaa\n``<button>Painike kIRJAUDU (klikkaa minua)</button>``.\n\n=== Tarkka osuma ===\n\nTekstin sisältö voidaan eristää yksinkertaisilla tai kaksinkertaisilla lainausmerkeillä tarkkaa vastaavuutta varten,\nvaatien täsmällistä osumaa, mukaan lukien määritetty välilyönti ja kirjainkoko.\nTämä tarkoittaa, että ``text=\"Kirjaudu \"`` vastaa vain ``<button>Kirjaudu </button>`` tarkalleen\nyhdellä välilyönnillä `Kirjaudu` jälkeen. Lainattu teksti noudattaa tavallisia karkaisusääntöjä, esim.\nkäytä ``\\\"`` kaksinkertaisen lainausmerkin karkaisemiseksi kaksinkertaisessa lainausmerkkijonossa: ``text=\"foo\\\"bar\"``.\n\n=== RegEx ===\n\nTekstin sisältö voi myös olla JavaScriptin kaltaista regexiä, joka on kääritty / -symboleihin.\nTämä tarkoittaa, että ``text=/^hei .*!$/i`` tai ``text=/^Hei .*!$/`` vastaa ``<span>Hei Peter Parker!</span>``\nmillä tahansa nimellä `Hei` jälkeen, päättyen `!`-merkkiin.\nEnsimmäinen on merkitty ``i`` kirjaimen koosta riippumattomaksi.\nKatso lisätietoja RegExistä [https://regex101.com/|https://regex101.com].\n\n=== Painike ja lähetä-arvot ===\n\nTyyppiä painike ja lähetä olevat syöttöelementit renderöidään niiden arvolla tekstinä,\nja tekstimootori löytää ne. Esimerkiksi ``text=Kirjaudu sisään`` vastaa\n``<input type=button value=\"Kirjaudu\">``.\n\n== Kaskadinen valitsinsyntaksi ==\n\nSelainkirjasto tukee samoja valitsimen strategioita kuin pohjana\noleva Playwrightin solmumoduuli: xpath, css, id ja text. Strategia voidaan\njoko määrittää eksplisiittisesti etuliitteellä tai strategia voi olla implisiittinen.\n\nSelaimen suuri etu on, että yhden valitsimen sisällä voidaan käyttää\nuseita valitsinmoottoreita. On mahdollista sekoittaa XPath-, CSS- ja Tekstivalitsimia,\nkun valitaan yksi elementti.\n\nValitsimet ovat merkkijonoja, jotka koostuvat yhdestä tai useammasta lauseesta,\njotka erotetaan ``>>`` -merkillä, esim. ``lause1 >> lause2 >> lause3``. Kun\nuseita lauseita on läsnä, seuraava kysytään suhteessa edellisen tulokseen.\nSelainkirjasto tukee erilaisten valitsimien yhdistämistä ``>>`` -merkillä erotettuina.\n\nEsimerkiksi:\n| `Korosta elementit`    \"Hei\" >> ../.. >> .valitsin_nappi\n| `Korosta elementit`    text=Hei >> xpath=../.. >> css=.valitsin_nappi\n\nJokainen lause sisältää valitsinmoottorin nimen ja valitsimen rungon, esim.\n``moottori=runko``. Tässä ``moottori`` on yksi tuetuista moottoreista (esim. css tai\noma). Valitsin ``runko`` noudattaa kyseisen moottorin formaattia,\nesim. css-moottorille sen tulisi olla [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | css-valitsin].\nRungon muoto oletetaan jättävän huomiotta johtavat ja loppuvalkoiset välilyönnit,\njotta ylimääräinen välilyönti voidaan lisätä luettavuuden vuoksi. Jos valitsinmoottorin\nrungossa tarvitaan ``>>``, se tulisi escapetaa\nmerkkijonossa, jotta sitä ei sekoitettaisi lauseen erottimeen,\nesim. ``text=\"jotain >> tekstiä\"``.\n\nValitsinmoottorin nimen eteen voidaan lisätä etuliite ``*`` napatakseen elementin,\njoka vastaa kyseistä lausetta viimeisen sijasta. Esimerkiksi,\n``css=artikkeli >> text=Hei`` napataan elementti, jossa on teksti ``Hei``,\nja ``*css=artikkeli >> text=Hei`` (huomaa *) napataan artikkelielementti,\njoka sisältää jonkin elementin tekstillä Hei.\n\nMukavuuden vuoksi väärässä formaatissa olevat valitsimet muunnetaan heuristisesti\noikeaan formaattiin. Katso `Implisiittinen valitsimen strategia`\n\n== Esimerkit ==\n| # kysyy 'div' css-valitsimen\n| Get Element    css=div\n|\n| # kysyy '//html/body/div' xpath-valitsimen\n| Get Element    //html/body/div\n|\n| # kysyy '\"foo\"' tekstivalitsimen\n| Get Element    text=foo\n|\n| # kysyy 'span' css-valitsimen '//html/body/div' xpath-valitsimen tuloksessa\n| Get Element    xpath=//html/body/div >> css=span\n|\n| # muunnetaan 'css=div':ksi\n| Get Element    div\n|\n| # muunnetaan 'xpath=//html/body/div':ksi\n| Get Element    //html/body/div\n|\n| # muunnetaan 'text=\"foo\"':ksi\n| Get Element    \"foo\"\n|\n| # kysyy joka toisen span-elementin div-elementtiä elementissä, jolla on tunnus foo\n| Get Element    \\#foo >> css=span:nth-child(2n+1) >> div\n| Get Element    id=foo >> css=span:nth-child(2n+1) >> div\n\nHuomaa, että Robot Frameworkissa käyttäminen ``#`` aloittavana merkkinä tulkittaisiin kommenttina.\nTämän tosiasian vuoksi ``#id`` on escapetoitava kuten ``\\#id``.\n\n== iFramet ==\n\nOletuksena valitsimen ketjut eivät ylitä kehyksen rajoja. Se tarkoittaa, että yksinkertainen CSS-valitsin ei pysty valitsemaan\nkehyksen sisällä olevaa elementtiä tai kehyssarjaa. Tähän käyttötapaukseen on olemassa erityinen valitsin ``>>>``, jota voidaan\nkäyttää yhdistämään valitsin kehykselle ja valitsin kehyksen sisällä olevalle elementille.\n\nOletetaan tämä yksinkertainen pseudohtml-pätkä:\n| <iframe id=\"iframe\" src=\"src.html\">\n|   #document\n|     <!DOCTYPE html>\n|     <html>\n|       <head></head>\n|       <body>\n|         <button id=\"btn\">Click Me</button>\n|       </body>\n|     </html>\n| </iframe>\n\nTässä on avainsanakutsu, joka klikkaa painiketta kehyksen sisällä.\n\n| Click   id=iframe >>> id=btn\n\n``>>>``:n vasemmalla ja oikealla puolella olevat valitsimet voivat olla mitä tahansa kelvollisia valitsimia.\nValitsinlauseke suoraan ennen kehyksen avaajaa ``>>>`` on valittava itse kehys-elementti.\nKehyksen valinta on ainoa paikka, jossa Selainkirjasto muokkaa valitsinta, kuten selitetty yllä.\nKaikissa tapauksissa kirjasto ei muuta valitsinta millään tavalla, sen sijaan se välitetään sellaisenaan Playwright-puolelle.\n\nJos useita avainsanoja halutaan suorittaa kehyksen sisällä,\non mahdollista määrittää valitsimen etuliite avainsanalla `Set Selector Prefix`.\nJos tätä etuliitettä käytetään kehyksessä/iframessa, sillä on samanlainen käyttäytyminen kuin Selenium-kirjaston avainsanalla `Select Frame`.\n\n== Web-komponentit ja varjo-DOM ==\n\nPlaywright ja näin ollen myös Selain kykenevät automaattisesti läpäisemään varjo-DOMit\nja ovat siksi parasta automaatioteknologiaa työskenneltäessä Web-komponenttien kanssa.\n\nMyös muut teknologiat väittävät voivansa käsitellä\n[https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM|varjo-DOMia ja Web-komponentteja].\nKuitenkaan mikään niistä ei läpäise varjojuuria automaattisesti,\nmikä voi olla hankalaa työskenneltäessä varjo-DOMin ja Web-komponenttien kanssa.\n\nTämän vuoksi css-moottori läpäisee varjojuuret. Tarkemmin sanottuna jokainen\n[https://developer.mozilla.org/en-US/docs/Web/CSS/Descendant_combinator|Jälkeläisvalitsin]\nläpäisee mielivaltaisen määrän avoimia varjojuuria, mukaan lukien implisiittinen jälkeläisvalitsin\nvalitsimen alussa.\n\nTämä tarkoittaa, ettei ole tarpeen valita jokaista varjo-isäntää, avata sen varjojuuri ja\nvalita seuraava varjo-isäntä, kunnes saavutetaan hallittava elementti.\n\n=== CSS:light ===\n\n``css:light`` -moottori vastaa [https://developer.mozilla.org/en/docs/Web/API/Document/querySelector | Document.querySelector]\nja käyttäytyy CSS-määrityksen mukaisesti.\nKuitenkin se ei läpäise varjojuuria.\n\n``css`` -moottori etsii ensin elementtejä kevyessä DOMissa iteraatiojärjestyksessä,\nja sitten rekursiivisesti avoimista varjojuurista iteraatiojärjestyksessä. Se ei\netsi suljetuista varjojuurista eikä iframeista.\n\nEsimerkit:\n\n| <article>\n|   <div>Kevyessä DOMissa</div>\n|   <div slot='myslot'>Kevyessä DOMissa, mutta menee varjoaukkoon</div>\n|   <open mode shadow root>\n|       <div class='in-the-shadow'>\n|           <span class='content'>\n|               Varjo-DOMissa\n|               <open mode shadow root>\n|                   <li id='target'>Syvällä varjossa</li>\n|               </open mode shadow root>\n|           </span>\n|       </div>\n|       <slot name='myslot'></slot>\n|   </open mode shadow root>\n| </article>\n\nHuomaa, että ``<open mode shadow root>`` ei ole html-elementti, vaan pikemminkin varjojuuri,\njoka on luotu ``element.attachShadow({mode: 'open'})``.\n\n- Sekä ``\"css=article div\"`` että ``\"css:light=article div\"`` vastaavat ensimmäistä ``<div>Kevyessä DOMissa</div>``.\n- Sekä ``\"css=article > div\"`` että ``\"css:light=article > div\"`` vastaavat kahta ``div`` -elementtiä, jotka ovat suora lapsia ``article``.\n- ``\"css=article .in-the-shadow\"`` vastaa ``<div class='in-the-shadow'>``, läpäisten varjojuuren, kun taas ``\"css:light=article .in-the-shadow\"`` ei vastaa mitään.\n- ``\"css:light=article div > span\"`` ei vastaa mitään, koska molemmat kevyen DOMin ``div`` -elementit eivät sisällä ``span``.\n- ``\"css=article div > span\"`` vastaa ``<span class='content'>``, läpäisten varjojuuren.\n- ``\"css=article > .in-the-shadow\"`` ei vastaa mitään, koska ``<div class='in-the-shadow'>`` ei ole ``article``:n suora lapsi\n- ``\"css:light=article > .in-the-shadow\"`` ei vastaa mitään.\n- ``\"css=article li#target\"`` vastaa ``<li id='target'>Syvällä varjossa</li>``, läpäisten kaksi varjojuurta.\n\n=== text:light ===\n\n``text``-moottori avaa varjojuuret samalla tavalla kuin ``css``, kun taas ``text:light`` ei tee niin.\nTekstimoottori etsii ensin elementtejä kevyessä DOMissa iteraatiojärjestyksessä, ja sitten\nrekursiivisesti avoimista varjojuurista iteraatiojärjestyksessä. Se ei etsi\nsuljettuja varjojuuria tai iframeja.\n\n=== id, data-testid, data-test-id, data-test ja niiden :light-vastaavat ===\n\nAttribuuttimoottorit valitsevat vastaavan attribuutin arvon perusteella.\nEsimerkiksi: ``data-test-id=foo`` vastaa ``css=[data-test-id=\"foo\"]``,\nja ``id:light=foo`` vastaa ``css:light=[id=\"foo\"]``.\n\n== Elementtiviittauksen syntaksi ==\n\nOn mahdollista saada viittaus Sijainnikkaan käyttämällä `Get Element` ja `Get Elements` avainsanoja.\nAvainsanat eivät tallenna viittausta elementtiin HTML-dokumentissa, vaan se tallentaa viittauksen Playwrightin\n[https://playwright.dev/docs/api/class-locator|Locator]-objektiin. Sijainninvaraaja tallentaa loogisen mallin siitä,\nkuinka hakea kyseinen elementti sivulta. Joka kerta, kun toimenpide suoritetaan, sijainninvaraaja etsii uudelleen\nsivun elementit. Tätä viitettä voidaan käyttää *ensimmäisenä* osana valitsinta käyttämällä erityistä valitsimen\nsyntaksia `element=`, kuten tässä:\n\n| ${ref}=    Get Element    .some_class\n|            Click          ${ref} >> .some_child     # Sijainninvaraaja etsii elementin sivulta.\n|            Click          ${ref} >> .other_child    # Sijainninvaraaja etsii jälleen elementin sivulta.\n\nEsimerkin `.some_child` ja `.other_child` -valitsimet ovat suhteessa ${ref}:n viittaamaan elementtiin. Huomaa, että kehyksen läpäisy ei ole mahdollista elementtiviittauksen kanssa.\n\n= Väittämät =\n\nAvainsanat, jotka hyväksyvät argumentit ``assertion_operator`` <`AssertionOperator`> ja ``assertion_expected``,\nvoivat valinnaisesti väittää, että määritelty ehto pätee. Avainsanat palauttavat arvon myös silloin, kun\nväite tarkistetaan avainsanan avulla.\n\nAssert yrittää uudelleen ja epäonnistuu vasta määritetyn aikakatkaisun jälkeen.\nKatso `Tuonti` ja ``retry_assertions_for`` (oletuksena 1 sekunti) tämän aikakatkaisun määrittämiseksi.\n\n\n%ASSERTION_TABLE%\n\nOletuksena avainsanat antavat virhesanoman, jos väite epäonnistuu.\nOletusvirhesanomat voidaan korvata ``message``-argumentilla.\n``message``-argumentti hyväksyy `{value}`, `{value_type}`, `{expected}` ja\n`{expected_type}` [https://docs.python.org/3/library/stdtypes.html#str.format|format]\n-vaihtoehdot.\n`{value}` on avainsanan palauttama arvo ja `{expected}`\non käyttäjän määrittelemä odotettu arvo, yleensä arvo ``assertion_expected``-argumentissa. `{value_type}` ja\n`{expected_type}` ovat tyyppimäärittelyjä `{value}` ja `{expected}`-argumenteista.\nSamanlaisesti kuin Pythonin\n[https://docs.python.org/3/library/functions.html#type|type] palauttaa tyyppimäärittelyn.\nVäitteitä yritetään uudelleen, kunnes ``timeout`` on vanhentunut, jos ne eivät läpäise.\n\nVäitteen ``assertion_expected``-arvoa ei muunneta kirjaston toimesta ja\nsitä käytetään sellaisenaan. Siksi, kun väite tehdään, ``assertion_expected``\n-argumentin arvon ja avainsanan palauttaman arvon on oltava samantyyppisiä. Jos tyypit\neivät ole samat, väite epäonnistuu. Esimerkiksi `Get Text` palauttaa aina merkkijonon\nja sitä on verrattava merkkijonoon, vaikka palautettu arvo näyttäisi numerolta.\n\nMuilla Avainsanoilla on muita tiettyjä tyyppejä, joita ne palauttavat.\n`Get Element Count` palauttaa aina kokonaisluvun.\n`Get Bounding Box` ja `Get Viewport Size` voidaan suodattaa.\nNe palauttavat sanakirjan ilman suodatinta ja numeron suodatettaessa.\nNämä Avainsanat tekevät automaattisen muunnoksen odotetulle arvolle, jos numero palautetaan.\n\n* < vähemmän tai suurempi > Merkkijonoilla*\nMerkkijonojen vertailu ``suurempi kuin`` tai ``pienempi kuin`` vertaa jokaista merkkiä,\nalottaen 0:sta riippuen siitä, missä se sijaitsee koodisivulla.\nEsimerkki: ``A < Z``, ``Z < a``, ``ac < dc`\nSe ei koskaan vertaa elementtien pituutta. Ei listoja eikä merkkijonoja.\nVertailu lopetetaan ensimmäiseen erilaiseen merkkiin.\nEsimerkit: ``'abcde' < 'abd'``, ``'100.000' < '2'``\nPython 3:ssa ja siten myös Selaimessa ei ole mahdollista verrata numeroita\nmerkkijonoihin suuremmalla tai pienemmällä operaattorilla.\nAvainsanoilla, jotka palauttavat numeroita, annettu odotettu arvo muunnetaan automaattisesti\nnumeroksi ennen vertailua.\n\n\nGetterit `Get Page State` ja `Get Browser Catalog` palauttavat sanakirjan. Sanakirjan arvoja voi suoraan väittää.\nHuomioi mahdolliset tyypit, koska ne arvioidaan Pythonissa. Esimerkiksi:\n\n| Get Page State    validate    2020 >= value['year']                     # Numeroiden vertailu\n| Get Page State    validate    \"TÄRKEÄ VIESTI!\" == value['message']  # Merkkijonojen vertailu\n\n== 'then' tai 'evaluate' -sulkeet ==\n\nAvainsanat, jotka hyväksyvät argumentit ``assertion_operator`` ja ``assertion_expected``,\nvoivat valinnaisesti käyttää myös ``then`` tai ``evaluate``-sulkua muuttaakseen palautettua arvoa\nBuiltIn Evaluate -toiminnolla. Todelliseen arvoon pääsee käsiksi ``value``:lla.\n\nEsimerkiksi ``Get Title  then  'OTSIKKO: '+value``.\nKatso\n[https://robotframework.org/robotframework/latest/libraries/BuiltIn.html#Evaluating%20expressions|\nBuiltin Evaluating expressions]\nlisätietoja syntaksista.\n\n== Esimerkit ==\n\n| # *Avainsana*    *Valitsin*                    *Avain*        *Väittämäoperaattori*    *Odotettu väite*\n| Get Title                                           equal                 Sivun otsikko\n| Get Title                                           ^=                    Sivu\n| Get Style    //*[@id=\"div-element\"]      leveys      >                     100\n| Get Title                                           matches               \\\\w+\\\\s\\\\w+\n| Get Title                                           validate              arvo == \"Kirjautumissivu\"\n| Get Title                                           evaluate              arvo if arvo == \"jokin arvo\" else \"jotain muuta\"\n\n\n= Implisiittinen odottaminen =\n\nSelainkirjastolla ja Playwrightilla on monia mekanismeja auttamaan elementtien odottamisessa.\nPlaywright odottaa automaattisesti ennen toimintojen suorittamista elementteihin.\nKatso lisätietoja [https://playwright.dev/docs/actionability/ | Playwrightin dokumentaatiosta] automaattisen odottamisen osalta.\n\nPlaywrightin automaattisen odottamisen lisäksi Browser-väitteet odottavat ja yrittävät uudelleen\nmääritetyn ajan ennen kuin ne epäonnistuvat mistään `Väittämisistä`.\nAika määritetään Browser-kirjaston alustuksessa ``retry_assertions_for``:lla.\n\nBrowser-kirjasto sisältää myös eksplisiittisiä odotusavainsanoja, kuten `Wait for Elements State`,\njos tarvitaan enemmän hallintaa odottamiseen.\n\n= Kokeellinen: Saman solmun prosessin uudelleenkäyttö =\n\nBrowser-kirjasto integroi Node.js:n ja Pythonin. Node.js-puolta voidaan suorittaa myös itsenäisenä prosessina.\nBrowser-kirjastoja ajetaan samalla koneella voidaan kommunikoida sen kanssa sen sijaan, että aloitettaisiin uusia node-prosesseja.\nTämä voi nopeuttaa suoritusta, kun testejä ajetaan rinnakkain.\nNode-puolen käynnistämiseksi suorita hakemistossa, jossa Browser-paketti sijaitsee\n``PLAYWRIGHT_BROWSERS_PATH=0 node Browser/wrapper/index.js PORT``.\n\n``PORT`` on portti, jota haluat käyttää node-prosessissa.\nSuorittaaksesi sen testit esimerkiksi pabotilla tee ``ROBOT_FRAMEWORK_BROWSER_NODE_PORT=PORT pabot ..``.\n\n= Kokeellinen: Parametrien antaminen node-prosessille =\n\nBrowser-kirjasto on integroitu Node.js:n ja Pythonin kanssa. Browser-kirjasto käynnistää node-prosessin, kommunikoidakseen\nPlaywrightin API:n kanssa Node.js-puolella. On mahdollista antaa parametreja käynnistetylle node-prosessille määrittelemällä\nROBOT_FRAMEWORK_BROWSER_NODE_DEBUG_OPTIONS-ympäristömuuttuja, ennen testien suorittamisen aloittamista. Esimerkki:\n``ROBOT_FRAMEWORK_BROWSER_NODE_DEBUG_OPTIONS=--inspect;robot polku/kohti/testejä``.\nYmpäristömuuttujaan voi määritellä useita argumentteja, ja argumentit on erotettava pilkulla.\n\n= Käyttöalan asettaminen =\n\nJotkut avainsanat, jotka manipuloivat kirjaston asetuksia, ottavat mukanaan alueargumentin.\nTällä alueargumentilla voi asettaa kyseisen asetuksen \"elämänkaaren\".\nKäytettävissä olevat alueet ovat: `Global`, `Suite` ja `Test`/`Task`\nKatso `Scope`.\nKun alue on päättynyt, tätä määriteltyä alueen asetusta, kuten aikarajaa, ei enää käytetä.\n\nElämänkaaret:\n- `Global`-alue on voimassa ikuisesti, kunnes se korvataan toisella `Global`-alueella. Tai tilapäisesti paikallisesti ylikirjoitetaan kapeammalla alueella.\n- `Suite`-alue ylikirjoittaa paikallisesti `Global`-alueen ja on voimassa kunnes sen sisällä oleva suite loppuu, tai jos se korvataan myöhemmin asetuksella `Global` tai samalla alueella. Alisuite perii asetuksen vanhemman suitten asetuksesta, mutta sillä voi myös olla oma paikallinen `Suite`-asetus, joka peritään sen alisuiteille.\n- `Test` tai `Task`-alue peritään sen vanhemmalta suitelta, mutta kun se on asetettu, se on voimassa kyseisen testin tai tehtävän loppuun asti.\n\nUusi asetus, joka on korkeammalla asteella, poistaa aina matalamman asteen alueen, joka saattaa olla vastuussa.\nJoten `Suite`-alueen asetus testistä asettaa kyseisen alueen robotin tiedoston suiteen, jossa testi on, ja poistaa mahdollisen `Test`-alueen, joka voi olla voimassa.\n\n= Kokeellinen: Saman node prosessin uudelleenkäyttö =\n\nBrowser-kirjasto integroi Node.js:n ja Pythonin. Node.js-puolta voidaan suorittaa myös itsenäisenä prosessina.\nBrowser-kirjastoja voidaan ajaa samalla koneella kommunikoiden sen kanssa sen sijaan, että käynnistettäisiin uusia node-prosesseja.\nTämä voi nopeuttaa suoritusta, kun testejä ajetaan samanaikaisesti.\nNode-puolen käynnistämiseksi suorita hakemistossa, jossa Browser-paketti sijaitsee\n``PLAYWRIGHT_BROWSERS_PATH=0 node Browser/wrapper/index.js PORT``.\n\n``PORT`` on portti, jota haluat käyttää node-prosessissa.\nSuorittaaksesi testit esimerkiksi pabotilla tee ``ROBOT_FRAMEWORK_BROWSER_NODE_PORT=PORT pabot ..``.\n\n= Kokeellinen: Parametrien antaminen node-prosessille =\n\nBrowser-kirjasto on integroitu Node.js:n ja Pythonin kanssa. Browser-kirjasto käynnistää node-prosessin, jotta se voi kommunikoida\nPlaywrightin API:n kanssa Node.js-puolella. On mahdollista antaa parametreja käynnistetylle node-prosessille määrittelemällä\nROBOT_FRAMEWORK_BROWSER_NODE_DEBUG_OPTIONS-ympäristömuuttujan ennen testien suorittamista. Esimerkki:\n``ROBOT_FRAMEWORK_BROWSER_NODE_DEBUG_OPTIONS=--inspect;robot polku/kohti/testejä``.\nYmpäristömuuttujaan voi määritellä useita argumentteja, ja argumentit on erotettava pilkulla.\n\n= Browser-kirjaston laajentaminen JavaScript-moduulilla =\n\nBrowser-kirjastoa voidaan laajentaa JavaScriptillä. Moduulin on oltava CommonJS-muodossa, jota Node.js käyttää.\nVoit kääntää ES6-moduulisi Node.js:n CommonJS-tyyliin Babylillä. Monia muita kieliä\nvoidaan myös kääntää moduuleiksi, joita voidaan käyttää Node.js:stä. Esimerkiksi TypeScript, PureScript ja\nClojureScript, mainitakseni muutamia.\n\n| async function myGoToKeyword(url, args, page, logger, playwright) {\n|   logger(args.toString())\n|   playwright.coolNewFeature()\n|   return await page.goto(url);\n| }\n\nFunktioissa voi olla mitä tahansa määrä argumentteja, ja argumenteilla voi olla oletusarvoja.\n\nJoitain varattuja argumentteja, joihin ei päästä käsiksi Robot Frameworkin puolelta, on:\n\n``page``: [https://playwright.dev/docs/api/class-page|Playwrightin Page-objekti].\n\n``args``: loput arvot Robot Frameworkin avainsanan kutsusta ``*args``.\n\n``logger``: takaisinkutsufunktio, joka ottaa merkkijonoja argumentteina ja kirjoittaa ne robotin lokimerkintään. Voidaan kutsua useita kertoja.\n\n``playwright``: playwright-moduuli (* from 'playwright'). Hyödyllinen integroitaessa Playwrightin ominaisuuksia, joita Browser-kirjasto ei tue omilla avainsanoillaan. [https://playwright.dev/docs/api/class-playwright|API-dokumentaatio]\n\nmyös argumenttinimeä ``self`` ei voi käyttää.\n\n== Esimerkkimoduuli.js ==\n\n| async function myGoToKeyword(pageUrl, page) {\n|   await page.goto(pageUrl);\n|   return await page.title();\n| }\n| exports.__esModule = true;\n| exports.myGoToKeyword = myGoToKeyword;\n\n== Esimerkki Robot Frameworkin puolelta ==\n\n| *** Asetukset ***\n| Library   Browser  jsextension=${CURDIR}/moduuli.js\n|\n| *** Testitapaukset ***\n| Hei\n|   Uusi Sivu\n|   ${otsikko}=  myGoToKeyword  https://playwright.dev\n|   Tulee olla sama  ${otsikko}  Playwright\n\nMyös valitsinsyntaksia voidaan laajentaa mukautetulla valitsimella käyttämällä js-moduulia\n\n== Esimerkkimoduuliavainsana mukautetun valitsimen rekisteröimiseksi ==\n\n| async function rekisteröiOmaValitsin(playwright) {\n| playwright.selectors.register(\"omavalitsin\", () => ({\n|    // Palauttaa ensimmäisen annetun valitsimen mukaisen elementin juuren alipuussa.\n|    query(root, valitsin) {\n|       return root.querySelector(`a[data-title=\"${valitsin}\"]`);\n|     },\n|\n|     // Palauttaa kaikki annetun valitsimen mukaiset elementit juuren alipuussa.\n|     queryAll(root, valitsin) {\n|       return Array.from(root.querySelectorAll(`a[data-title=\"${valitsin}\"]`));\n|     }\n| }));\n| return 1;\n| }\n| exports.__esModule = true;\n| exports.rekisteröiOmaValitsin = rekisteröiOmaValitsin;\n\n= Laajennukset =\n\nBrowser-kirjasto tarjoaa laajennuksia tapana muokata ja lisätä kirjaston avainsanoja ja muuttaa joitakin sisäisiä toimintoja\nluomatta uutta kirjastoa tai muokkaamatta lähdekoodia. Katso laajennusrajapinnan\n[https://github.com/MarketSquare/robotframework-browser/blob/main/docs/plugins/README.md | dokumentaatiota] lisätietoja varten.\n\n= Kielituki =\n\nBrowser-kirjasto tarjoaa mahdollisuuden kääntää avainsanojen nimiä ja dokumentaatiota uuteen kieleen. Jos kieli\non määritetty, Browser-kirjasto etsii\n[https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#module-search-path | moduulien hakupoluilta]\nPython-paketteja, jotka alkavat `robotframework_browser_translation` käyttäen\n[https://packaging.python.org/en/latest/guides/creating-and-discovering-plugins/ | Python-laajennusrajapintaa]. Kirjasto\nkäyttää nimeämiskäytäntöä löytääkseen Python-laajennukset. Pakettien on toteutettava yksi API-kutsu, `get_language`\nilman argumentteja. Metodin on palautettava sanakirja, joka sisältää kaksi avainta: `language` ja `path`. Kielen avain määrittelee,\nmikä kieli paketti sisältää. Arvon tulisi myös vastata (kirjainten koosta välittämättä)\nkirjaston alustusparametrin `language` arvoa. Polku-parametrin arvon tulisi olla koko polku käännöstiedostoon.\nTiedoston nimi tai laajennus ei ole tärkeä, mutta tiedon on oltava json-muodossa. Jsonin avaimet ovat\nmetodin nimiä, eivät avainsanan nimiä, jotka toteuttavat avainsanat. Avaimen arvo on json-objekti, joka sisältää\ntietoja kahdesta avaimesta: `name` ja `doc`. `name`-avain sisältää käännetyn avainsanan nimen ja `doc` sisältää\nkäännetyn avainsanan dokumentaation. Dokumentaation ja nimen tarjoaminen on valinnainen, esimerkkikäännöstiedosto voi\nsisältää vain käännökset avainsanan nimiin tai vain dokumentaatioon. On kuitenkin aina suositeltavaa tarjota käännös\nsekä nimelle että dokumentaatiolle.\n\nOletusarvoinen käännöstiedosto, englanninkielinen, voidaan luoda suorittamalla\n`rfbrowser translation /polku/kohti/käännöstiedostoa.json` -komento. Komento ei tarjoa käännöksiä muille\nkielille, se tarjoaa vain helpon tavan luoda täydellinen luettelo käännettyjä avainsanoja ja niiden dokumentaatiota\noikeassa muodossa. On myös mahdollista lisätä avainsanoja kirjaston laajennuksista ja js-laajennuksista\nantamalla `--plugings` ja `--jsextension` -argumentit komennolle. Esimerkki:\n`rfbrowser translation --plugings myplugin.SomePlugin --jsextension /polku/kohti/js-laajennusta.js /polku/kohti/käännöstiedostoa.json`"
    },
    "__intro__": {
        "name": "__intro__",
        "doc": "Browser kirjasto on selainten automaatiokirjasto Robot Frameworkille.\n\n    Tämä on avainsanadokumentaatio Browser-kirjastolle. Lisätietoja\n    asennuksesta, tuesta ja muista aiheista löydät\n    [https://github.com/MarketSquare/robotframework-playwright|projektin sivuilta].\n    Lisätietoja Robot Frameworkista löydät osoitteesta [https://robotframework.org|robotframework.org].\n\n    Browser-kirjasto käyttää\n    [https://github.com/microsoft/playwright|Playwright Node-moduulia]\n    automatisoidakseen [https://www.chromium.org/Home|Chromiumin],\n    [https://www.mozilla.org/en-US/firefox/new/|Firefoxin]\n    ja [https://webkit.org/|WebKitin] yhdellä kirjastolla.\n\n\n    == Sisällysluettelo ==\n\n    %TOC%\n\n    = Selain, Konteksti ja Sivu =\n\n    Browser-kirjasto toimii kolmella eri tasolla, jotka rakentuvat päällekkäin:\n    *Selain*, *Konteksti* ja *Sivu*.\n\n\n    == Selaimet ==\n\n    *Selain* voidaan käynnistää yhdellä kolmesta\n    eri moottorista: Chromium, Firefox tai Webkit.\n\n    === Tuetut Selaimet ===\n\n    |   Selain      | Selain tällä moottorilla                            |\n    | ``chromium`` | Google Chrome, Microsoft Edge (vuodesta 2020), Opera |\n    | ``firefox``  | Mozilla Firefox                                    |\n    | ``webkit``   | Apple Safari, Mail, AppStore MacOS- ja iOS-laitteissa|\n\n    Koska [https://github.com/microsoft/playwright|Playwright] sisältää valmiiksi\n    paketin kaikista selaimista, ei tarvita lisäajureita kuten geckodriveria.\n\n    Kaikkia näitä selaimia, jotka kattavat yli 85% maailmanlaajuisesti käytetyistä selaimista,\n    voidaan testata Windowsilla, Linuxilla ja Macilla.\n    Erillisiä koneita ei enää tarvita.\n\n    Selaimen prosessi käynnistyy oletuksena 'headless'-tilassa (ilman graafista käyttöliittymää).\n    Aja `New Browser` määritetyillä argumenteilla, jos halutaan selain, jossa on graafinen käyttöliittymä,\n    tai jos välityspalvelin on määritettävä.\n    Selaimen prosessi voi sisältää useita konteksteja.\n\n\n    == Kontekstit ==\n\n    *Konteksti* vastaa joukkoa riippumattomia incognito-sivuja selaimessa,\n    jotka jakavat evästeet, istunnot tai profiiliasetukset. Kahden erillisen\n    kontekstin sivut eivät jaa evästeitä, istuntoja tai profiiliasetuksia.\n    Toisin kuin Selenium, nämä eivät vaadi omaa selainprosessia.\n    Saadakseen puhtaan ympäristön testi voi vain avata uuden kontekstin.\n    Tämän ansiosta uusia riippumattomia selainsessioita voidaan avata\n    Robot Framework Browserilla noin 10 kertaa nopeammin kuin Seleniumilla\n    pelkästään avaamalla `New Context` avatun selaimen sisällä.\n\n    Sivujen jakamiseksi samassa suitessa käytä samaa kontekstia avaamalla\n    kontekstin `New Context`-toiminnolla suiten asetuksissa.\n\n    Kontekstikerros on hyödyllinen esimerkiksi eri käyttäjäistuntojen testaamiseen\n    samalla verkkosivulla avaamatta kokonaan uutta selainkontekstia.\n    Konteksteilla voi olla myös yksityiskohtaisia määrityksiä, kuten maantieteellinen\n    sijainti, kieliasetukset, näkymäkoon tai väriskaala. Kontekstit tukevat\n    myös http-tunnusten asettamista, jotta perusautentikointia voidaan testata.\n    Tiedostojen lataamiseksi testin aikana `New Context`-toiminnolle on\n    asetettava `acceptDownloads`-argumentiksi arvo `True`. Yhdessä kontekstissa\n    voi olla erilaisia sivuja.\n\n\n    == Sivut ==\n\n    *Sivu* sisältää ladatun verkkosivuston sisällön ja selailuhistorian.\n    Sivut ja selaimen välilehdet ovat samat.\n\n    Tyypillistä käyttöä voisi olla:\n    | *** Testitapaukset ***\n    | Selaimen avaaminen sivulla\n    |     New Browser    chromium    headless=false\n    |     New Context    viewport={'width': 1920, 'height': 1080}\n    |     New Page       https://marketsquare.github.io/robotframework-browser/Browser.html\n    |     Get Title      ==    Browser\n\n    `Open Browser`-avainsana avaa uuden selaimen, uuden kontekstin ja uuden sivun.\n    Tämä avainsana on hyödyllinen nopeisiin kokeiluihin tai vianmäärityssessioihin.\n\n    Kun `New Page`-toimintoa kutsutaan ilman avointa selainta, ensin suoritetaan\n    `New Browser` ja `New Context` oletusarvoilla.\n\n    Jokaisella selaimella, kontekstilla ja sivulla on ainutlaatuinen tunniste,\n    jolla ne voidaan tunnistaa. Kaikki avoinna oleva sisältö voidaan hakea\n    `Get Browser Catalog`-toiminnolla sanakirjana.\n\n    = Automaattinen sivun ja kontekstin sulkeminen =\n\n    %AUTO_CLOSING_LEVEL%\n\n    = Elementtien löytäminen =\n\n    Kaikki kirjaston avainsanat, jotka tarvitsevat vuorovaikutusta elementin\n    kanssa verkkosivulla, ottavat argumentin, joka yleensä on nimeltään ``selector``\n    ja joka määrittää, miten elementti löydetään. Avainsanat voivat löytää elementtejä tiukassa\n    tilassa. Jos tiukka tila on tosi ja sijainnin avulla löytyy useita elementtejä sivulta,\n    avainsana epäonnistuu. Jos avainsana löytää yhden elementin, avainsana ei epäonnistu\n    tiukan tilan takia. Jos tiukka tila on epätosi, avainsana ei epäonnistu, vaikka valitsin\n    osoittaisi moniin elementteihin. Tiukka tila on oletuksena käytössä, mutta sitä voidaan\n    muuttaa kirjaston `importing` tai `Set Strict Mode`-avainsanalla. Avainsanan dokumentaatiossa\n    ilmoitetaan, käyttääkö avainsana tiukkaa tilaa. Jos avainsana ei ilmoita käyttävänsä tiukkaa\n    tilaa, sitä ei sovelleta avainsanaan. Lisätietoja löytyy Playwrightin\n    [https://playwright.dev/docs/api/class-page#page-query-selector|tiukasta dokumentaatiosta].\n\n    Oletuksena tuetut valitsimen strategiat on lueteltu alla olevassa taulukossa.\n\n    | = Strategia = |     = Vastaa perusteella =     |         = Esimerkki =                   |\n    | ``css``      | CSS-valitsin.                  | ``css=.class > \\#login_btn``           |\n    | ``xpath``    | XPath-lauseke.                 | ``xpath=//input[@id='login_btn']``    |\n    | ``text``     | Selaimen tekstimoodi.          | ``text=Kirjaudu sisään``               |\n    | ``id``       | Elementin tunnisteattribuutti.| ``id=login_btn``                        |\n\n    CSS-valitsimet voidaan tallentaa myös käyttäen `Record selector`-avainsanaa.\n\n    == Selaimen osoitinstrategia ==\n\n    Selaimen osoitinstrategia määritellään etuliitteellä käyttäen syntaksia\n    ``strategia=arvo``. Erikoismerkkien ympärillä olevat välilyönnit jätetään huomiotta, joten\n    ``css=foo``, ``css= foo`` ja ``css = foo`` ovat kaikki samanarvoisia.\n\n\n    == Implisiittinen osoitinstrategia ==\n\n    *Oletusarvoinen osoitinstrategia on `css`.*\n\n    Jos osoitin ei sisällä yhtä tunnetuista eksplisiittisistä osoitinstrategioista, sitä\n    pidetään CSS-valitsimenä.\n\n    Valitsimet, jotka alkavat merkillä ``//`` tai ``..``, katsotaan xpath-valitsimiksi.\n\n    Lainausmerkeillä ympäröidyt valitsimet katsotaan tekstivalitsimiksi.\n\n    Esimerkit:\n\n    | # CSS-valitsimet ovat oletusarvoisia.\n    | `Click`  span > button.some_class         # Tämä vastaa\n    | `Click`  css=span > button.some_class     # tätä.\n    |\n    | # // tai .. johtavat xpath-valitsinstrategiaan\n    | `Click`  //span/button[@class='some_class']\n    | `Click`  xpath=//span/button[@class='some_class']\n    |\n    | # 'teksti' lainausmerkeissä johtaa tarkkaan tekstivalitsinstrategiaan\n    | `Click`  'Kirjaudu sisään'\n    | `Click`  text='Kirjaudu sisään'\n\n\n    == CSS ==\n\n    Kuten aiemmin mainittiin, oletusarvoinen osoitinstrategia on `css`. Katso\n    [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | css-valitsin]\n    lisätietoja varten.\n\n    Mikä tahansa virheellinen valitsin, joka ei ala merkillä ``//`` tai ``..`` eikä ala ja päättyy\n    lainausmerkkiin, katsotaan css-valitsimeksi.\n\n    Huomaa, että ``#`` on kommenttimerkki [https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#ignored-data | Robot Frameworkin syntaksissa] ja sen täytyy\n    olla poistettu käytöstä kuten ``\\#``, jotta se toimisi [https://developer.mozilla.org/en-US/docs/Web/CSS/ID_selectors | css ID -valitsimena].\n\n    Esimerkit:\n    | `Click`  span > button.some_class\n    | `Get Text`  \\#käyttäjätunnuskenttä  ==  Jorma\n\n\n    == XPath ==\n\n    XPath-moottori vastaa [https://developer.mozilla.org/en/docs/Web/API/Document/evaluate|Document.evaluate].\n    Esimerkki: ``xpath=//html/body//span[text()='Hei maailma']``.\n\n    Virheellinen valitsin, joka alkaa merkillä ``//`` tai ``..``, katsotaan xpath-valitsimeksi.\n    Esimerkiksi ``//html/body`` muunnetaan muotoon ``xpath=//html/body``. Lisää\n    esimerkkejä näytetään `Esimerkit`-osiossa.\n\n    Huomaa, että xpath ei tunnista [https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM|varjojuuria].\n\n\n    == Teksti ==\n\n    Teksti-moottori löytää elementin, joka sisältää välitetyn tekstin sisältävän tekstisolmun.\n    Esimerkiksi ``Click    text=Kirjaudu sisään`` klikkaa kirjautumispainiketta, ja\n    ``Wait For Elements State   text='laiska ladattu teksti'`` odottaa 'laiska ladattu teksti'\n    ilmestymistä sivulle.\n\n    Teksti-moottori löytää kentät niiden teksteihin perustuvien etikettien mukaan tekstiä syöttävissä avainsanoissa.\n\n    Virheellinen valitsin, joka alkaa ja päättyy lainausmerkillä (joko ``''`` tai ``'``), katsotaan\n    tekstivalitsimeksi. Esimerkiksi ``Click    'Kirjaudu sisään'`` muunnetaan muotoon ``Click    text='Kirjaudu sisään'``.\n    Huomaa, että nämä johtavat vain täsmällisiin osumiin!\n    Lisää esimerkkejä näytetään `Esimerkit`-osiossa.\n\n\n    === Ei-herkkä osuma ===\n\n    Oletusarvoisesti osuma on kirjainkoosta riippumaton, jättää huomiotta johtavat/päättyvät välilyönnit ja\n    etsii alimerkkijonoa. Tämä tarkoittaa, että ``text= Kirjaudu sisään`` vastaa\n    ``<button>Painike kIRJAUDU SISÄÄN (klikkaa minua)</button>``.\n\n    === Tarkka osuma ===\n\n    Tekstirunko voidaan päättää yksin- tai tuplalainausmerkeillä tarkkaa osumaa varten,\n    vaatien tarkkaa osumaa, mukaan lukien määritetyt välilyönnit ja kirjainkoko.\n    Tämä tarkoittaa, että ``text='Kirjaudu '`` vastaa vain ``<button>Kirjaudu </button>`` yhdellä välilyönnillä\n    'Kirjaudu'-tekstin jälkeen. Lainatun tekstin mukaisesti noudatetaan tavallisia poistumissääntöjä, esimerkiksi\n    käytä ``\\'`` tuplalainatun merkkijonon tuplalainauksen poistamiseen: ``text='foo\\'bar'``.\n\n    === Säännölliset lausekkeet ===\n\n    Tekstirunko voi olla myös JavaScript-tyyppinen säännöllinen lauseke /-merkkien sisällä.\n    Tämä tarkoittaa, että ``text=/^hei .*!$/i`` tai ``text=/^Hei .*!$/`` vastaa ``<span>Hei Peter Parker!</span>``\n    millä tahansa nimellä 'Hei'-tekstin jälkeen, joka päättyy ``!``.\n    Ensimmäinen on merkitty ``i``:llä kirjainkoosta riippumattomana. Katso lisätietoja säännöllisistä lausekkeista\n    osoitteesta [https://regex101.com/|https://regex101.com].\n\n    === Painikkeiden ja Lähetä-arvojen ===\n\n    Tyypin painike ja lähettää sisään syöttöelementit näytetään niiden arvona tekstinä,\n    ja tekstimoottori löytää ne. Esimerkiksi ``text=Kirjaudu sisään`` vastaa\n    ``<input type=button value='Kirjaudu sisään'>``.\n\n    == Ketjutetun valitsinsyntaksin ==\n\n    Browser-kirjasto tukee samoja valitsinsuunnitelmia kuin pohjalla oleva\n    Playwrightin node-moduuli: xpath, css, id ja text. Strategia voi joko\n    olla nimenomaan määritelty etuliitteellä tai strategia voi olla implisiittinen.\n\n    Browserin suuri etu on, että useita valitsinmoottoreita voidaan käyttää\n    yhdessä valitsimessa. On mahdollista sekoittaa XPath-, CSS- ja Teksti-valitsimia samalla\n    kun valitaan yhtä elementtiä.\n\n    Valitsimet ovat merkkijonoja, jotka koostuvat yhdestä tai useammasta lausekkeesta, jotka erotetaan\n    ``>>`` -merkillä, esim. ``lause1 >> lause2 >> lause3``. Kun useita lausekkeita\n    on läsnä, seuraava kysytään suhteessa edellisen tulokseen.\n    Browser-kirjasto tukee eri valitsimien yhdistämistä, jotka on erotettu ``>>``:llä.\n\n    Esimerkiksi:\n    | `Korosta Elementit`    'Hei' >> ../.. >> .valitse_painike\n    | `Korosta Elementit`    text=Hei >> xpath=../.. >> css=.valitse_painike\n\n    Jokainen lause sisältää valitsinmoottorin nimen ja valitsimen rungon, esim.\n    ``moottori=body``. Tässä ``moottori`` on yksi tuetuista moottoreista (esim. css tai\n    oma). Valitsin ``runko`` noudattaa tietyn moottorin muotoa,\n    esimerkiksi css-moottoria varten sen pitäisi olla [https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | css-valitsin].\n    Runkomuoto oletetaan jättävän johtavat ja päättyvät välilyönnit huomiotta,\n    jotta ylimääräisiä välilyöntejä voidaan lisätä luettavuuden vuoksi. Jos valitsin\n    moottorin tarvitsee sisällyttää ``>>`` runkoon, sen tulisi olla pakotettu\n    merkkijonon sisällä, jotta sitä ei sekoiteta lauseen erottimeen,\n    esim. ``text='jotain >> tekstiä'``.\n\n    Valitsinmoottorin nimi voidaan edeltää ``*``:lla vangitakseen elementin,\n    joka vastaa tiettyä lauseketta viimeisen sijaan. Esimerkiksi,\n    ``css=artikkeli >> text=Hei`` vangitsee elementin, jossa on teksti ``Hei``,\n    ja ``*css=artikkeli >> text=Hei`` (huomaa *) vangitsee artikkelielementin\n    joka sisältää jonkin elementin tekstin Hei.\n\n    Mukavuuden vuoksi valitsimet väärässä muodossa muunnetaan heuristisesti\n    oikeaan muotoon. Katso `Implisiittinen valitsimen strategia`\n\n    == Esimerkit ==\n    | # hakee 'div' css-valitsimen\n    | Hae Elementti    css=div\n    |\n    | # hakee '//html/body/div' xpath-valitsimen\n    | Hae Elementti    //html/body/div\n    |\n    | # hakee ''foo' tekstivalitsimen\n    | Hae Elementti    text=foo\n    |\n    | # hakee 'span' css-valitsimen '//html/body/div' xpath-valitsimen tuloksen sisältä\n    | Hae Elementti    xpath=//html/body/div >> css=span\n    |\n    | # muutetaan 'css=div':ksi\n    | Hae Elementti    div\n    |\n    | # muutetaan 'xpath=//html/body/div':ksi\n    | Hae Elementti    //html/body/div\n    |\n    | # muutetaan 'text='foo':ksi\n    | Hae Elementti    'foo'\n    |\n    | # hakee joka toisen span-elementin div-elementistä, jolla on tunniste foo\n    | Hae Elementti    \\#foo >> css=span:nth-child(2n+1) >> div\n    | Hae Elementti    id=foo >> css=span:nth-child(2n+1) >> div\n\n    Huomaa, että ``#``:n käyttö Robot Frameworkissa tulkittaisiin kommenttina.\n    Tämän seurauksena ``#id`` on pakko muuttaa muotoon ``\\#id``.\n\n    == iFramet ==\n\n    Oletusarvoisesti valitsinketjut eivät ylitä kehyksen rajoja. Tämä tarkoittaa, että\n    yksinkertainen CSS-valitsin ei pysty valitsemaan elementtiä, joka sijaitsee iframe:ssä\n    tai kehyssarjassa. Tässä käyttötapauksessa on erityinen valitsin ``>>>``, jota voidaan\n    käyttää yhdistämään kehyksen valitsin ja valitsin elementille\n    sisällä kehyksessä.\n\n    Otetaan tämä yksinkertainen pseudohtml-pätkä:\n    | <iframe id='iframe' src='src.html'>\n    |   #document\n    |     <!DOCTYPE html>\n    |     <html>\n    |       <head></head>\n    |       <body>\n    |         <button id='btn'>Click Me</button>\n    |       </body>\n    |     </html>\n    | </iframe>\n\n    Tässä on avainsanakutsu, joka napsauttaa painiketta kehyksessä.\n\n    | Napsauta   id=iframe >>> id=btn\n\n    ``>>>``:n vasemmalla ja oikealla puolella olevat valitsimet voivat olla mitä tahansa kelvollisia valitsimia.\n    Valitsimen lause heti kehyksen avaajan ``>>>`` edessä on valittava itse kehyselementti.\n    Kehyksen valinta on ainoa paikka, jossa Browser Library muokkaa valitsinta, kuten yllä on selitetty.\n    Kaikissa tapauksissa kirjasto ei muuta valitsinta millään tavalla, sen sijaan se välitetään sellaisenaan\n    Playwright-puolelle.\n\n    Jos useita avainsanoja on suoritettava kehyksessä,\n    on mahdollista määrittää valitsimen etuliite käyttämällä `Aseta Valitsimen Etuliite`.\n    Jos tämä etuliite asetetaan kehykselle/iframe:lle, sillä on samanlainen toiminta kuin SeleniumLibrary-avainsanalla `Valitse Kehys`.\n\n    == Web-komponentit ja Varjo-DOM ==\n\n    Playwright ja siten myös Browser pystyvät automaattisesti läpäisemään Varjo-DOM:it\n    ja ovat siksi parhaita automaatioteknologioita työskenneltäessä Web-komponenttien kanssa.\n\n    Myös muut teknologiat väittävät pystyvänsä käsittelemään\n    [https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM|Varjo-DOM:ia ja Web-komponentteja].\n    Kuitenkaan yksikään niistä ei läpäise varjorakenteita automaattisesti.\n    mikä voi olla hankalaa työskenneltäessä Varjo-DOM:in ja Web-komponenttien kanssa.\n\n    Tämän vuoksi css-moottori läpäisee varjorakenteet. Tarkemmin sanottuna jokainen\n    [https://developer.mozilla.org/en-US/docs/Web/CSS/Descendant_combinator|Jälkeläissuodatin]\n    läpäisee mielivaltaisen määrän avoimia varjorakenteita, mukaan lukien\n    implisiittinen jälkeläissuodatin valitsimen alussa.\n\n    Se tarkoittaa, ettei ole tarpeen valita jokaista varjo-isäntää, avata sen varjorakennetta ja\n    valita seuraava varjo-isäntä, kunnes saavutetaan elementti, jota halutaan hallita.\n\n    === CSS:light ===\n\n    ``css:light``-moottori vastaa [https://developer.mozilla.org/en/docs/Web/API/Document/querySelector | Document.querySelector]\n    ja käyttäytyy CSS-spesifikaation mukaisesti.\n    Kuitenkaan se ei läpäise varjorakenteita.\n\n    ``css``-moottori etsii ensin elementtejä valo-domissa iterointijärjestyksessä,\n    ja sitten rekursiivisesti avoimien varjorakenteiden sisällä iterointijärjestyksessä. Se ei\n    etsi suljettujen varjorakenteiden tai iframien sisältä.\n\n    Esimerkit:\n\n    | <article>\n    |   <div>Valo-domissa</div>\n    |   <div slot='myslot'>Valo-domissa, mutta menee varjon paikkaan</div>\n    |   <open mode shadow root>\n    |       <div class='varjossa'>\n    |           <span class='sisältö'>\n    |               Varjo-domissa\n    |               <open mode shadow root>\n    |                   <li id='kohde'>Syvällä varjossa</li>\n    |               </open mode shadow root>\n    |           </span>\n    |       </div>\n    |       <slot name='myslot'></slot>\n    |   </open mode shadow root>\n    | </article>\n\n    Huomaa, että ``<open mode shadow root>`` ei ole html-elementti, vaan pikemminkin varjorakenne\n    luotu ``element.attachShadow({mode: 'open'})``.\n\n    - Sekä ``'css=article div'`` että ``'css:light=article div'`` vastaavat ensimmäistä ``<div>Valo-domissa</div>``.\n    - Sekä ``'css=article > div'`` että ``'css:light=article > div'`` vastaavat kahta ``div``-elementtiä, jotka ovat suoraan ``article``:n lapsia.\n    - ``'css=article .varjossa'`` vastaa ``<div class='varjossa'>``, läpäisemällä varjorakenteen, kun taas ``'css:light=article .varjossa'`` ei vastaa mitään.\n    - ``'css:light=article div > span'`` ei vastaa mitään, koska molemmat valo-dom ``div``-elementit eivät sisällä ``span``:ia.\n    - ``'css=article div > span'`` vastaa ``<span class='sisältö'>``, läpäisemällä varjorakenteen.\n    - ``'css=article > .varjossa'`` ei vastaa mitään, koska ``<div class='varjossa'>`` ei ole suora lapsi ``article``:lle\n    - ``'css:light=article > .varjossa'`` ei vastaa mitään.\n    - ``'css=article li#kohde'`` vastaa ``<li id='kohde'>Syvällä varjossa</li>``, läpäisemällä kaksi varjorakennetta.\n\n    '=== text:light ===\n\n    ``text``-moottori läpäisee varjo-rakenteet samalla tavalla kuin ``css``, kun taas ``text:light`` ei tee niin.\n    Teksti-moottori etsii ensin elementtejä valo-domissa iterointijärjestyksessä, ja sitten\n    rekursiivisesti avoimissa varjo-rakenteissa iterointijärjestyksessä. Se ei etsi\n    suljettujen varjo-rakenteiden tai iframien sisältä.\n\n    === id, data-testid, data-test-id, data-test ja niiden :light-vastineet ===\n\n    Attribuutti-moottorit valitsevat perustuen vastaavaan attribuutin arvoon.\n    Esimerkiksi: ``data-test-id=foo`` on vastaava kuin ``css=[data-test-id='foo']``,\n    ja ``id:light=foo`` on vastaava kuin ``css:light=[id='foo']``.\n\n    == Elementin viitteen syntaksi ==\n\n    On mahdollista saada viittaus paikannimeen käyttämällä `Get Element` ja `Get Elements` -avainsanoja.\n    Avainsanat eivät tallenna viitettä elementtiin HTML-dokumentissa, sen sijaan ne tallentavat viitteen Playwright\n    [https://playwright.dev/docs/api/class-locator|Locator]-objektiin. Tiivistettynä Locator tallentaa logiikan, miten\n    hakea kyseinen elementti sivulta. Joka kerta kun toiminto suoritetaan, paikannin etsii uudelleen elementit\n    sivulta. Tätä viitettä voidaan käyttää *ensimmäisenä* osana valitsimessa käyttämällä erityistä valitsimen\n    syntaksia `element=`, kuten tässä:\n\n    | ${viite}=    Get Element    .jokin_luokka\n    |            Click          ${viite} >> .jokin_alin     # Paikannin etsii elementin sivulta.\n    |            Click          ${viite} >> .toinen_alin    # Paikannin etsii jälleen elementin sivulta.\n\n    Esimerkin `.jokin_alin` ja `.toinen_alin` valitsimet ovat suhteessa ${viite}-viite-elementtiin. Huomaa, että\n    kehyslävistystä ei ole mahdollista suorittaa elementin viitteen kanssa.\n\n    = Väitteet =\n\n    Avainsanat, jotka hyväksyvät argumentit ``assertion_operator`` <`AssertionOperator`> ja ``assertion_expected``\n    voivat valinnaisesti väittää, että määritetty ehto pätee. Avainsanat palauttavat arvon myös, kun\n    väite suoritetaan avainsanalla.\n\n    Assert-yritää uudelleen ja epäonnistuu vain määritetyn aikakatkaisun jälkeen.\n    Katso `Tuo` ja ``retry_assertions_for`` (oletus on 1 sekunti) tämän aikakatkaisun määrittämiseksi.\n\n\n    %ASSERTION_TABLE%\n\n    Oletuksena avainsanat tarjoavat virheviestin, jos väite epäonnistuu.\n    Oletusvirhesanomat voidaan ylikirjoittaa ``message``-argumentilla.\n    ``message``-argumentti hyväksyy `{value}`, `{value_type}`, `{expected}` ja\n    `{expected_type}` [https://docs.python.org/3/library/stdtypes.html#str.format|muoto]-vaihtoehdot.\n    `{value}` on avainsanalla palautettu arvo ja `{expected}`\n    on käyttäjän määrittämä odotettu arvo, yleensä arvo ``assertion_expected``-argumentissa.\n    `{value_type}` ja\n    `{expected_type}` ovat tyyppimäärittelyjä `{value}` ja `{expected}`\n    argumenteista. Samankaltaisesti kuin Pythonissa\n    [https://docs.python.org/3/library/functions.html#type|type] palauttaa tyyppimäärittelyn.\n    Väitteet yrittävät uudelleen, kunnes ``timeout`` on vanhentunut, jos ne eivät läpäise.\n\n    Väitteen ``assertion_expected``-arvoa ei muunneta kirjastossa ja\n    sitä käytetään sellaisenaan. Siksi väitettä tehtäessä ``assertion_expected``\n    argumentin arvon ja avainsanalla palautetun arvon on oltava samaa tyyppiä. Jos tyypit\n    eivät ole samat, väite epäonnistuu. Esimerkiksi `Get Text` palauttaa aina merkkijonon\n    ja sitä on verrattava merkkijonoon, vaikka palautettu arvo näyttäisi\n    numerolta.\n\n    Muilla avainsanoilla on muita tiettyjä tyyppejä, joita ne palauttavat.\n    `Get Element Count` palauttaa aina kokonaisluvun.\n    `Get Bounding Box` ja `Get Viewport Size` voidaan suodattaa.\n    Ne palauttavat sanakirjan ilman suodatinta ja numeron, kun suodatetaan.\n    Nämä avainsanat tekevät automaattisen muunnoksen odotetulle arvolle, jos numero palautetaan.\n\n    * < pienempi tai suurempi > Merkkijonojen kanssa*\n    Merkkijonojen vertailu ``suurempi kuin`` tai ``pienempi kuin`` vertaa jokaista merkkiä,\n    aloittaen 0:sta siitä, missä se sijaitsee koodisivulla.\n    Esimerkki: ``A < Z``, ``Z < a``, ``ac < dc`\n    Se ei koskaan vertaa elementtien pituutta. Ei listoja eikä merkkijonoja.\n    Vertailu lopetetaan ensimmäiseen merkkiin, joka eroaa.\n    Esimerkit: ``'abcde' < 'abd'``, ``'100.000' < '2'``\n    Python 3:ssa ja siten myös Browserissa numeroita ei voi verrata\n    merkkijonojen kanssa suurempi tai pienempi operaattorin avulla.\n    Avainsanoissa, jotka palauttavat numeroita, annettu odotettu arvo muunnetaan automaattisesti\n    numeroksi ennen vertailua.\n\n\n    Getterit `Get Page State` ja `Get Browser Catalog` palauttavat sanakirjan. Sanakirjan arvoja voidaan suoraan väittää.\n    Kiinnitä huomiota mahdollisiin tyyppeihin, koska ne arvioidaan Pythonissa. Esimerkiksi:\n\n    | Get Page State    validate    2020 >= value['year']                     # Numeroiden vertailu\n    | Get Page State    validate    'TÄRKEÄ VIESTI!' == value['message']  # Merkkijonojen vertailu\n\n    == 'sitten' tai 'arvioi' sulkeuma ==\n\n    Avainsanat, jotka hyväksyvät argumentit ``assertion_operator`` ja ``assertion_expected``\n    voivat valinnaisesti käyttää myös ``sitten`` tai ``arvioi`` sulkeumaa muokatakseen palautettua arvoa\n    BuiltIn Evaluate -toiminnolla. Todelliseen arvoon voidaan päästä käsiksi ``value``:lla.\n\n    Esimerkiksi ``Get Title  sitten  'OTSIKKO: '+value``.\n    Katso\n    [https://robotframework.org/robotframework/latest/libraries/BuiltIn.html#Evaluating%20expressions|\n    Builtin Evaluating expressions]\n    lisätietoja syntaksista.\n\n    == Esimerkit ==\n\n    | # *Avainsana*    *Valitsin*                    *Avain*        *Väiteoperaattori*    *Odotettu väite*\n    | Get Title                                           equal                 Sivun otsikko\n    | Get Title                                           ^=                    Sivu\n    | Get Style    //*[@id='div-element']      leveys      >                     100\n    | Get Title                                           matches               \\\\w+\\\\s\\\\w+\n    | Get Title                                           validate              arvo == 'Kirjautumissivu'\n    | Get Title                                           evaluate              arvo jos arvo == 'jokin arvo' muuten 'jotain muuta'\n\n\n    = Implisiittinen odottaminen =\n\n    Selaimen kirjastolla ja Playwrightillä on monia mekanismeja auttamaan odottamisessa elementtien kohdalla.\n    Playwright odottaa automaattisesti ennen kuin suorittaa toimintoja elementeillä.\n    Lisätietoja on saatavilla [https://playwright.dev/docs/actionability/ | Playwrightin dokumentaatiosta]\n    auto-odotuksesta.\n\n    Lisäksi Playwrightin automaattisen odotuksen lisäksi Browserin väitteet odottavat ja yrittävät uudelleen\n    määritellyn ajan ennen kuin epäonnistuvat mistään `Väitteistä`.\n    Aika määritellään Browser-kirjaston alustuksessa ``retry_assertions_for``-parametrilla.\n\n    Browser-kirjastoon sisältyy myös eksplisiittisiä odotusavainsanoja, kuten `Wait for Elements State`,\n    jos tarvitaan enemmän kontrollia odottamiseen.\n\n    = Kokeellinen: Samaa node-prosessia käyttäminen =\n\n    Browser-kirjasto on integroitu Node.js:ään ja Pythoniin. NodeJS-puoli voidaan myös suorittaa itsenäisenä prosessina.\n    Browser-kirjastot, jotka toimivat samalla koneella, voivat kommunikoida sen kanssa sen sijaan, että ne käynnistävät uusia node-prosesseja.\n    Tämä voi nopeuttaa suoritusta, kun testejä suoritetaan rinnakkain.\n    Node-puolen käynnistämiseksi aja hakemistossa, jossa Browser-paketti on\n    ``PLAYWRIGHT_BROWSERS_PATH=0 node Browser/wrapper/index.js PORT``.\n\n    ``PORT`` on portti, jota haluat käyttää node-prosessille.\n    Suorittaaksesi sitten testejä esimerkiksi pabotilla tee ``ROBOT_FRAMEWORK_BROWSER_NODE_PORT=PORT pabot ..``.\n\n    = Kokeellinen: Parametrien tarjoaminen node-prosessille =\n\n    Browser-kirjasto on integroitu Node.js:iin ja Pythoniin. Browser-kirjasto käynnistää node-prosessin kommunikoidakseen\n    Playwright API:n kanssa NodeJS-puolella. Käynnistetyn node-prosessin parametrien määrittäminen on mahdollista määrittelemällä\n    ROBOT_FRAMEWORK_BROWSER_NODE_DEBUG_OPTIONS-ympäristömuuttuja ennen testisuorituksen aloittamista. Esimerkiksi:\n    ``ROBOT_FRAMEWORK_BROWSER_NODE_DEBUG_OPTIONS=--inspect;robot polku/testeihin``.\n    Ympäristömuuttujaan voi määrittää useita argumentteja ja argumentit on erotettava pilkulla.\n\n    = Käyttöalan määrittely =\n\n    Joillakin kirjaston asetuksia manipuloivilla avainsanoilla on soveltamisala-argumentti.\n    Tällä soveltamisala-argumentilla voi asettaa kyseisen asetuksen 'elinaikaa'.\n    Käytettävissä olevat soveltamisalat ovat: `Global`, `Suite` ja `Test`/`Task`\n    Katso `Scope`.\n    Kun soveltamisala päättyy, tätä soveltamisalaa, kuten aikakatkaisua, ei enää käytetä.\n\n    Elinaikojen määrittely:\n    - `Global`-soveltamisala elää ikuisesti, kunnes se korvataan toisella `Global`-soveltamisalalla. Tai sitä voidaan paikallisesti väliaikaisesti ohittaa kapeammalla soveltamisalalla.\n    - `Suite`-soveltamisala korvaa paikallisesti `Global`-soveltamisalan ja elää siihen liittyvän Suite-luokan loppuun asti, tai jos sitä korvataan myöhemmällä asetuksella `Global`- tai samalla soveltamisalalla. Ala-sarjat perivät asetuksen yläsarjalta, mutta voivat myös omata oman paikallisen `Suite`-asetuksen, joka periytyy sen alasarjoille.\n    - `Test`- tai `Task`-soveltamisala peritään sen yläsarjalta, mutta kun se on asetettu, se elää kyseisen testin tai tehtävän loppuun asti.\n\n    Uuden asetuksen korkeamman asteen soveltamisala poistaa aina alemman asteen soveltamisalan, joka saattaa olla vastuussa.\n    Joten `Suite`-soveltamisalan asetus testistä asettaa kyseisen soveltamisalan robot-tiedoston Suite-luokkaan, jossa kyseinen testi on, ja poistaa mahdollisen `Test`-soveltamisalan, joka saattaa olla voimassa.\n\n    = Selainkirjaston laajentaminen JavaScript-moduulilla =\n\n    Selainkirjastoa voidaan laajentaa JavaScriptillä. Moduulin on oltava CommonJS-muodossa, jota Node.js käyttää.\n    Voit kääntää ES6-moduulisi Node.js CommonJS-tyyliin Babylle. Monia muita kieliä\n    voidaan myös kääntää moduuleiksi, joita voidaan käyttää Node.js:stä. Esimerkiksi TypeScript, PureScript ja\n    ClojureScript mainitakseni muutamia.\n\n    | async function myGoToKeyword(url, args, page, logger, playwright) {\n    |   logger(args.toString())\n    |   playwright.coolNewFeature()\n    |   return await page.goto(url);\n    | }\n\n    Funktiot voivat sisältää minkä tahansa määrän argumentteja ja argumenteilla voi olla oletusarvoja.\n\n    Joitakin varattuja argumentteja, joille ei ole pääsyä Robot Frameworkin puolelta, on olemassa.\n    Ne injektoidaan funktioon, jos ne ovat argumenteissa:\n\n    ``page``: [https://playwright.dev/docs/api/class-page|playwright-sivun objekti].\n\n    ``args``: loput arvot Robot Frameworkin avainsanakutsusta ``*args``.\n\n    ``logger``: takaisinkutsufunktio, joka ottaa merkkijonot argumenteiksi ja kirjoittaa ne robottilogiin. Sitä voidaan kutsua useita kertoja.\n\n    ``playwright``: playwright-moduuli (* from 'playwright'). Hyödyllinen yhdistettäväksi Playwright-ominaisuuksiin, joita Selainkirjasto ei tue omilla avainsanoillaan. [https://playwright.dev/docs/api/class-playwright| API-dokumentit]\n\n    myös argumenttinimeä ``self`` ei voi käyttää.\n\n    == Esimerkkimoduuli.js ==\n\n    | async function myGoToKeyword(pageUrl, page) {\n    |   await page.goto(pageUrl);\n    |   return await page.title();\n    | }\n    | exports.__esModule = true;\n    | exports.myGoToKeyword = myGoToKeyword;\n\n    == Esimerkki Robot Framework -puolelta ==\n\n    | *** Asetukset ***\n    | Kirjasto   Browser  jsextension=${CURDIR}/module.js\n    |\n    | *** Testitapaukset ***\n    | Hei\n    |   Uusi sivu\n    |   ${title}=  myGoToKeyword  https://playwright.dev\n    |   Täytyy olla yhtä suuri  ${title}  Playwright\n\n    Myös valitsinsyntaksia voidaan laajentaa mukautetulla valitsimella käyttäen js-moduulia\n\n    == Esimerkkimoduuliavainsana mukautetun valitsimen rekisteröimiseksi ==\n\n    | async function registerMySelector(playwright) {\n    | playwright.selectors.register('myselector', () => ({\n    |    // Palauttaa ensimmäisen elementin, joka vastaa annettua valitsinta juuren alipuussa.\n    |    query(root, selector) {\n    |       return root.querySelector(`a[data-title='${selector}']`);\n    |     },\n    |\n    |     // Palauttaa kaikki annetun valitsimen vastaavat elementit juuren alipuussa.\n    |     queryAll(root, selector) {\n    |       return Array.from(root.querySelectorAll(`a[data-title='${selector}']`));\n    |     }\n    | }));\n    | return 1;\n    | }\n    | exports.__esModule = true;\n    | exports.registerMySelector = registerMySelector;\n\n    = Liitännäiset =\n\n    Selainkirjasto tarjoaa liitännäisiä tapana muokata ja lisätä kirjaston avainsanoja ja muokata joitakin sisäisiä\n    toimintoja ilman uuden kirjaston luomista tai lähdekoodin muokkaamista. Katso liitännäisen API\n    [https://github.com/MarketSquare/robotframework-browser/blob/main/docs/plugins/README.md | dokumentaatio] lisätietoja varten.\n\n    = Kieli =\n\n    Selainkirjasto tarjoaa mahdollisuuden kääntää avainsanojen nimiä ja dokumentaatiota uudelle kielelle. Jos kieli\n    on määritetty, Selainkirjasto etsii\n    [https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#module-search-path | moduulien hakupolusta]\n    Python-paketteja, jotka alkavat `robotframework_browser_translation`:lla käyttäen\n    [https://packaging.python.org/en/latest/guides/creating-and-discovering-plugins/ | Python-liitännäis-APIa]. Kirjasto\n    käyttää nimeämismerkintää löytääkseen Python-liitännäiset. Pakettien on toteutettava yksittäinen API-kutsu, `get_language`\n    ilman argumentteja. Menetelmän on palautettava sanakirja, joka sisältää kaksi avainta: `language` ja `path`. Kieli\n    avaimen arvo määrittelee, minkä kielen paketti sisältää. Myös arvon tulisi vastata (kirjoitusvirheherkkää)\n    kirjaston alustus `language`-parametria. Polun parametrin arvon tulisi olla täysi polku käännöstiedostoon.\n    Tiedoston nimi tai laajennus ei ole tärkeä, mutta tiedon on oltava json-muodossa. Json-avaimet ovat\n    metodien nimiä, eivät avainsanojen nimiä, jotka toteuttavat avainsanat. Avaimen arvo on json-objekti, joka sisältää\n    kaksi avainta: `name` ja `doc`. `name`-avain sisältää käännetyn avainsanan nimen ja `doc` sisältää avainsanan\n    käännetyn dokumentaation. Dokumentaation ja nimen tarjoaminen on valinnainen, esimerkkikäännöksen json-tiedosto voi tarjota\n    käännökset vain avainsanojen nimiin tai vain dokumentaatioon. On kuitenkin aina suositeltavaa tarjota käännös\n    sekä nimelle että dokalle.\n\n    Oletuskäännöstiedosto, englannin kielellä, voidaan luoda suorittamalla\n    `rfbrowser translation /path/to/translation.json` komento. Komento ei tarjoa käännöksiä muille\n    kielille, se tarjoaa vain helpon tavan luoda täydellinen lista käännettyjä avainsanoja ja niiden dokumentaatioita\n    oikeassa muodossa. On myös mahdollista lisätä avainsanoja kirjaston liitännäisistä ja js-laajennuksista\n    antamalla `--plugings` ja `--jsextension`-argumentit komennolle. Esimerkki:\n    `rfbrowser translation --plugings myplugin.SomePlugin --jsextension /path/ot/jsplugin.js /path/to/translation.json`\n    "
    }
}